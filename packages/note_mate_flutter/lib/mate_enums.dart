// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/animation.dart';
import 'package:flutter/scheduler.dart';
import 'dart:ui';
import 'package:flutter/foundation.dart';
import 'dart:io';
import 'package:flutter/physics.dart';
import 'package:flutter/semantics.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/services.dart';
import 'package:meta/meta_meta.dart';
import 'package:flutter/material.dart';
import 'package:material_color_utilities/material_color_utilities.dart';
import 'package:note/mate.dart';

EnumRegister registerEnum() {
  EnumRegister result = EnumRegister();
  result[AnimationStatus] = AnimationStatus.values;
  result[AnimationBehavior] = AnimationBehavior.values;
  result[SchedulerPhase] = SchedulerPhase.values;
  result[AppLifecycleState] = AppLifecycleState.values;
  result[SchedulerServiceExtensions] = SchedulerServiceExtensions.values;
  result[KeyEventType] = KeyEventType.values;
  result[BlendMode] = BlendMode.values;
  result[FilterQuality] = FilterQuality.values;
  result[StrokeCap] = StrokeCap.values;
  result[StrokeJoin] = StrokeJoin.values;
  result[PaintingStyle] = PaintingStyle.values;
  result[Clip] = Clip.values;
  result[ImageByteFormat] = ImageByteFormat.values;
  result[PixelFormat] = PixelFormat.values;
  result[PathFillType] = PathFillType.values;
  result[PathOperation] = PathOperation.values;
  result[BlurStyle] = BlurStyle.values;
  result[TileMode] = TileMode.values;
  result[VertexMode] = VertexMode.values;
  result[PointMode] = PointMode.values;
  result[ClipOp] = ClipOp.values;
  result[FramePhase] = FramePhase.values;
  result[DisplayFeatureType] = DisplayFeatureType.values;
  result[DisplayFeatureState] = DisplayFeatureState.values;
  result[DartPerformanceMode] = DartPerformanceMode.values;
  result[PointerChange] = PointerChange.values;
  result[PointerDeviceKind] = PointerDeviceKind.values;
  result[PointerSignalKind] = PointerSignalKind.values;
  result[PointerPreferredStylusAuxiliaryAction] = PointerPreferredStylusAuxiliaryAction.values;
  result[FontStyle] = FontStyle.values;
  result[TextAlign] = TextAlign.values;
  result[TextBaseline] = TextBaseline.values;
  result[TextDecorationStyle] = TextDecorationStyle.values;
  result[TextLeadingDistribution] = TextLeadingDistribution.values;
  result[TextDirection] = TextDirection.values;
  result[TextAffinity] = TextAffinity.values;
  result[BoxHeightStyle] = BoxHeightStyle.values;
  result[BoxWidthStyle] = BoxWidthStyle.values;
  result[PlaceholderAlignment] = PlaceholderAlignment.values;
  result[Brightness] = Brightness.values;
  result[DiagnosticLevel] = DiagnosticLevel.values;
  result[DiagnosticsTreeStyle] = DiagnosticsTreeStyle.values;
  result[TargetPlatform] = TargetPlatform.values;
  result[FoundationServiceExtensions] = FoundationServiceExtensions.values;
  result[HttpClientResponseCompressionState] = HttpClientResponseCompressionState.values;
  result[SpringType] = SpringType.values;
  result[DebugSemanticsDumpOrder] = DebugSemanticsDumpOrder.values;
  result[Assertiveness] = Assertiveness.values;
  result[CupertinoDatePickerMode] = CupertinoDatePickerMode.values;
  result[CupertinoTimerPickerMode] = CupertinoTimerPickerMode.values;
  result[CupertinoUserInterfaceLevelData] = CupertinoUserInterfaceLevelData.values;
  result[CupertinoListSectionType] = CupertinoListSectionType.values;
  result[DatePickerDateTimeOrder] = DatePickerDateTimeOrder.values;
  result[DatePickerDateOrder] = DatePickerDateOrder.values;
  result[RefreshIndicatorMode] = RefreshIndicatorMode.values;
  result[SmartDashesType] = SmartDashesType.values;
  result[SmartQuotesType] = SmartQuotesType.values;
  result[OverlayVisibilityMode] = OverlayVisibilityMode.values;
  result[TextInputAction] = TextInputAction.values;
  result[TextCapitalization] = TextCapitalization.values;
  result[TextSelectionHandleType] = TextSelectionHandleType.values;
  result[CrossFadeState] = CrossFadeState.values;
  result[ConnectionState] = ConnectionState.values;
  result[AutofillContextAction] = AutofillContextAction.values;
  result[BannerLocation] = BannerLocation.values;
  result[RenderComparison] = RenderComparison.values;
  result[Axis] = Axis.values;
  result[VerticalDirection] = VerticalDirection.values;
  result[AxisDirection] = AxisDirection.values;
  result[BorderStyle] = BorderStyle.values;
  result[BoxShape] = BoxShape.values;
  result[BoxFit] = BoxFit.values;
  result[ImageRepeat] = ImageRepeat.values;
  result[FlutterLogoStyle] = FlutterLogoStyle.values;
  result[ResizeImagePolicy] = ResizeImagePolicy.values;
  result[TextOverflow] = TextOverflow.values;
  result[TextWidthBasis] = TextWidthBasis.values;
  result[FlexFit] = FlexFit.values;
  result[MainAxisSize] = MainAxisSize.values;
  result[MainAxisAlignment] = MainAxisAlignment.values;
  result[CrossAxisAlignment] = CrossAxisAlignment.values;
  result[HitTestBehavior] = HitTestBehavior.values;
  result[DecorationPosition] = DecorationPosition.values;
  result[StackFit] = StackFit.values;
  result[WrapAlignment] = WrapAlignment.values;
  result[WrapCrossAlignment] = WrapCrossAlignment.values;
  result[ContextMenuButtonType] = ContextMenuButtonType.values;
  result[DismissDirection] = DismissDirection.values;
  result[SelectionChangedCause] = SelectionChangedCause.values;
  result[KeyEventResult] = KeyEventResult.values;
  result[UnfocusDisposition] = UnfocusDisposition.values;
  result[FocusHighlightMode] = FocusHighlightMode.values;
  result[FocusHighlightStrategy] = FocusHighlightStrategy.values;
  result[TraversalDirection] = TraversalDirection.values;
  result[TraversalEdgeBehavior] = TraversalEdgeBehavior.values;
  result[AutovalidateMode] = AutovalidateMode.values;
  result[HeroFlightDirection] = HeroFlightDirection.values;
  result[PanAxis] = PanAxis.values;
  result[Orientation] = Orientation.values;
  result[NavigationMode] = NavigationMode.values;
  result[RoutePopDisposition] = RoutePopDisposition.values;
  result[OverflowBarAlignment] = OverflowBarAlignment.values;
  result[PlatformProvidedMenuItemType] = PlatformProvidedMenuItemType.values;
  result[RouteInformationReportingType] = RouteInformationReportingType.values;
  result[AndroidOverscrollIndicator] = AndroidOverscrollIndicator.values;
  result[ScrollDecelerationRate] = ScrollDecelerationRate.values;
  result[ScrollPositionAlignmentPolicy] = ScrollPositionAlignmentPolicy.values;
  result[ScrollViewKeyboardDismissBehavior] = ScrollViewKeyboardDismissBehavior.values;
  result[ScrollIncrementType] = ScrollIncrementType.values;
  result[ScrollbarOrientation] = ScrollbarOrientation.values;
  result[WidgetsServiceExtensions] = WidgetsServiceExtensions.values;
  result[WidgetInspectorServiceExtensions] = WidgetInspectorServiceExtensions.values;
  result[SnapshotMode] = SnapshotMode.values;
  result[TableCellVerticalAlignment] = TableCellVerticalAlignment.values;
  result[ClipboardStatus] = ClipboardStatus.values;
  result[GrowthDirection] = GrowthDirection.values;
  result[RenderAnimatedSizeState] = RenderAnimatedSizeState.values;
  result[PerformanceOverlayOption] = PerformanceOverlayOption.values;
  result[PlatformViewHitTestBehavior] = PlatformViewHitTestBehavior.values;
  result[SelectionResult] = SelectionResult.values;
  result[SelectionEventType] = SelectionEventType.values;
  result[TextGranularity] = TextGranularity.values;
  result[SelectionExtendDirection] = SelectionExtendDirection.values;
  result[SelectionStatus] = SelectionStatus.values;
  result[RenderingServiceExtensions] = RenderingServiceExtensions.values;
  result[CacheExtentStyle] = CacheExtentStyle.values;
  result[ScrollDirection] = ScrollDirection.values;
  result[GestureDisposition] = GestureDisposition.values;
  result[DragStartBehavior] = DragStartBehavior.values;
  result[GestureRecognizerState] = GestureRecognizerState.values;
  result[KeyDataTransitMode] = KeyDataTransitMode.values;
  result[KeyboardLockMode] = KeyboardLockMode.values;
  result[KeyboardSide] = KeyboardSide.values;
  result[ModifierKey] = ModifierKey.values;
  result[ServicesServiceExtensions] = ServicesServiceExtensions.values;
  result[DeviceOrientation] = DeviceOrientation.values;
  result[SystemUiOverlay] = SystemUiOverlay.values;
  result[SystemUiMode] = SystemUiMode.values;
  result[SystemSoundType] = SystemSoundType.values;
  result[MaxLengthEnforcement] = MaxLengthEnforcement.values;
  result[FloatingCursorDragState] = FloatingCursorDragState.values;
  result[TargetKind] = TargetKind.values;
  result[ThemeMode] = ThemeMode.values;
  result[MaterialBannerClosedReason] = MaterialBannerClosedReason.values;
  result[BottomNavigationBarType] = BottomNavigationBarType.values;
  result[BottomNavigationBarLandscapeLayout] = BottomNavigationBarLandscapeLayout.values;
  result[ButtonTextTheme] = ButtonTextTheme.values;
  result[ButtonBarLayoutBehavior] = ButtonBarLayoutBehavior.values;
  result[DatePickerEntryMode] = DatePickerEntryMode.values;
  result[DatePickerMode] = DatePickerMode.values;
  result[DrawerAlignment] = DrawerAlignment.values;
  result[CollapseMode] = CollapseMode.values;
  result[StretchMode] = StretchMode.values;
  result[FloatingLabelBehavior] = FloatingLabelBehavior.values;
  result[ListTileStyle] = ListTileStyle.values;
  result[ListTileControlAffinity] = ListTileControlAffinity.values;
  result[ListTileTitleAlignment] = ListTileTitleAlignment.values;
  result[MaterialType] = MaterialType.values;
  result[MaterialState] = MaterialState.values;
  result[NavigationDestinationLabelBehavior] = NavigationDestinationLabelBehavior.values;
  result[NavigationRailLabelType] = NavigationRailLabelType.values;
  result[PopupMenuPosition] = PopupMenuPosition.values;
  result[RefreshIndicatorTriggerMode] = RefreshIndicatorTriggerMode.values;
  result[ShowValueIndicator] = ShowValueIndicator.values;
  result[Thumb] = Thumb.values;
  result[SnackBarClosedReason] = SnackBarClosedReason.values;
  result[SnackBarBehavior] = SnackBarBehavior.values;
  result[StepState] = StepState.values;
  result[StepperType] = StepperType.values;
  result[TabBarIndicatorSize] = TabBarIndicatorSize.values;
  result[MaterialTapTargetSize] = MaterialTapTargetSize.values;
  result[DayPeriod] = DayPeriod.values;
  result[TimeOfDayFormat] = TimeOfDayFormat.values;
  result[HourFormat] = HourFormat.values;
  result[TimePickerEntryMode] = TimePickerEntryMode.values;
  result[TooltipTriggerMode] = TooltipTriggerMode.values;
  result[ScriptCategory] = ScriptCategory.values;
  result[Direction] = Direction.values;
  return result;
}
