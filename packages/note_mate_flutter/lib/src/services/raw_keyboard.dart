// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/services/raw_keyboard.dart' as _i1;
import 'package:note/mate.dart' as _i2;

/// class RawKeyDownEvent extends RawKeyEvent
class RawKeyDownEvent$Mate extends _i1.RawKeyDownEvent with _i2.Mate {
  /// RawKeyDownEvent RawKeyDownEvent({required RawKeyEventData data, String? character, bool repeat = false})
  RawKeyDownEvent$Mate({
    /// optionalParameters: {required RawKeyEventData data} , default:none
    required _i1.RawKeyEventData data,

    /// optionalParameters: {String? character} , default:none
    String? character,

    /// optionalParameters: {bool repeat = false} , default:processed=BooleanLiteralImpl
    bool repeat = false,
  }) : super(
          data: data,
          character: character,
          repeat: repeat,
        ) {
    mateBuilderName = 'RawKeyDownEvent';
    matePackageUrl = 'package:flutter/services.dart';
    mateBuilder = (p) => RawKeyDownEvent$Mate(
          data: p.get('data').build(),
          character: p.get('character').build(),
          repeat: p.get('repeat').build(),
        );
    mateUse(
      'data',
      data,
      isNamed: true,
    );
    mateUse(
      'character',
      character,
      isNamed: true,
    );
    mateUse(
      'repeat',
      repeat,
      isNamed: true,
      defaultValue: false,
    );
  }
}

/// class RawKeyUpEvent extends RawKeyEvent
class RawKeyUpEvent$Mate extends _i1.RawKeyUpEvent with _i2.Mate {
  /// RawKeyUpEvent RawKeyUpEvent({required RawKeyEventData data, String? character})
  RawKeyUpEvent$Mate({
    /// optionalParameters: {required RawKeyEventData data} , default:none
    required _i1.RawKeyEventData data,

    /// optionalParameters: {String? character} , default:none
    String? character,
  }) : super(
          data: data,
          character: character,
        ) {
    mateBuilderName = 'RawKeyUpEvent';
    matePackageUrl = 'package:flutter/services.dart';
    mateBuilder = (p) => RawKeyUpEvent$Mate(
          data: p.get('data').build(),
          character: p.get('character').build(),
        );
    mateUse(
      'data',
      data,
      isNamed: true,
    );
    mateUse(
      'character',
      character,
      isNamed: true,
    );
  }
}
