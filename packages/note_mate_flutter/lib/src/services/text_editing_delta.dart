// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/services/text_editing_delta.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/services/text_editing.dart' as _i3;
import 'dart:ui' as _i4;

/// class TextEditingDeltaInsertion extends TextEditingDelta
class TextEditingDeltaInsertion$Mate extends _i1.TextEditingDeltaInsertion with _i2.Mate {
  /// TextEditingDeltaInsertion TextEditingDeltaInsertion({required String oldText, required String textInserted, required int insertionOffset, required TextSelection selection, required TextRange composing})
  TextEditingDeltaInsertion$Mate({
    /// optionalParameters: {required String oldText} , default:none
    required String oldText,

    /// optionalParameters: {required String textInserted} , default:none
    required String textInserted,

    /// optionalParameters: {required int insertionOffset} , default:none
    required int insertionOffset,

    /// optionalParameters: {required TextSelection selection} , default:none
    required _i3.TextSelection selection,

    /// optionalParameters: {required TextRange composing} , default:none
    required _i4.TextRange composing,
  }) : super(
          oldText: oldText,
          textInserted: textInserted,
          insertionOffset: insertionOffset,
          selection: selection,
          composing: composing,
        ) {
    mateBuilderName = 'TextEditingDeltaInsertion';
    matePackageUrl = 'package:flutter/services.dart';
    mateBuilder = (p) => TextEditingDeltaInsertion$Mate(
          oldText: p.get('oldText').build(),
          textInserted: p.get('textInserted').build(),
          insertionOffset: p.get('insertionOffset').build(),
          selection: p.get('selection').build(),
          composing: p.get('composing').build(),
        );
    mateUse(
      'oldText',
      oldText,
      isNamed: true,
    );
    mateUse(
      'textInserted',
      textInserted,
      isNamed: true,
    );
    mateUse(
      'insertionOffset',
      insertionOffset,
      isNamed: true,
    );
    mateUse(
      'selection',
      selection,
      isNamed: true,
    );
    mateUse(
      'composing',
      composing,
      isNamed: true,
    );
  }
}

/// class TextEditingDeltaDeletion extends TextEditingDelta
class TextEditingDeltaDeletion$Mate extends _i1.TextEditingDeltaDeletion with _i2.Mate {
  /// TextEditingDeltaDeletion TextEditingDeltaDeletion({required String oldText, required TextRange deletedRange, required TextSelection selection, required TextRange composing})
  TextEditingDeltaDeletion$Mate({
    /// optionalParameters: {required String oldText} , default:none
    required String oldText,

    /// optionalParameters: {required TextRange deletedRange} , default:none
    required _i4.TextRange deletedRange,

    /// optionalParameters: {required TextSelection selection} , default:none
    required _i3.TextSelection selection,

    /// optionalParameters: {required TextRange composing} , default:none
    required _i4.TextRange composing,
  }) : super(
          oldText: oldText,
          deletedRange: deletedRange,
          selection: selection,
          composing: composing,
        ) {
    mateBuilderName = 'TextEditingDeltaDeletion';
    matePackageUrl = 'package:flutter/services.dart';
    mateBuilder = (p) => TextEditingDeltaDeletion$Mate(
          oldText: p.get('oldText').build(),
          deletedRange: p.get('deletedRange').build(),
          selection: p.get('selection').build(),
          composing: p.get('composing').build(),
        );
    mateUse(
      'oldText',
      oldText,
      isNamed: true,
    );
    mateUse(
      'deletedRange',
      deletedRange,
      isNamed: true,
    );
    mateUse(
      'selection',
      selection,
      isNamed: true,
    );
    mateUse(
      'composing',
      composing,
      isNamed: true,
    );
  }
}

/// class TextEditingDeltaReplacement extends TextEditingDelta
class TextEditingDeltaReplacement$Mate extends _i1.TextEditingDeltaReplacement with _i2.Mate {
  /// TextEditingDeltaReplacement TextEditingDeltaReplacement({required String oldText, required String replacementText, required TextRange replacedRange, required TextSelection selection, required TextRange composing})
  TextEditingDeltaReplacement$Mate({
    /// optionalParameters: {required String oldText} , default:none
    required String oldText,

    /// optionalParameters: {required String replacementText} , default:none
    required String replacementText,

    /// optionalParameters: {required TextRange replacedRange} , default:none
    required _i4.TextRange replacedRange,

    /// optionalParameters: {required TextSelection selection} , default:none
    required _i3.TextSelection selection,

    /// optionalParameters: {required TextRange composing} , default:none
    required _i4.TextRange composing,
  }) : super(
          oldText: oldText,
          replacementText: replacementText,
          replacedRange: replacedRange,
          selection: selection,
          composing: composing,
        ) {
    mateBuilderName = 'TextEditingDeltaReplacement';
    matePackageUrl = 'package:flutter/services.dart';
    mateBuilder = (p) => TextEditingDeltaReplacement$Mate(
          oldText: p.get('oldText').build(),
          replacementText: p.get('replacementText').build(),
          replacedRange: p.get('replacedRange').build(),
          selection: p.get('selection').build(),
          composing: p.get('composing').build(),
        );
    mateUse(
      'oldText',
      oldText,
      isNamed: true,
    );
    mateUse(
      'replacementText',
      replacementText,
      isNamed: true,
    );
    mateUse(
      'replacedRange',
      replacedRange,
      isNamed: true,
    );
    mateUse(
      'selection',
      selection,
      isNamed: true,
    );
    mateUse(
      'composing',
      composing,
      isNamed: true,
    );
  }
}

/// class TextEditingDeltaNonTextUpdate extends TextEditingDelta
class TextEditingDeltaNonTextUpdate$Mate extends _i1.TextEditingDeltaNonTextUpdate with _i2.Mate {
  /// TextEditingDeltaNonTextUpdate TextEditingDeltaNonTextUpdate({required String oldText, required TextSelection selection, required TextRange composing})
  TextEditingDeltaNonTextUpdate$Mate({
    /// optionalParameters: {required String oldText} , default:none
    required String oldText,

    /// optionalParameters: {required TextSelection selection} , default:none
    required _i3.TextSelection selection,

    /// optionalParameters: {required TextRange composing} , default:none
    required _i4.TextRange composing,
  }) : super(
          oldText: oldText,
          selection: selection,
          composing: composing,
        ) {
    mateBuilderName = 'TextEditingDeltaNonTextUpdate';
    matePackageUrl = 'package:flutter/services.dart';
    mateBuilder = (p) => TextEditingDeltaNonTextUpdate$Mate(
          oldText: p.get('oldText').build(),
          selection: p.get('selection').build(),
          composing: p.get('composing').build(),
        );
    mateUse(
      'oldText',
      oldText,
      isNamed: true,
    );
    mateUse(
      'selection',
      selection,
      isNamed: true,
    );
    mateUse(
      'composing',
      composing,
      isNamed: true,
    );
  }
}
