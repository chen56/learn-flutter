// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/services/message_codec.dart' as _i1;
import 'package:note/mate.dart' as _i2;

/// class MethodCall
class MethodCall$Mate extends _i1.MethodCall with _i2.Mate {
  /// MethodCall MethodCall(String method, [dynamic arguments])
  MethodCall$Mate(
    /// requiredParameters: String method
    String method,

    /// requiredParameters: [dynamic arguments]
    dynamic arguments,
  ) : super(
          method,
          arguments,
        ) {
    mateBuilderName = 'MethodCall';
    matePackageUrl = 'package:flutter/services.dart';
    mateBuilder = (p) => MethodCall$Mate(
          p.get('method').value,
          p.get('arguments').value,
        );
    mateUse(
      'method',
      method,
      isNamed: false,
    );
    mateUse(
      'arguments',
      arguments,
      isNamed: false,
    );
  }
}

/// class PlatformException implements Exception
class PlatformException$Mate extends _i1.PlatformException with _i2.Mate {
  /// PlatformException PlatformException({required String code, String? message, dynamic details, String? stacktrace})
  PlatformException$Mate({
    /// optionalParameters: {required String code} , default:none
    required String code,

    /// optionalParameters: {String? message} , default:none
    String? message,

    /// optionalParameters: {dynamic details} , default:none
    dynamic details,

    /// optionalParameters: {String? stacktrace} , default:none
    String? stacktrace,
  }) : super(
          code: code,
          message: message,
          details: details,
          stacktrace: stacktrace,
        ) {
    mateBuilderName = 'PlatformException';
    matePackageUrl = 'package:flutter/services.dart';
    mateBuilder = (p) => PlatformException$Mate(
          code: p.get('code').build(),
          message: p.get('message').build(),
          details: p.get('details').build(),
          stacktrace: p.get('stacktrace').build(),
        );
    mateUse(
      'code',
      code,
      isNamed: true,
    );
    mateUse(
      'message',
      message,
      isNamed: true,
    );
    mateUse(
      'details',
      details,
      isNamed: true,
    );
    mateUse(
      'stacktrace',
      stacktrace,
      isNamed: true,
    );
  }
}

/// class MissingPluginException implements Exception
class MissingPluginException$Mate extends _i1.MissingPluginException with _i2.Mate {
  /// MissingPluginException MissingPluginException([String? message])
  MissingPluginException$Mate(

      /// requiredParameters: [String? message]
      String? message)
      : super(message) {
    mateBuilderName = 'MissingPluginException';
    matePackageUrl = 'package:flutter/services.dart';
    mateBuilder = (p) => MissingPluginException$Mate(p.get('message').value);
    mateUse(
      'message',
      message,
      isNamed: false,
    );
  }
}
