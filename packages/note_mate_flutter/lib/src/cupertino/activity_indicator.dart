// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/cupertino/activity_indicator.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'dart:ui' as _i4;

/// class CupertinoActivityIndicator extends StatefulWidget
class CupertinoActivityIndicator$Mate extends _i1.CupertinoActivityIndicator with _i2.Mate {
  /// CupertinoActivityIndicator CupertinoActivityIndicator({Key? key, Color? color, bool animating = true, double radius = _kDefaultIndicatorRadius})
  CupertinoActivityIndicator$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {Color? color} , default:none
    super.color,

    /// optionalParameters: {bool animating = true} , default:processed=BooleanLiteralImpl
    super.animating,

    /// optionalParameters: {double radius = _kDefaultIndicatorRadius} , default:unprocessed=SimpleIdentifierImpl
    super.radius,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'color': _i2.BuilderArg<_i4.Color?>(
            name: 'color',
            init: color,
            isNamed: true,
          ),
          'animating': _i2.BuilderArg<bool>(
            name: 'animating',
            init: animating,
            isNamed: true,
            defaultValue: true,
          ),
          'radius': _i2.BuilderArg<double>(
            name: 'radius',
            init: radius,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'CupertinoActivityIndicator';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoActivityIndicator$Mate(
          key: p.get('key').build(),
          color: p.get('color').build(),
          animating: p.get('animating').build(),
          radius: p.get('radius').build(),
        );
  }

  /// CupertinoActivityIndicator CupertinoActivityIndicator.partiallyRevealed({Key? key, Color? color, double radius = _kDefaultIndicatorRadius, double progress = 1.0})
  CupertinoActivityIndicator$Mate.partiallyRevealed({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {Color? color} , default:none
    super.color,

    /// optionalParameters: {double radius = _kDefaultIndicatorRadius} , default:unprocessed=SimpleIdentifierImpl
    super.radius,

    /// optionalParameters: {double progress = 1.0} , default:processed=DoubleLiteralImpl
    super.progress,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'color': _i2.BuilderArg<_i4.Color?>(
            name: 'color',
            init: color,
            isNamed: true,
          ),
          'radius': _i2.BuilderArg<double>(
            name: 'radius',
            init: radius,
            isNamed: true,
          ),
          'progress': _i2.BuilderArg<double>(
            name: 'progress',
            init: progress,
            isNamed: true,
            defaultValue: 1.0,
          ),
        },
        super.partiallyRevealed() {
    mateBuilderName = 'CupertinoActivityIndicator.partiallyRevealed';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoActivityIndicator$Mate.partiallyRevealed(
          key: p.get('key').build(),
          color: p.get('color').build(),
          radius: p.get('radius').build(),
          progress: p.get('progress').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
