// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/cupertino/theme.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/widgets/framework.dart' as _i4;
import 'dart:ui' as _i5;
import 'package:flutter/src/cupertino/text_theme.dart' as _i6;

/// class CupertinoTheme extends StatelessWidget
class CupertinoTheme$Mate extends _i1.CupertinoTheme with _i2.Mate {
  /// CupertinoTheme CupertinoTheme({Key? key, required CupertinoThemeData data, required Widget child})
  CupertinoTheme$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required CupertinoThemeData data} , default:none
    required super.data,

    /// optionalParameters: {required Widget child} , default:none
    required super.child,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'data': _i2.BuilderArg<_i1.CupertinoThemeData>(
            name: 'data',
            init: data,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i4.Widget>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'CupertinoTheme';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoTheme$Mate(
          key: p.get('key').build(),
          data: p.get('data').build(),
          child: p.get('child').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class CupertinoThemeData extends NoDefaultCupertinoThemeData with Diagnosticable
class CupertinoThemeData$Mate extends _i1.CupertinoThemeData with _i2.Mate {
  /// CupertinoThemeData CupertinoThemeData({Brightness? brightness, Color? primaryColor, Color? primaryContrastingColor, CupertinoTextThemeData? textTheme, Color? barBackgroundColor, Color? scaffoldBackgroundColor, bool? applyThemeToAll})
  CupertinoThemeData$Mate({
    /// optionalParameters: {Brightness? brightness} , default:none
    super.brightness,

    /// optionalParameters: {Color? primaryColor} , default:none
    super.primaryColor,

    /// optionalParameters: {Color? primaryContrastingColor} , default:none
    super.primaryContrastingColor,

    /// optionalParameters: {CupertinoTextThemeData? textTheme} , default:none
    super.textTheme,

    /// optionalParameters: {Color? barBackgroundColor} , default:none
    super.barBackgroundColor,

    /// optionalParameters: {Color? scaffoldBackgroundColor} , default:none
    super.scaffoldBackgroundColor,

    /// optionalParameters: {bool? applyThemeToAll} , default:none
    super.applyThemeToAll,
  })  : mateParams = {
          'brightness': _i2.BuilderArg<_i5.Brightness?>(
            name: 'brightness',
            init: brightness,
            isNamed: true,
          ),
          'primaryColor': _i2.BuilderArg<_i5.Color?>(
            name: 'primaryColor',
            init: primaryColor,
            isNamed: true,
          ),
          'primaryContrastingColor': _i2.BuilderArg<_i5.Color?>(
            name: 'primaryContrastingColor',
            init: primaryContrastingColor,
            isNamed: true,
          ),
          'textTheme': _i2.BuilderArg<_i6.CupertinoTextThemeData?>(
            name: 'textTheme',
            init: textTheme,
            isNamed: true,
          ),
          'barBackgroundColor': _i2.BuilderArg<_i5.Color?>(
            name: 'barBackgroundColor',
            init: barBackgroundColor,
            isNamed: true,
          ),
          'scaffoldBackgroundColor': _i2.BuilderArg<_i5.Color?>(
            name: 'scaffoldBackgroundColor',
            init: scaffoldBackgroundColor,
            isNamed: true,
          ),
          'applyThemeToAll': _i2.BuilderArg<bool?>(
            name: 'applyThemeToAll',
            init: applyThemeToAll,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'CupertinoThemeData';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoThemeData$Mate(
          brightness: p.get('brightness').build(),
          primaryColor: p.get('primaryColor').build(),
          primaryContrastingColor: p.get('primaryContrastingColor').build(),
          textTheme: p.get('textTheme').build(),
          barBackgroundColor: p.get('barBackgroundColor').build(),
          scaffoldBackgroundColor: p.get('scaffoldBackgroundColor').build(),
          applyThemeToAll: p.get('applyThemeToAll').build(),
        );
  }

  /// CupertinoThemeData CupertinoThemeData.raw(Brightness? brightness, Color? primaryColor, Color? primaryContrastingColor, CupertinoTextThemeData? textTheme, Color? barBackgroundColor, Color? scaffoldBackgroundColor, bool? applyThemeToAll)
  CupertinoThemeData$Mate.raw(
    /// requiredParameters: Brightness? brightness
    super.brightness,

    /// requiredParameters: Color? primaryColor
    super.primaryColor,

    /// requiredParameters: Color? primaryContrastingColor
    super.primaryContrastingColor,

    /// requiredParameters: CupertinoTextThemeData? textTheme
    super.textTheme,

    /// requiredParameters: Color? barBackgroundColor
    super.barBackgroundColor,

    /// requiredParameters: Color? scaffoldBackgroundColor
    super.scaffoldBackgroundColor,

    /// requiredParameters: bool? applyThemeToAll
    super.applyThemeToAll,
  )   : mateParams = {
          'brightness': _i2.BuilderArg<_i5.Brightness?>(
            name: 'brightness',
            init: brightness,
            isNamed: false,
          ),
          'primaryColor': _i2.BuilderArg<_i5.Color?>(
            name: 'primaryColor',
            init: primaryColor,
            isNamed: false,
          ),
          'primaryContrastingColor': _i2.BuilderArg<_i5.Color?>(
            name: 'primaryContrastingColor',
            init: primaryContrastingColor,
            isNamed: false,
          ),
          'textTheme': _i2.BuilderArg<_i6.CupertinoTextThemeData?>(
            name: 'textTheme',
            init: textTheme,
            isNamed: false,
          ),
          'barBackgroundColor': _i2.BuilderArg<_i5.Color?>(
            name: 'barBackgroundColor',
            init: barBackgroundColor,
            isNamed: false,
          ),
          'scaffoldBackgroundColor': _i2.BuilderArg<_i5.Color?>(
            name: 'scaffoldBackgroundColor',
            init: scaffoldBackgroundColor,
            isNamed: false,
          ),
          'applyThemeToAll': _i2.BuilderArg<bool?>(
            name: 'applyThemeToAll',
            init: applyThemeToAll,
            isNamed: false,
          ),
        },
        super.raw() {
    mateBuilderName = 'CupertinoThemeData.raw';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoThemeData$Mate.raw(
          p.get('brightness').value,
          p.get('primaryColor').value,
          p.get('primaryContrastingColor').value,
          p.get('textTheme').value,
          p.get('barBackgroundColor').value,
          p.get('scaffoldBackgroundColor').value,
          p.get('applyThemeToAll').value,
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class NoDefaultCupertinoThemeData
class NoDefaultCupertinoThemeData$Mate extends _i1.NoDefaultCupertinoThemeData with _i2.Mate {
  /// NoDefaultCupertinoThemeData NoDefaultCupertinoThemeData({Brightness? brightness, Color? primaryColor, Color? primaryContrastingColor, CupertinoTextThemeData? textTheme, Color? barBackgroundColor, Color? scaffoldBackgroundColor, bool? applyThemeToAll})
  NoDefaultCupertinoThemeData$Mate({
    /// optionalParameters: {Brightness? brightness} , default:none
    super.brightness,

    /// optionalParameters: {Color? primaryColor} , default:none
    super.primaryColor,

    /// optionalParameters: {Color? primaryContrastingColor} , default:none
    super.primaryContrastingColor,

    /// optionalParameters: {CupertinoTextThemeData? textTheme} , default:none
    super.textTheme,

    /// optionalParameters: {Color? barBackgroundColor} , default:none
    super.barBackgroundColor,

    /// optionalParameters: {Color? scaffoldBackgroundColor} , default:none
    super.scaffoldBackgroundColor,

    /// optionalParameters: {bool? applyThemeToAll} , default:none
    super.applyThemeToAll,
  })  : mateParams = {
          'brightness': _i2.BuilderArg<_i5.Brightness?>(
            name: 'brightness',
            init: brightness,
            isNamed: true,
          ),
          'primaryColor': _i2.BuilderArg<_i5.Color?>(
            name: 'primaryColor',
            init: primaryColor,
            isNamed: true,
          ),
          'primaryContrastingColor': _i2.BuilderArg<_i5.Color?>(
            name: 'primaryContrastingColor',
            init: primaryContrastingColor,
            isNamed: true,
          ),
          'textTheme': _i2.BuilderArg<_i6.CupertinoTextThemeData?>(
            name: 'textTheme',
            init: textTheme,
            isNamed: true,
          ),
          'barBackgroundColor': _i2.BuilderArg<_i5.Color?>(
            name: 'barBackgroundColor',
            init: barBackgroundColor,
            isNamed: true,
          ),
          'scaffoldBackgroundColor': _i2.BuilderArg<_i5.Color?>(
            name: 'scaffoldBackgroundColor',
            init: scaffoldBackgroundColor,
            isNamed: true,
          ),
          'applyThemeToAll': _i2.BuilderArg<bool?>(
            name: 'applyThemeToAll',
            init: applyThemeToAll,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'NoDefaultCupertinoThemeData';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => NoDefaultCupertinoThemeData$Mate(
          brightness: p.get('brightness').build(),
          primaryColor: p.get('primaryColor').build(),
          primaryContrastingColor: p.get('primaryContrastingColor').build(),
          textTheme: p.get('textTheme').build(),
          barBackgroundColor: p.get('barBackgroundColor').build(),
          scaffoldBackgroundColor: p.get('scaffoldBackgroundColor').build(),
          applyThemeToAll: p.get('applyThemeToAll').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
