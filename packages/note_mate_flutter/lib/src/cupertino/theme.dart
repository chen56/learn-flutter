// /// Generated by gen_maters.dart, please don't edit! 

import 'package:flutter/src/cupertino/theme.dart';import 'package:flutter/src/foundation/key.dart';import 'package:flutter/src/widgets/framework.dart';import 'dart:ui';import 'package:flutter/src/cupertino/text_theme.dart';import 'dart:core';import 'package:note/mate.dart' show Mate;/// class CupertinoTheme extends StatelessWidget
class CupertinoTheme$Mate extends CupertinoTheme with Mate {/// CupertinoTheme CupertinoTheme({Key? key, required CupertinoThemeData data, required Widget child})
CupertinoTheme$Mate({/// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
Key? key, /// optionalParameters: {required CupertinoThemeData data} , hasDefaultValue:false, defaultValueCode:null
required CupertinoThemeData data, /// optionalParameters: {required Widget child} , hasDefaultValue:false, defaultValueCode:null
required Widget child, }) : super(key: key, data: data, child: child, ) { mateBuilder = (p) => CupertinoTheme$Mate(key: p.get('key').build(), data: p.get('data').build(), child: p.get('child').build(), );
matePut('key', key);
matePut('data', data);
matePut('child', child); }

 }
/// class CupertinoThemeData extends NoDefaultCupertinoThemeData with Diagnosticable
class CupertinoThemeData$Mate extends CupertinoThemeData with Mate {/// CupertinoThemeData CupertinoThemeData({Brightness? brightness, Color? primaryColor, Color? primaryContrastingColor, CupertinoTextThemeData? textTheme, Color? barBackgroundColor, Color? scaffoldBackgroundColor, bool? applyThemeToAll})
CupertinoThemeData$Mate({/// optionalParameters: {Brightness? brightness} , hasDefaultValue:false, defaultValueCode:null
Brightness? brightness, /// optionalParameters: {Color? primaryColor} , hasDefaultValue:false, defaultValueCode:null
Color? primaryColor, /// optionalParameters: {Color? primaryContrastingColor} , hasDefaultValue:false, defaultValueCode:null
Color? primaryContrastingColor, /// optionalParameters: {CupertinoTextThemeData? textTheme} , hasDefaultValue:false, defaultValueCode:null
CupertinoTextThemeData? textTheme, /// optionalParameters: {Color? barBackgroundColor} , hasDefaultValue:false, defaultValueCode:null
Color? barBackgroundColor, /// optionalParameters: {Color? scaffoldBackgroundColor} , hasDefaultValue:false, defaultValueCode:null
Color? scaffoldBackgroundColor, /// optionalParameters: {bool? applyThemeToAll} , hasDefaultValue:false, defaultValueCode:null
bool? applyThemeToAll, }) : super(brightness: brightness, primaryColor: primaryColor, primaryContrastingColor: primaryContrastingColor, textTheme: textTheme, barBackgroundColor: barBackgroundColor, scaffoldBackgroundColor: scaffoldBackgroundColor, applyThemeToAll: applyThemeToAll, ) { mateBuilder = (p) => CupertinoThemeData$Mate(brightness: p.get('brightness').build(), primaryColor: p.get('primaryColor').build(), primaryContrastingColor: p.get('primaryContrastingColor').build(), textTheme: p.get('textTheme').build(), barBackgroundColor: p.get('barBackgroundColor').build(), scaffoldBackgroundColor: p.get('scaffoldBackgroundColor').build(), applyThemeToAll: p.get('applyThemeToAll').build(), );
matePut('brightness', brightness);
matePut('primaryColor', primaryColor);
matePut('primaryContrastingColor', primaryContrastingColor);
matePut('textTheme', textTheme);
matePut('barBackgroundColor', barBackgroundColor);
matePut('scaffoldBackgroundColor', scaffoldBackgroundColor);
matePut('applyThemeToAll', applyThemeToAll); }

/// CupertinoThemeData CupertinoThemeData.raw(Brightness? brightness, Color? primaryColor, Color? primaryContrastingColor, CupertinoTextThemeData? textTheme, Color? barBackgroundColor, Color? scaffoldBackgroundColor, bool? applyThemeToAll)
CupertinoThemeData$Mate.raw(/// requiredParameters: Brightness? brightness 
Brightness? brightness, /// requiredParameters: Color? primaryColor 
Color? primaryColor, /// requiredParameters: Color? primaryContrastingColor 
Color? primaryContrastingColor, /// requiredParameters: CupertinoTextThemeData? textTheme 
CupertinoTextThemeData? textTheme, /// requiredParameters: Color? barBackgroundColor 
Color? barBackgroundColor, /// requiredParameters: Color? scaffoldBackgroundColor 
Color? scaffoldBackgroundColor, /// requiredParameters: bool? applyThemeToAll 
bool? applyThemeToAll, ) : super.raw(brightness, primaryColor, primaryContrastingColor, textTheme, barBackgroundColor, scaffoldBackgroundColor, applyThemeToAll, ) { mateBuilder = (p) => CupertinoThemeData$Mate.raw(p.get('brightness').value, p.get('primaryColor').value, p.get('primaryContrastingColor').value, p.get('textTheme').value, p.get('barBackgroundColor').value, p.get('scaffoldBackgroundColor').value, p.get('applyThemeToAll').value, );
matePut('brightness', brightness);
matePut('primaryColor', primaryColor);
matePut('primaryContrastingColor', primaryContrastingColor);
matePut('textTheme', textTheme);
matePut('barBackgroundColor', barBackgroundColor);
matePut('scaffoldBackgroundColor', scaffoldBackgroundColor);
matePut('applyThemeToAll', applyThemeToAll); }

 }
/// class NoDefaultCupertinoThemeData
class NoDefaultCupertinoThemeData$Mate extends NoDefaultCupertinoThemeData with Mate {/// NoDefaultCupertinoThemeData NoDefaultCupertinoThemeData({Brightness? brightness, Color? primaryColor, Color? primaryContrastingColor, CupertinoTextThemeData? textTheme, Color? barBackgroundColor, Color? scaffoldBackgroundColor, bool? applyThemeToAll})
NoDefaultCupertinoThemeData$Mate({/// optionalParameters: {Brightness? brightness} , hasDefaultValue:false, defaultValueCode:null
Brightness? brightness, /// optionalParameters: {Color? primaryColor} , hasDefaultValue:false, defaultValueCode:null
Color? primaryColor, /// optionalParameters: {Color? primaryContrastingColor} , hasDefaultValue:false, defaultValueCode:null
Color? primaryContrastingColor, /// optionalParameters: {CupertinoTextThemeData? textTheme} , hasDefaultValue:false, defaultValueCode:null
CupertinoTextThemeData? textTheme, /// optionalParameters: {Color? barBackgroundColor} , hasDefaultValue:false, defaultValueCode:null
Color? barBackgroundColor, /// optionalParameters: {Color? scaffoldBackgroundColor} , hasDefaultValue:false, defaultValueCode:null
Color? scaffoldBackgroundColor, /// optionalParameters: {bool? applyThemeToAll} , hasDefaultValue:false, defaultValueCode:null
bool? applyThemeToAll, }) : super(brightness: brightness, primaryColor: primaryColor, primaryContrastingColor: primaryContrastingColor, textTheme: textTheme, barBackgroundColor: barBackgroundColor, scaffoldBackgroundColor: scaffoldBackgroundColor, applyThemeToAll: applyThemeToAll, ) { mateBuilder = (p) => NoDefaultCupertinoThemeData$Mate(brightness: p.get('brightness').build(), primaryColor: p.get('primaryColor').build(), primaryContrastingColor: p.get('primaryContrastingColor').build(), textTheme: p.get('textTheme').build(), barBackgroundColor: p.get('barBackgroundColor').build(), scaffoldBackgroundColor: p.get('scaffoldBackgroundColor').build(), applyThemeToAll: p.get('applyThemeToAll').build(), );
matePut('brightness', brightness);
matePut('primaryColor', primaryColor);
matePut('primaryContrastingColor', primaryContrastingColor);
matePut('textTheme', textTheme);
matePut('barBackgroundColor', barBackgroundColor);
matePut('scaffoldBackgroundColor', scaffoldBackgroundColor);
matePut('applyThemeToAll', applyThemeToAll); }

 }
