// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/cupertino/tab_scaffold.dart';
import 'package:note/mate.dart';
import 'dart:core';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/cupertino/bottom_tab_bar.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'dart:ui';

/// class CupertinoTabController extends ChangeNotifier
class CupertinoTabController$Mate extends CupertinoTabController with Mate {
  /// CupertinoTabController CupertinoTabController({int initialIndex = 0})
  CupertinoTabController$Mate(
      {
      /// optionalParameters: {int initialIndex = 0} , defaultValue:Literal
      int initialIndex = 0})
      : super(initialIndex: initialIndex) {
    mateBuilder = (p) => CupertinoTabController$Mate(initialIndex: p.get('initialIndex').build());
    mateDeclare('initialIndex', initialIndex);
  }
}

/// class CupertinoTabScaffold extends StatefulWidget
class CupertinoTabScaffold$Mate extends CupertinoTabScaffold with Mate {
  /// CupertinoTabScaffold CupertinoTabScaffold({Key? key, required CupertinoTabBar tabBar, required Widget Function(BuildContext, int) tabBuilder, CupertinoTabController? controller, Color? backgroundColor, bool resizeToAvoidBottomInset = true, String? restorationId})
  CupertinoTabScaffold$Mate({
    /// optionalParameters: {Key? key} , defaultValue:none
    Key? key,

    /// optionalParameters: {required CupertinoTabBar tabBar} , defaultValue:none
    required CupertinoTabBar tabBar,

    /// optionalParameters: {required Widget Function(BuildContext, int) tabBuilder} , defaultValue:none
    required IndexedWidgetBuilder tabBuilder,

    /// optionalParameters: {CupertinoTabController? controller} , defaultValue:none
    CupertinoTabController? controller,

    /// optionalParameters: {Color? backgroundColor} , defaultValue:none
    Color? backgroundColor,

    /// optionalParameters: {bool resizeToAvoidBottomInset = true} , defaultValue:Literal
    bool resizeToAvoidBottomInset = true,

    /// optionalParameters: {String? restorationId} , defaultValue:none
    String? restorationId,
  }) : super(
          key: key,
          tabBar: tabBar,
          tabBuilder: tabBuilder,
          controller: controller,
          backgroundColor: backgroundColor,
          resizeToAvoidBottomInset: resizeToAvoidBottomInset,
          restorationId: restorationId,
        ) {
    mateBuilder = (p) => CupertinoTabScaffold$Mate(
          key: p.get('key').build(),
          tabBar: p.get('tabBar').build(),
          tabBuilder: p.get('tabBuilder').build(),
          controller: p.get('controller').build(),
          backgroundColor: p.get('backgroundColor').build(),
          resizeToAvoidBottomInset: p.get('resizeToAvoidBottomInset').build(),
          restorationId: p.get('restorationId').build(),
        );
    mateDeclare('key', key);
    mateDeclare('tabBar', tabBar);
    mateDeclare('tabBuilder', tabBuilder);
    mateDeclare('controller', controller);
    mateDeclare('backgroundColor', backgroundColor);
    mateDeclare('resizeToAvoidBottomInset', resizeToAvoidBottomInset);
    mateDeclare('restorationId', restorationId);
  }
}

/// class RestorableCupertinoTabController extends RestorableChangeNotifier<CupertinoTabController>
class RestorableCupertinoTabController$Mate extends RestorableCupertinoTabController with Mate {
  /// RestorableCupertinoTabController RestorableCupertinoTabController({int initialIndex = 0})
  RestorableCupertinoTabController$Mate(
      {
      /// optionalParameters: {int initialIndex = 0} , defaultValue:Literal
      int initialIndex = 0})
      : super(initialIndex: initialIndex) {
    mateBuilder = (p) => RestorableCupertinoTabController$Mate(initialIndex: p.get('initialIndex').build());
    mateDeclare('initialIndex', initialIndex);
  }
}
