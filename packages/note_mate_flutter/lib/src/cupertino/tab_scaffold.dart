// /// Generated by gen_maters.dart, please don't edit! 

import 'package:flutter/src/cupertino/tab_scaffold.dart';import 'dart:core';import 'package:flutter/src/foundation/key.dart';import 'package:flutter/src/cupertino/bottom_tab_bar.dart';import 'package:flutter/src/widgets/framework.dart';import 'dart:ui';import 'package:note/mate.dart' show Mate;/// class CupertinoTabController extends ChangeNotifier
class CupertinoTabController$Mate extends CupertinoTabController with Mate {/// CupertinoTabController CupertinoTabController({int initialIndex = 0})
CupertinoTabController$Mate({/// optionalParameters: {int initialIndex = 0} , hasDefaultValue:true, defaultValueCode:0
required int initialIndex}) : super(initialIndex: initialIndex) { mateBuilder = (p) => CupertinoTabController$Mate(initialIndex: p.get('initialIndex').build());
matePut('initialIndex', initialIndex); }

 }
/// class CupertinoTabScaffold extends StatefulWidget
class CupertinoTabScaffold$Mate extends CupertinoTabScaffold with Mate {/// CupertinoTabScaffold CupertinoTabScaffold({Key? key, required CupertinoTabBar tabBar, required Widget Function(BuildContext, int) tabBuilder, CupertinoTabController? controller, Color? backgroundColor, bool resizeToAvoidBottomInset = true, String? restorationId})
CupertinoTabScaffold$Mate({/// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
Key? key, /// optionalParameters: {required CupertinoTabBar tabBar} , hasDefaultValue:false, defaultValueCode:null
required CupertinoTabBar tabBar, /// optionalParameters: {required Widget Function(BuildContext, int) tabBuilder} , hasDefaultValue:false, defaultValueCode:null
required IndexedWidgetBuilder tabBuilder, /// optionalParameters: {CupertinoTabController? controller} , hasDefaultValue:false, defaultValueCode:null
CupertinoTabController? controller, /// optionalParameters: {Color? backgroundColor} , hasDefaultValue:false, defaultValueCode:null
Color? backgroundColor, /// optionalParameters: {bool resizeToAvoidBottomInset = true} , hasDefaultValue:true, defaultValueCode:true
required bool resizeToAvoidBottomInset, /// optionalParameters: {String? restorationId} , hasDefaultValue:false, defaultValueCode:null
String? restorationId, }) : super(key: key, tabBar: tabBar, tabBuilder: tabBuilder, controller: controller, backgroundColor: backgroundColor, resizeToAvoidBottomInset: resizeToAvoidBottomInset, restorationId: restorationId, ) { mateBuilder = (p) => CupertinoTabScaffold$Mate(key: p.get('key').build(), tabBar: p.get('tabBar').build(), tabBuilder: p.get('tabBuilder').build(), controller: p.get('controller').build(), backgroundColor: p.get('backgroundColor').build(), resizeToAvoidBottomInset: p.get('resizeToAvoidBottomInset').build(), restorationId: p.get('restorationId').build(), );
matePut('key', key);
matePut('tabBar', tabBar);
matePut('tabBuilder', tabBuilder);
matePut('controller', controller);
matePut('backgroundColor', backgroundColor);
matePut('resizeToAvoidBottomInset', resizeToAvoidBottomInset);
matePut('restorationId', restorationId); }

 }
/// class RestorableCupertinoTabController extends RestorableChangeNotifier<CupertinoTabController>
class RestorableCupertinoTabController$Mate extends RestorableCupertinoTabController with Mate {/// RestorableCupertinoTabController RestorableCupertinoTabController({int initialIndex = 0})
RestorableCupertinoTabController$Mate({/// optionalParameters: {int initialIndex = 0} , hasDefaultValue:true, defaultValueCode:0
required int initialIndex}) : super(initialIndex: initialIndex) { mateBuilder = (p) => RestorableCupertinoTabController$Mate(initialIndex: p.get('initialIndex').build());
matePut('initialIndex', initialIndex); }

 }
