// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/cupertino/colors.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'dart:ui' as _i3;

/// class CupertinoDynamicColor extends Color with Diagnosticable
class CupertinoDynamicColor$Mate extends _i1.CupertinoDynamicColor with _i2.Mate {
  /// CupertinoDynamicColor CupertinoDynamicColor({String? debugLabel, required Color color, required Color darkColor, required Color highContrastColor, required Color darkHighContrastColor, required Color elevatedColor, required Color darkElevatedColor, required Color highContrastElevatedColor, required Color darkHighContrastElevatedColor})
  CupertinoDynamicColor$Mate({
    /// optionalParameters: {String? debugLabel} , default:none
    String? debugLabel,

    /// optionalParameters: {required Color color} , default:none
    required _i3.Color color,

    /// optionalParameters: {required Color darkColor} , default:none
    required _i3.Color darkColor,

    /// optionalParameters: {required Color highContrastColor} , default:none
    required _i3.Color highContrastColor,

    /// optionalParameters: {required Color darkHighContrastColor} , default:none
    required _i3.Color darkHighContrastColor,

    /// optionalParameters: {required Color elevatedColor} , default:none
    required _i3.Color elevatedColor,

    /// optionalParameters: {required Color darkElevatedColor} , default:none
    required _i3.Color darkElevatedColor,

    /// optionalParameters: {required Color highContrastElevatedColor} , default:none
    required _i3.Color highContrastElevatedColor,

    /// optionalParameters: {required Color darkHighContrastElevatedColor} , default:none
    required _i3.Color darkHighContrastElevatedColor,
  }) : super(
          debugLabel: debugLabel,
          color: color,
          darkColor: darkColor,
          highContrastColor: highContrastColor,
          darkHighContrastColor: darkHighContrastColor,
          elevatedColor: elevatedColor,
          darkElevatedColor: darkElevatedColor,
          highContrastElevatedColor: highContrastElevatedColor,
          darkHighContrastElevatedColor: darkHighContrastElevatedColor,
        ) {
    mateBuilderName = 'CupertinoDynamicColor';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoDynamicColor$Mate(
          debugLabel: p.get('debugLabel').build(),
          color: p.get('color').build(),
          darkColor: p.get('darkColor').build(),
          highContrastColor: p.get('highContrastColor').build(),
          darkHighContrastColor: p.get('darkHighContrastColor').build(),
          elevatedColor: p.get('elevatedColor').build(),
          darkElevatedColor: p.get('darkElevatedColor').build(),
          highContrastElevatedColor: p.get('highContrastElevatedColor').build(),
          darkHighContrastElevatedColor: p.get('darkHighContrastElevatedColor').build(),
        );
    mateUse(
      'debugLabel',
      debugLabel,
      isNamed: true,
    );
    mateUse(
      'color',
      color,
      isNamed: true,
    );
    mateUse(
      'darkColor',
      darkColor,
      isNamed: true,
    );
    mateUse(
      'highContrastColor',
      highContrastColor,
      isNamed: true,
    );
    mateUse(
      'darkHighContrastColor',
      darkHighContrastColor,
      isNamed: true,
    );
    mateUse(
      'elevatedColor',
      elevatedColor,
      isNamed: true,
    );
    mateUse(
      'darkElevatedColor',
      darkElevatedColor,
      isNamed: true,
    );
    mateUse(
      'highContrastElevatedColor',
      highContrastElevatedColor,
      isNamed: true,
    );
    mateUse(
      'darkHighContrastElevatedColor',
      darkHighContrastElevatedColor,
      isNamed: true,
    );
  }

  /// CupertinoDynamicColor CupertinoDynamicColor.withBrightnessAndContrast({String? debugLabel, required Color color, required Color darkColor, required Color highContrastColor, required Color darkHighContrastColor})
  CupertinoDynamicColor$Mate.withBrightnessAndContrast({
    /// optionalParameters: {String? debugLabel} , default:none
    String? debugLabel,

    /// optionalParameters: {required Color color} , default:none
    required _i3.Color color,

    /// optionalParameters: {required Color darkColor} , default:none
    required _i3.Color darkColor,

    /// optionalParameters: {required Color highContrastColor} , default:none
    required _i3.Color highContrastColor,

    /// optionalParameters: {required Color darkHighContrastColor} , default:none
    required _i3.Color darkHighContrastColor,
  }) : super.withBrightnessAndContrast(
          debugLabel: debugLabel,
          color: color,
          darkColor: darkColor,
          highContrastColor: highContrastColor,
          darkHighContrastColor: darkHighContrastColor,
        ) {
    mateBuilderName = 'CupertinoDynamicColor.withBrightnessAndContrast';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoDynamicColor$Mate.withBrightnessAndContrast(
          debugLabel: p.get('debugLabel').build(),
          color: p.get('color').build(),
          darkColor: p.get('darkColor').build(),
          highContrastColor: p.get('highContrastColor').build(),
          darkHighContrastColor: p.get('darkHighContrastColor').build(),
        );
    mateUse(
      'debugLabel',
      debugLabel,
      isNamed: true,
    );
    mateUse(
      'color',
      color,
      isNamed: true,
    );
    mateUse(
      'darkColor',
      darkColor,
      isNamed: true,
    );
    mateUse(
      'highContrastColor',
      highContrastColor,
      isNamed: true,
    );
    mateUse(
      'darkHighContrastColor',
      darkHighContrastColor,
      isNamed: true,
    );
  }

  /// CupertinoDynamicColor CupertinoDynamicColor.withBrightness({String? debugLabel, required Color color, required Color darkColor})
  CupertinoDynamicColor$Mate.withBrightness({
    /// optionalParameters: {String? debugLabel} , default:none
    String? debugLabel,

    /// optionalParameters: {required Color color} , default:none
    required _i3.Color color,

    /// optionalParameters: {required Color darkColor} , default:none
    required _i3.Color darkColor,
  }) : super.withBrightness(
          debugLabel: debugLabel,
          color: color,
          darkColor: darkColor,
        ) {
    mateBuilderName = 'CupertinoDynamicColor.withBrightness';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoDynamicColor$Mate.withBrightness(
          debugLabel: p.get('debugLabel').build(),
          color: p.get('color').build(),
          darkColor: p.get('darkColor').build(),
        );
    mateUse(
      'debugLabel',
      debugLabel,
      isNamed: true,
    );
    mateUse(
      'color',
      color,
      isNamed: true,
    );
    mateUse(
      'darkColor',
      darkColor,
      isNamed: true,
    );
  }
}
