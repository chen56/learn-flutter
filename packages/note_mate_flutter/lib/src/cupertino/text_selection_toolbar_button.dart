// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/cupertino/text_selection_toolbar_button.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'dart:ui';
import 'package:flutter/src/widgets/framework.dart';
import 'dart:core';
import 'package:flutter/src/widgets/context_menu_button_item.dart';

/// class CupertinoTextSelectionToolbarButton extends StatelessWidget
class CupertinoTextSelectionToolbarButton$Mate extends CupertinoTextSelectionToolbarButton with Mate {
  /// CupertinoTextSelectionToolbarButton CupertinoTextSelectionToolbarButton({Key? key, void Function()? onPressed, required Widget child})
  CupertinoTextSelectionToolbarButton$Mate({
    /// optionalParameters: {Key? key} , default:none
    Key? key,

    /// optionalParameters: {void Function()? onPressed} , default:none
    VoidCallback? onPressed,

    /// optionalParameters: {required Widget child} , default:none
    required Widget child,
  }) : super(
          key: key,
          onPressed: onPressed,
          child: child,
        ) {
    mateCreateName = 'CupertinoTextSelectionToolbarButton';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoTextSelectionToolbarButton$Mate(
          key: p.get('key').build(),
          onPressed: p.get('onPressed').build(),
          child: p.get('child').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'onPressed',
      onPressed,
      isNamed: true,
    );
    mateUse(
      'child',
      child,
      isNamed: true,
    );
  }

  /// CupertinoTextSelectionToolbarButton CupertinoTextSelectionToolbarButton.text({Key? key, void Function()? onPressed, required String? text})
  CupertinoTextSelectionToolbarButton$Mate.text({
    /// optionalParameters: {Key? key} , default:none
    Key? key,

    /// optionalParameters: {void Function()? onPressed} , default:none
    VoidCallback? onPressed,

    /// optionalParameters: {required String? text} , default:none
    required String? text,
  }) : super.text(
          key: key,
          onPressed: onPressed,
          text: text,
        ) {
    mateCreateName = 'CupertinoTextSelectionToolbarButton.text';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoTextSelectionToolbarButton$Mate.text(
          key: p.get('key').build(),
          onPressed: p.get('onPressed').build(),
          text: p.get('text').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'onPressed',
      onPressed,
      isNamed: true,
    );
    mateUse(
      'text',
      text,
      isNamed: true,
    );
  }

  /// CupertinoTextSelectionToolbarButton CupertinoTextSelectionToolbarButton.buttonItem({Key? key, required ContextMenuButtonItem buttonItem})
  CupertinoTextSelectionToolbarButton$Mate.buttonItem({
    /// optionalParameters: {Key? key} , default:none
    Key? key,

    /// optionalParameters: {required ContextMenuButtonItem buttonItem} , default:none
    required ContextMenuButtonItem buttonItem,
  }) : super.buttonItem(
          key: key,
          buttonItem: buttonItem,
        ) {
    mateCreateName = 'CupertinoTextSelectionToolbarButton.buttonItem';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoTextSelectionToolbarButton$Mate.buttonItem(
          key: p.get('key').build(),
          buttonItem: p.get('buttonItem').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'buttonItem',
      buttonItem,
      isNamed: true,
    );
  }
}
