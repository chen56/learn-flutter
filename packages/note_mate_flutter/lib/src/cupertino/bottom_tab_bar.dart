// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/cupertino/bottom_tab_bar.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/widgets/bottom_navigation_bar_item.dart' as _i4;
import 'package:flutter/src/foundation/basic_types.dart' as _i5;
import 'dart:ui' as _i6;
import 'package:flutter/src/painting/box_border.dart' as _i7;

/// class CupertinoTabBar extends StatelessWidget implements PreferredSizeWidget
class CupertinoTabBar$Mate extends _i1.CupertinoTabBar with _i2.Mate {
  /// CupertinoTabBar CupertinoTabBar({Key? key, required List<BottomNavigationBarItem> items, void Function(int)? onTap, int currentIndex = 0, Color? backgroundColor, Color? activeColor, Color inactiveColor = _kDefaultTabBarInactiveColor, double iconSize = 30.0, double height = _kTabBarHeight, Border? border = const Border(top: BorderSide(color: _kDefaultTabBarBorderColor, width: 0.0))})
  CupertinoTabBar$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {required List<BottomNavigationBarItem> items} , default:none
    required List<_i4.BottomNavigationBarItem> items,

    /// optionalParameters: {void Function(int)? onTap} , default:none
    _i5.ValueChanged<int>? onTap,

    /// optionalParameters: {int currentIndex = 0} , default:processed=IntegerLiteralImpl
    int currentIndex = 0,

    /// optionalParameters: {Color? backgroundColor} , default:none
    _i6.Color? backgroundColor,

    /// optionalParameters: {Color? activeColor} , default:none
    _i6.Color? activeColor,

    /// optionalParameters: {Color inactiveColor = _kDefaultTabBarInactiveColor} , default:unprocessed=SimpleIdentifierImpl
    required _i6.Color inactiveColor,

    /// optionalParameters: {double iconSize = 30.0} , default:processed=DoubleLiteralImpl
    double iconSize = 30.0,

    /// optionalParameters: {double height = _kTabBarHeight} , default:unprocessed=SimpleIdentifierImpl
    required double height,

    /// optionalParameters: {Border? border = const Border(top: BorderSide(color: _kDefaultTabBarBorderColor, width: 0.0))} , default:unprocessed=InstanceCreationExpressionImpl
    required _i7.Border? border,
  }) : super(
          key: key,
          items: items,
          onTap: onTap,
          currentIndex: currentIndex,
          backgroundColor: backgroundColor,
          activeColor: activeColor,
          inactiveColor: inactiveColor,
          iconSize: iconSize,
          height: height,
          border: border,
        ) {
    mateBuilderName = 'CupertinoTabBar';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoTabBar$Mate(
          key: p.get('key').build(),
          items: p.get('items').build(),
          onTap: p.get('onTap').build(),
          currentIndex: p.get('currentIndex').build(),
          backgroundColor: p.get('backgroundColor').build(),
          activeColor: p.get('activeColor').build(),
          inactiveColor: p.get('inactiveColor').build(),
          iconSize: p.get('iconSize').build(),
          height: p.get('height').build(),
          border: p.get('border').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'items',
      items,
      isNamed: true,
    );
    mateUse(
      'onTap',
      onTap,
      isNamed: true,
    );
    mateUse(
      'currentIndex',
      currentIndex,
      isNamed: true,
      defaultValue: 0,
    );
    mateUse(
      'backgroundColor',
      backgroundColor,
      isNamed: true,
    );
    mateUse(
      'activeColor',
      activeColor,
      isNamed: true,
    );
    mateUse(
      'inactiveColor',
      inactiveColor,
      isNamed: true,
    );
    mateUse(
      'iconSize',
      iconSize,
      isNamed: true,
      defaultValue: 30.0,
    );
    mateUse(
      'height',
      height,
      isNamed: true,
    );
    mateUse(
      'border',
      border,
      isNamed: true,
    );
  }
}
