// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/cupertino/context_menu_action.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'dart:core';
import 'dart:ui';
import 'package:flutter/src/widgets/icon_data.dart';

/// class CupertinoContextMenuAction extends StatefulWidget
class CupertinoContextMenuAction$Mate extends CupertinoContextMenuAction
    with Mate {
  /// CupertinoContextMenuAction CupertinoContextMenuAction({Key? key, required Widget child, bool isDefaultAction = false, bool isDestructiveAction = false, void Function()? onPressed, IconData? trailingIcon})
  CupertinoContextMenuAction$Mate({
    /// optionalParameters: {Key? key} , defaultValue:none
    Key? key,

    /// optionalParameters: {required Widget child} , defaultValue:none
    required Widget child,

    /// optionalParameters: {bool isDefaultAction = false} , defaultValue:Literal
    bool isDefaultAction = false,

    /// optionalParameters: {bool isDestructiveAction = false} , defaultValue:Literal
    bool isDestructiveAction = false,

    /// optionalParameters: {void Function()? onPressed} , defaultValue:none
    VoidCallback? onPressed,

    /// optionalParameters: {IconData? trailingIcon} , defaultValue:none
    IconData? trailingIcon,
  }) : super(
          key: key,
          child: child,
          isDefaultAction: isDefaultAction,
          isDestructiveAction: isDestructiveAction,
          onPressed: onPressed,
          trailingIcon: trailingIcon,
        ) {
    mateBuilder = (p) => CupertinoContextMenuAction$Mate(
          key: p.get('key').build(),
          child: p.get('child').build(),
          isDefaultAction: p.get('isDefaultAction').build(),
          isDestructiveAction: p.get('isDestructiveAction').build(),
          onPressed: p.get('onPressed').build(),
          trailingIcon: p.get('trailingIcon').build(),
        );
    mateUse('key', key);
    mateUse('child', child);
    mateUse('isDefaultAction', isDefaultAction);
    mateUse('isDestructiveAction', isDestructiveAction);
    mateUse('onPressed', onPressed);
    mateUse('trailingIcon', trailingIcon);
  }
}
