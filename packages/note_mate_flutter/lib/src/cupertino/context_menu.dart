// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/cupertino/context_menu.dart' as _i1;
import 'package:note/mate_core.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/widgets/framework.dart' as _i4;

/// class CupertinoContextMenu extends StatefulWidget
class CupertinoContextMenu$Mate extends _i1.CupertinoContextMenu with _i2.Mate {
  /// CupertinoContextMenu CupertinoContextMenu({Key? key, required List<Widget> actions, required Widget child, bool enableHapticFeedback = false, Widget Function(BuildContext, Animation<double>, Widget)? previewBuilder = _defaultPreviewBuilder})
  CupertinoContextMenu$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required List<Widget> actions} , default:none
    required super.actions,

    /// optionalParameters: {required Widget child} , default:none
    required super.child,

    /// optionalParameters: {bool enableHapticFeedback = false} , default:processed=BooleanLiteralImpl
    super.enableHapticFeedback,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'actions': _i2.BuilderArg<List<_i4.Widget>>(
            name: 'actions',
            init: actions,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i4.Widget>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
          'enableHapticFeedback': _i2.BuilderArg<bool>(
            name: 'enableHapticFeedback',
            init: enableHapticFeedback,
            isNamed: true,
            defaultValue: false,
          ),
        },
        super() {
    mateBuilderName = 'CupertinoContextMenu';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoContextMenu$Mate(
          key: p.get('key').build(),
          actions: p.get('actions').build(),
          child: p.get('child').build(),
          enableHapticFeedback: p.get('enableHapticFeedback').build(),
        );
  }

  /// CupertinoContextMenu CupertinoContextMenu.builder({Key? key, required List<Widget> actions, required Widget Function(BuildContext, Animation<double>) builder, bool enableHapticFeedback = false})
  CupertinoContextMenu$Mate.builder({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required List<Widget> actions} , default:none
    required super.actions,

    /// optionalParameters: {required Widget Function(BuildContext, Animation<double>) builder} , default:none
    required super.builder,

    /// optionalParameters: {bool enableHapticFeedback = false} , default:processed=BooleanLiteralImpl
    super.enableHapticFeedback,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'actions': _i2.BuilderArg<List<_i4.Widget>>(
            name: 'actions',
            init: actions,
            isNamed: true,
          ),
          'builder': _i2.BuilderArg<_i1.CupertinoContextMenuBuilder>(
            name: 'builder',
            init: builder,
            isNamed: true,
          ),
          'enableHapticFeedback': _i2.BuilderArg<bool>(
            name: 'enableHapticFeedback',
            init: enableHapticFeedback,
            isNamed: true,
            defaultValue: false,
          ),
        },
        super.builder() {
    mateBuilderName = 'CupertinoContextMenu.builder';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoContextMenu$Mate.builder(
          key: p.get('key').build(),
          actions: p.get('actions').build(),
          builder: p.get('builder').build(),
          enableHapticFeedback: p.get('enableHapticFeedback').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
