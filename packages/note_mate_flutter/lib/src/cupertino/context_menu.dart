// /// Generated by gen_maters.dart, please don't edit! 

import 'package:flutter/src/cupertino/context_menu.dart';import 'package:flutter/src/foundation/key.dart';import 'dart:core';import 'package:flutter/src/widgets/framework.dart';import 'package:note/mate.dart' show Mate;/// class CupertinoContextMenu extends StatefulWidget
class CupertinoContextMenu$Mate extends CupertinoContextMenu with Mate {/// CupertinoContextMenu CupertinoContextMenu({Key? key, required List<Widget> actions, required Widget child, bool enableHapticFeedback = false, Widget Function(BuildContext, Animation<double>, Widget)? previewBuilder = _defaultPreviewBuilder})
CupertinoContextMenu$Mate({/// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
Key? key, /// optionalParameters: {required List<Widget> actions} , hasDefaultValue:false, defaultValueCode:null
required List<Widget> actions, /// optionalParameters: {required Widget child} , hasDefaultValue:false, defaultValueCode:null
required Widget child, /// optionalParameters: {bool enableHapticFeedback = false} , hasDefaultValue:true, defaultValueCode:false
required bool enableHapticFeedback, }) : super(key: key, actions: actions, child: child, enableHapticFeedback: enableHapticFeedback, ) { mateBuilder = (p) => CupertinoContextMenu$Mate(key: p.get('key').build(), actions: p.get('actions').build(), child: p.get('child').build(), enableHapticFeedback: p.get('enableHapticFeedback').build(), );
matePut('key', key);
matePut('actions', actions);
matePut('child', child);
matePut('enableHapticFeedback', enableHapticFeedback); }

/// CupertinoContextMenu CupertinoContextMenu.builder({Key? key, required List<Widget> actions, required Widget Function(BuildContext, Animation<double>) builder, bool enableHapticFeedback = false})
CupertinoContextMenu$Mate.builder({/// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
Key? key, /// optionalParameters: {required List<Widget> actions} , hasDefaultValue:false, defaultValueCode:null
required List<Widget> actions, /// optionalParameters: {required Widget Function(BuildContext, Animation<double>) builder} , hasDefaultValue:false, defaultValueCode:null
required CupertinoContextMenuBuilder builder, /// optionalParameters: {bool enableHapticFeedback = false} , hasDefaultValue:true, defaultValueCode:false
required bool enableHapticFeedback, }) : super.builder(key: key, actions: actions, builder: builder, enableHapticFeedback: enableHapticFeedback, ) { mateBuilder = (p) => CupertinoContextMenu$Mate.builder(key: p.get('key').build(), actions: p.get('actions').build(), builder: p.get('builder').build(), enableHapticFeedback: p.get('enableHapticFeedback').build(), );
matePut('key', key);
matePut('actions', actions);
matePut('builder', builder);
matePut('enableHapticFeedback', enableHapticFeedback); }

 }
