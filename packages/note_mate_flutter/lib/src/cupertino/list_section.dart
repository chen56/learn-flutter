// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/cupertino/list_section.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'dart:core';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/painting/edge_insets.dart';
import 'dart:ui';
import 'package:flutter/cupertino.dart';
import 'package:flutter/src/painting/box_decoration.dart';

/// class CupertinoListSection extends StatelessWidget
class CupertinoListSection$Mate extends CupertinoListSection with Mate {
  /// CupertinoListSection CupertinoListSection({Key? key, List<Widget>? children, Widget? header, Widget? footer, EdgeInsetsGeometry margin = _kDefaultRowsMargin, Color backgroundColor = CupertinoColors.systemGroupedBackground, BoxDecoration? decoration, Clip clipBehavior = Clip.none, double dividerMargin = _kBaseDividerMargin, double? additionalDividerMargin, double? topMargin = _kMarginTop, bool hasLeading = true})
  CupertinoListSection$Mate({
    /// optionalParameters: {Key? key} , defaultValue:none
    Key? key,

    /// optionalParameters: {List<Widget>? children} , defaultValue:none
    List<Widget>? children,

    /// optionalParameters: {Widget? header} , defaultValue:none
    Widget? header,

    /// optionalParameters: {Widget? footer} , defaultValue:none
    Widget? footer,

    /// optionalParameters: {EdgeInsetsGeometry margin = _kDefaultRowsMargin} , defaultValue:unprocessed
    required EdgeInsetsGeometry margin,

    /// optionalParameters: {Color backgroundColor = CupertinoColors.systemGroupedBackground} , defaultValue:PrefixedIdentifier
    Color backgroundColor = CupertinoColors.systemGroupedBackground,

    /// optionalParameters: {BoxDecoration? decoration} , defaultValue:none
    BoxDecoration? decoration,

    /// optionalParameters: {Clip clipBehavior = Clip.none} , defaultValue:PrefixedIdentifier
    Clip clipBehavior = Clip.none,

    /// optionalParameters: {double dividerMargin = _kBaseDividerMargin} , defaultValue:unprocessed
    required double dividerMargin,

    /// optionalParameters: {double? additionalDividerMargin} , defaultValue:none
    double? additionalDividerMargin,

    /// optionalParameters: {double? topMargin = _kMarginTop} , defaultValue:unprocessed
    double? topMargin,

    /// optionalParameters: {bool hasLeading = true} , defaultValue:Literal
    bool hasLeading = true,
  }) : super(
          key: key,
          children: children,
          header: header,
          footer: footer,
          margin: margin,
          backgroundColor: backgroundColor,
          decoration: decoration,
          clipBehavior: clipBehavior,
          dividerMargin: dividerMargin,
          additionalDividerMargin: additionalDividerMargin,
          topMargin: topMargin,
          hasLeading: hasLeading,
        ) {
    mateCreateName = 'CupertinoListSection';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoListSection$Mate(
          key: p.get('key').build(),
          children: p.get('children').build(),
          header: p.get('header').build(),
          footer: p.get('footer').build(),
          margin: p.get('margin').build(),
          backgroundColor: p.get('backgroundColor').build(),
          decoration: p.get('decoration').build(),
          clipBehavior: p.get('clipBehavior').build(),
          dividerMargin: p.get('dividerMargin').build(),
          additionalDividerMargin: p.get('additionalDividerMargin').build(),
          topMargin: p.get('topMargin').build(),
          hasLeading: p.get('hasLeading').build(),
        );
    mateUse('key', key, isNamed: true);
    mateUseList('children', children, isNamed: true);
    mateUse('header', header, isNamed: true);
    mateUse('footer', footer, isNamed: true);
    mateUse('margin', margin, isNamed: true);
    mateUse('backgroundColor', backgroundColor, isNamed: true);
    mateUse('decoration', decoration, isNamed: true);
    mateUse('clipBehavior', clipBehavior, isNamed: true);
    mateUse('dividerMargin', dividerMargin, isNamed: true);
    mateUse('additionalDividerMargin', additionalDividerMargin, isNamed: true);
    mateUse('topMargin', topMargin, isNamed: true);
    mateUse('hasLeading', hasLeading, isNamed: true);
  }

  /// CupertinoListSection CupertinoListSection.insetGrouped({Key? key, List<Widget>? children, Widget? header, Widget? footer, EdgeInsetsGeometry? margin, Color backgroundColor = CupertinoColors.systemGroupedBackground, BoxDecoration? decoration, Clip clipBehavior = Clip.hardEdge, double dividerMargin = _kInsetDividerMargin, double? additionalDividerMargin, double? topMargin, bool hasLeading = true})
  CupertinoListSection$Mate.insetGrouped({
    /// optionalParameters: {Key? key} , defaultValue:none
    Key? key,

    /// optionalParameters: {List<Widget>? children} , defaultValue:none
    List<Widget>? children,

    /// optionalParameters: {Widget? header} , defaultValue:none
    Widget? header,

    /// optionalParameters: {Widget? footer} , defaultValue:none
    Widget? footer,

    /// optionalParameters: {EdgeInsetsGeometry? margin} , defaultValue:none
    EdgeInsetsGeometry? margin,

    /// optionalParameters: {Color backgroundColor = CupertinoColors.systemGroupedBackground} , defaultValue:PrefixedIdentifier
    Color backgroundColor = CupertinoColors.systemGroupedBackground,

    /// optionalParameters: {BoxDecoration? decoration} , defaultValue:none
    BoxDecoration? decoration,

    /// optionalParameters: {Clip clipBehavior = Clip.hardEdge} , defaultValue:PrefixedIdentifier
    Clip clipBehavior = Clip.hardEdge,

    /// optionalParameters: {double dividerMargin = _kInsetDividerMargin} , defaultValue:unprocessed
    required double dividerMargin,

    /// optionalParameters: {double? additionalDividerMargin} , defaultValue:none
    double? additionalDividerMargin,

    /// optionalParameters: {double? topMargin} , defaultValue:none
    double? topMargin,

    /// optionalParameters: {bool hasLeading = true} , defaultValue:Literal
    bool hasLeading = true,
  }) : super.insetGrouped(
          key: key,
          children: children,
          header: header,
          footer: footer,
          margin: margin,
          backgroundColor: backgroundColor,
          decoration: decoration,
          clipBehavior: clipBehavior,
          dividerMargin: dividerMargin,
          additionalDividerMargin: additionalDividerMargin,
          topMargin: topMargin,
          hasLeading: hasLeading,
        ) {
    mateCreateName = 'CupertinoListSection.insetGrouped';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoListSection$Mate.insetGrouped(
          key: p.get('key').build(),
          children: p.get('children').build(),
          header: p.get('header').build(),
          footer: p.get('footer').build(),
          margin: p.get('margin').build(),
          backgroundColor: p.get('backgroundColor').build(),
          decoration: p.get('decoration').build(),
          clipBehavior: p.get('clipBehavior').build(),
          dividerMargin: p.get('dividerMargin').build(),
          additionalDividerMargin: p.get('additionalDividerMargin').build(),
          topMargin: p.get('topMargin').build(),
          hasLeading: p.get('hasLeading').build(),
        );
    mateUse('key', key, isNamed: true);
    mateUseList('children', children, isNamed: true);
    mateUse('header', header, isNamed: true);
    mateUse('footer', footer, isNamed: true);
    mateUse('margin', margin, isNamed: true);
    mateUse('backgroundColor', backgroundColor, isNamed: true);
    mateUse('decoration', decoration, isNamed: true);
    mateUse('clipBehavior', clipBehavior, isNamed: true);
    mateUse('dividerMargin', dividerMargin, isNamed: true);
    mateUse('additionalDividerMargin', additionalDividerMargin, isNamed: true);
    mateUse('topMargin', topMargin, isNamed: true);
    mateUse('hasLeading', hasLeading, isNamed: true);
  }
}
