// /// Generated by gen_maters.dart, please don't edit!

import 'dart:core';
import 'package:flutter/src/cupertino/segmented_control.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/foundation/basic_types.dart';
import 'dart:ui';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:note/mate.dart';

/// class CupertinoSegmentedControl<T extends Object> extends StatefulWidget
class CupertinoSegmentedControl$Mate<T extends Object> extends CupertinoSegmentedControl<T>
    with WidgetMate<CupertinoSegmentedControl$Mate> {
  /// CupertinoSegmentedControl<T> CupertinoSegmentedControl({Key? key, required Map<T, Widget> children, required void Function(T) onValueChanged, T? groupValue, Color? unselectedColor, Color? selectedColor, Color? borderColor, Color? pressedColor, EdgeInsetsGeometry? padding})
  CupertinoSegmentedControl$Mate({
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {required Map<T, Widget> children} , hasDefaultValue:false, defaultValueCode:null
    required Map<T, Widget> children,

    /// optionalParameters: {required void Function(T) onValueChanged} , hasDefaultValue:false, defaultValueCode:null
    required ValueChanged<T> onValueChanged,

    /// optionalParameters: {T? groupValue} , hasDefaultValue:false, defaultValueCode:null
    T? groupValue,

    /// optionalParameters: {Color? unselectedColor} , hasDefaultValue:false, defaultValueCode:null
    Color? unselectedColor,

    /// optionalParameters: {Color? selectedColor} , hasDefaultValue:false, defaultValueCode:null
    Color? selectedColor,

    /// optionalParameters: {Color? borderColor} , hasDefaultValue:false, defaultValueCode:null
    Color? borderColor,

    /// optionalParameters: {Color? pressedColor} , hasDefaultValue:false, defaultValueCode:null
    Color? pressedColor,

    /// optionalParameters: {EdgeInsetsGeometry? padding} , hasDefaultValue:false, defaultValueCode:null
    EdgeInsetsGeometry? padding,
  }) : super(
          key: key,
          children: children,
          onValueChanged: onValueChanged,
          groupValue: groupValue,
          unselectedColor: unselectedColor,
          selectedColor: selectedColor,
          borderColor: borderColor,
          pressedColor: pressedColor,
          padding: padding,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => CupertinoSegmentedControl$Mate(
        key: p.get('key').build(),
        children: p.get('children').build(),
        onValueChanged: p.get('onValueChanged').build(),
        groupValue: p.get('groupValue').build(),
        unselectedColor: p.get('unselectedColor').build(),
        selectedColor: p.get('selectedColor').build(),
        borderColor: p.get('borderColor').build(),
        pressedColor: p.get('pressedColor').build(),
        padding: p.get('padding').build(),
      ),
    );
    mateParams.put('key', key);
    mateParams.put('children', children);
    mateParams.put('onValueChanged', onValueChanged);
    mateParams.put('groupValue', groupValue);
    mateParams.put('unselectedColor', unselectedColor);
    mateParams.put('selectedColor', selectedColor);
    mateParams.put('borderColor', borderColor);
    mateParams.put('pressedColor', pressedColor);
    mateParams.put('padding', padding);
  }
}
