// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/cupertino/picker.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'dart:ui' as _i4;
import 'package:flutter/src/widgets/list_wheel_scroll_view.dart' as _i5;
import 'package:flutter/src/foundation/basic_types.dart' as _i6;
import 'package:flutter/src/widgets/framework.dart' as _i7;

/// class CupertinoPicker extends StatefulWidget
class CupertinoPicker$Mate extends _i1.CupertinoPicker with _i2.Mate {
  /// CupertinoPicker CupertinoPicker({Key? key, double diameterRatio = _kDefaultDiameterRatio, Color? backgroundColor, double offAxisFraction = 0.0, bool useMagnifier = false, double magnification = 1.0, FixedExtentScrollController? scrollController, double squeeze = _kSqueeze, required double itemExtent, required void Function(int)? onSelectedItemChanged, required List<Widget> children, Widget? selectionOverlay = const CupertinoPickerDefaultSelectionOverlay(), bool looping = false})
  CupertinoPicker$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {double diameterRatio = _kDefaultDiameterRatio} , default:unprocessed=SimpleIdentifierImpl
    super.diameterRatio,

    /// optionalParameters: {Color? backgroundColor} , default:none
    super.backgroundColor,

    /// optionalParameters: {double offAxisFraction = 0.0} , default:processed=DoubleLiteralImpl
    super.offAxisFraction,

    /// optionalParameters: {bool useMagnifier = false} , default:processed=BooleanLiteralImpl
    super.useMagnifier,

    /// optionalParameters: {double magnification = 1.0} , default:processed=DoubleLiteralImpl
    super.magnification,

    /// optionalParameters: {FixedExtentScrollController? scrollController} , default:none
    super.scrollController,

    /// optionalParameters: {double squeeze = _kSqueeze} , default:unprocessed=SimpleIdentifierImpl
    super.squeeze,

    /// optionalParameters: {required double itemExtent} , default:none
    required super.itemExtent,

    /// optionalParameters: {required void Function(int)? onSelectedItemChanged} , default:none
    required super.onSelectedItemChanged,

    /// optionalParameters: {required List<Widget> children} , default:none
    required super.children,

    /// optionalParameters: {Widget? selectionOverlay = const CupertinoPickerDefaultSelectionOverlay()} , default:unprocessed=InstanceCreationExpressionImpl
    super.selectionOverlay,

    /// optionalParameters: {bool looping = false} , default:processed=BooleanLiteralImpl
    super.looping,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'diameterRatio': _i2.BuilderArg<double>(
            name: 'diameterRatio',
            init: diameterRatio,
            isNamed: true,
          ),
          'backgroundColor': _i2.BuilderArg<_i4.Color?>(
            name: 'backgroundColor',
            init: backgroundColor,
            isNamed: true,
          ),
          'offAxisFraction': _i2.BuilderArg<double>(
            name: 'offAxisFraction',
            init: offAxisFraction,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'useMagnifier': _i2.BuilderArg<bool>(
            name: 'useMagnifier',
            init: useMagnifier,
            isNamed: true,
            defaultValue: false,
          ),
          'magnification': _i2.BuilderArg<double>(
            name: 'magnification',
            init: magnification,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'scrollController': _i2.BuilderArg<_i5.FixedExtentScrollController?>(
            name: 'scrollController',
            init: scrollController,
            isNamed: true,
          ),
          'squeeze': _i2.BuilderArg<double>(
            name: 'squeeze',
            init: squeeze,
            isNamed: true,
          ),
          'itemExtent': _i2.BuilderArg<double>(
            name: 'itemExtent',
            init: itemExtent,
            isNamed: true,
          ),
          'onSelectedItemChanged': _i2.BuilderArg<_i6.ValueChanged<int>?>(
            name: 'onSelectedItemChanged',
            init: onSelectedItemChanged,
            isNamed: true,
          ),
          'children': _i2.BuilderArg<List<_i7.Widget>>(
            name: 'children',
            init: children,
            isNamed: true,
          ),
          'selectionOverlay': _i2.BuilderArg<_i7.Widget?>(
            name: 'selectionOverlay',
            init: selectionOverlay,
            isNamed: true,
          ),
          'looping': _i2.BuilderArg<bool>(
            name: 'looping',
            init: looping,
            isNamed: true,
            defaultValue: false,
          ),
        },
        super() {
    mateBuilderName = 'CupertinoPicker';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoPicker$Mate(
          key: p.get('key').build(),
          diameterRatio: p.get('diameterRatio').build(),
          backgroundColor: p.get('backgroundColor').build(),
          offAxisFraction: p.get('offAxisFraction').build(),
          useMagnifier: p.get('useMagnifier').build(),
          magnification: p.get('magnification').build(),
          scrollController: p.get('scrollController').build(),
          squeeze: p.get('squeeze').build(),
          itemExtent: p.get('itemExtent').build(),
          onSelectedItemChanged: p.get('onSelectedItemChanged').build(),
          children: p.get('children').build(),
          selectionOverlay: p.get('selectionOverlay').build(),
          looping: p.get('looping').build(),
        );
  }

  /// CupertinoPicker CupertinoPicker.builder({Key? key, double diameterRatio = _kDefaultDiameterRatio, Color? backgroundColor, double offAxisFraction = 0.0, bool useMagnifier = false, double magnification = 1.0, FixedExtentScrollController? scrollController, double squeeze = _kSqueeze, required double itemExtent, required void Function(int)? onSelectedItemChanged, required Widget? Function(BuildContext, int) itemBuilder, int? childCount, Widget? selectionOverlay = const CupertinoPickerDefaultSelectionOverlay()})
  CupertinoPicker$Mate.builder({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {double diameterRatio = _kDefaultDiameterRatio} , default:unprocessed=SimpleIdentifierImpl
    super.diameterRatio,

    /// optionalParameters: {Color? backgroundColor} , default:none
    super.backgroundColor,

    /// optionalParameters: {double offAxisFraction = 0.0} , default:processed=DoubleLiteralImpl
    super.offAxisFraction,

    /// optionalParameters: {bool useMagnifier = false} , default:processed=BooleanLiteralImpl
    super.useMagnifier,

    /// optionalParameters: {double magnification = 1.0} , default:processed=DoubleLiteralImpl
    super.magnification,

    /// optionalParameters: {FixedExtentScrollController? scrollController} , default:none
    super.scrollController,

    /// optionalParameters: {double squeeze = _kSqueeze} , default:unprocessed=SimpleIdentifierImpl
    super.squeeze,

    /// optionalParameters: {required double itemExtent} , default:none
    required super.itemExtent,

    /// optionalParameters: {required void Function(int)? onSelectedItemChanged} , default:none
    required super.onSelectedItemChanged,

    /// optionalParameters: {required Widget? Function(BuildContext, int) itemBuilder} , default:none
    required super.itemBuilder,

    /// optionalParameters: {int? childCount} , default:none
    super.childCount,

    /// optionalParameters: {Widget? selectionOverlay = const CupertinoPickerDefaultSelectionOverlay()} , default:unprocessed=InstanceCreationExpressionImpl
    super.selectionOverlay,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'diameterRatio': _i2.BuilderArg<double>(
            name: 'diameterRatio',
            init: diameterRatio,
            isNamed: true,
          ),
          'backgroundColor': _i2.BuilderArg<_i4.Color?>(
            name: 'backgroundColor',
            init: backgroundColor,
            isNamed: true,
          ),
          'offAxisFraction': _i2.BuilderArg<double>(
            name: 'offAxisFraction',
            init: offAxisFraction,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'useMagnifier': _i2.BuilderArg<bool>(
            name: 'useMagnifier',
            init: useMagnifier,
            isNamed: true,
            defaultValue: false,
          ),
          'magnification': _i2.BuilderArg<double>(
            name: 'magnification',
            init: magnification,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'scrollController': _i2.BuilderArg<_i5.FixedExtentScrollController?>(
            name: 'scrollController',
            init: scrollController,
            isNamed: true,
          ),
          'squeeze': _i2.BuilderArg<double>(
            name: 'squeeze',
            init: squeeze,
            isNamed: true,
          ),
          'itemExtent': _i2.BuilderArg<double>(
            name: 'itemExtent',
            init: itemExtent,
            isNamed: true,
          ),
          'onSelectedItemChanged': _i2.BuilderArg<_i6.ValueChanged<int>?>(
            name: 'onSelectedItemChanged',
            init: onSelectedItemChanged,
            isNamed: true,
          ),
          'itemBuilder': _i2.BuilderArg<_i7.NullableIndexedWidgetBuilder>(
            name: 'itemBuilder',
            init: itemBuilder,
            isNamed: true,
          ),
          'childCount': _i2.BuilderArg<int?>(
            name: 'childCount',
            init: childCount,
            isNamed: true,
          ),
          'selectionOverlay': _i2.BuilderArg<_i7.Widget?>(
            name: 'selectionOverlay',
            init: selectionOverlay,
            isNamed: true,
          ),
        },
        super.builder() {
    mateBuilderName = 'CupertinoPicker.builder';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoPicker$Mate.builder(
          key: p.get('key').build(),
          diameterRatio: p.get('diameterRatio').build(),
          backgroundColor: p.get('backgroundColor').build(),
          offAxisFraction: p.get('offAxisFraction').build(),
          useMagnifier: p.get('useMagnifier').build(),
          magnification: p.get('magnification').build(),
          scrollController: p.get('scrollController').build(),
          squeeze: p.get('squeeze').build(),
          itemExtent: p.get('itemExtent').build(),
          onSelectedItemChanged: p.get('onSelectedItemChanged').build(),
          itemBuilder: p.get('itemBuilder').build(),
          childCount: p.get('childCount').build(),
          selectionOverlay: p.get('selectionOverlay').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class CupertinoPickerDefaultSelectionOverlay extends StatelessWidget
class CupertinoPickerDefaultSelectionOverlay$Mate extends _i1.CupertinoPickerDefaultSelectionOverlay with _i2.Mate {
  /// CupertinoPickerDefaultSelectionOverlay CupertinoPickerDefaultSelectionOverlay({Key? key, Color background = CupertinoColors.tertiarySystemFill, bool capStartEdge = true, bool capEndEdge = true})
  CupertinoPickerDefaultSelectionOverlay$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {Color background = CupertinoColors.tertiarySystemFill} , default:unprocessed=PrefixedIdentifierImpl
    super.background,

    /// optionalParameters: {bool capStartEdge = true} , default:processed=BooleanLiteralImpl
    super.capStartEdge,

    /// optionalParameters: {bool capEndEdge = true} , default:processed=BooleanLiteralImpl
    super.capEndEdge,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'background': _i2.BuilderArg<_i4.Color>(
            name: 'background',
            init: background,
            isNamed: true,
          ),
          'capStartEdge': _i2.BuilderArg<bool>(
            name: 'capStartEdge',
            init: capStartEdge,
            isNamed: true,
            defaultValue: true,
          ),
          'capEndEdge': _i2.BuilderArg<bool>(
            name: 'capEndEdge',
            init: capEndEdge,
            isNamed: true,
            defaultValue: true,
          ),
        },
        super() {
    mateBuilderName = 'CupertinoPickerDefaultSelectionOverlay';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoPickerDefaultSelectionOverlay$Mate(
          key: p.get('key').build(),
          background: p.get('background').build(),
          capStartEdge: p.get('capStartEdge').build(),
          capEndEdge: p.get('capEndEdge').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
