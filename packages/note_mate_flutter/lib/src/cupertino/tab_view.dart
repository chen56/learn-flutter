// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/cupertino/tab_view.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/widgets/framework.dart' as _i4;
import 'package:flutter/src/widgets/navigator.dart' as _i5;

/// class CupertinoTabView extends StatefulWidget
class CupertinoTabView$Mate extends _i1.CupertinoTabView with _i2.Mate {
  /// CupertinoTabView CupertinoTabView({Key? key, Widget Function(BuildContext)? builder, GlobalKey<NavigatorState>? navigatorKey, String? defaultTitle, Map<String, Widget Function(BuildContext)>? routes, Route<dynamic>? Function(RouteSettings)? onGenerateRoute, Route<dynamic>? Function(RouteSettings)? onUnknownRoute, List<NavigatorObserver> navigatorObservers = const <NavigatorObserver>[], String? restorationScopeId})
  CupertinoTabView$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {Widget Function(BuildContext)? builder} , default:none
    _i4.WidgetBuilder? builder,

    /// optionalParameters: {GlobalKey<NavigatorState>? navigatorKey} , default:none
    _i4.GlobalKey<_i5.NavigatorState>? navigatorKey,

    /// optionalParameters: {String? defaultTitle} , default:none
    String? defaultTitle,

    /// optionalParameters: {Map<String, Widget Function(BuildContext)>? routes} , default:none
    Map<String, _i4.WidgetBuilder>? routes,

    /// optionalParameters: {Route<dynamic>? Function(RouteSettings)? onGenerateRoute} , default:none
    _i5.RouteFactory? onGenerateRoute,

    /// optionalParameters: {Route<dynamic>? Function(RouteSettings)? onUnknownRoute} , default:none
    _i5.RouteFactory? onUnknownRoute,

    /// optionalParameters: {List<NavigatorObserver> navigatorObservers = const <NavigatorObserver>[]} , default:unprocessed=ListLiteralImpl
    required List<_i5.NavigatorObserver> navigatorObservers,

    /// optionalParameters: {String? restorationScopeId} , default:none
    String? restorationScopeId,
  }) : super(
          key: key,
          builder: builder,
          navigatorKey: navigatorKey,
          defaultTitle: defaultTitle,
          routes: routes,
          onGenerateRoute: onGenerateRoute,
          onUnknownRoute: onUnknownRoute,
          navigatorObservers: navigatorObservers,
          restorationScopeId: restorationScopeId,
        ) {
    mateBuilderName = 'CupertinoTabView';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoTabView$Mate(
          key: p.get('key').build(),
          builder: p.get('builder').build(),
          navigatorKey: p.get('navigatorKey').build(),
          defaultTitle: p.get('defaultTitle').build(),
          routes: p.get('routes').build(),
          onGenerateRoute: p.get('onGenerateRoute').build(),
          onUnknownRoute: p.get('onUnknownRoute').build(),
          navigatorObservers: p.get('navigatorObservers').build(),
          restorationScopeId: p.get('restorationScopeId').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'builder',
      builder,
      isNamed: true,
    );
    mateUse(
      'navigatorKey',
      navigatorKey,
      isNamed: true,
    );
    mateUse(
      'defaultTitle',
      defaultTitle,
      isNamed: true,
    );
    mateUse(
      'routes',
      routes,
      isNamed: true,
    );
    mateUse(
      'onGenerateRoute',
      onGenerateRoute,
      isNamed: true,
    );
    mateUse(
      'onUnknownRoute',
      onUnknownRoute,
      isNamed: true,
    );
    mateUse(
      'navigatorObservers',
      navigatorObservers,
      isNamed: true,
    );
    mateUse(
      'restorationScopeId',
      restorationScopeId,
      isNamed: true,
    );
  }
}
