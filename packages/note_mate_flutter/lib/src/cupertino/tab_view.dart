// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/cupertino/tab_view.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/navigator.dart';
import 'dart:core';

/// class CupertinoTabView extends StatefulWidget
class CupertinoTabView$Mate extends CupertinoTabView with Mate {
  /// CupertinoTabView CupertinoTabView({Key? key, Widget Function(BuildContext)? builder, GlobalKey<NavigatorState>? navigatorKey, String? defaultTitle, Map<String, Widget Function(BuildContext)>? routes, Route<dynamic>? Function(RouteSettings)? onGenerateRoute, Route<dynamic>? Function(RouteSettings)? onUnknownRoute, List<NavigatorObserver> navigatorObservers = const <NavigatorObserver>[], String? restorationScopeId})
  CupertinoTabView$Mate({
    /// optionalParameters: {Key? key} , defaultValue:none
    Key? key,

    /// optionalParameters: {Widget Function(BuildContext)? builder} , defaultValue:none
    WidgetBuilder? builder,

    /// optionalParameters: {GlobalKey<NavigatorState>? navigatorKey} , defaultValue:none
    GlobalKey<NavigatorState>? navigatorKey,

    /// optionalParameters: {String? defaultTitle} , defaultValue:none
    String? defaultTitle,

    /// optionalParameters: {Map<String, Widget Function(BuildContext)>? routes} , defaultValue:none
    Map<String, WidgetBuilder>? routes,

    /// optionalParameters: {Route<dynamic>? Function(RouteSettings)? onGenerateRoute} , defaultValue:none
    RouteFactory? onGenerateRoute,

    /// optionalParameters: {Route<dynamic>? Function(RouteSettings)? onUnknownRoute} , defaultValue:none
    RouteFactory? onUnknownRoute,

    /// optionalParameters: {List<NavigatorObserver> navigatorObservers = const <NavigatorObserver>[]} , defaultValue:unprocessed
    required List<NavigatorObserver> navigatorObservers,

    /// optionalParameters: {String? restorationScopeId} , defaultValue:none
    String? restorationScopeId,
  }) : super(
          key: key,
          builder: builder,
          navigatorKey: navigatorKey,
          defaultTitle: defaultTitle,
          routes: routes,
          onGenerateRoute: onGenerateRoute,
          onUnknownRoute: onUnknownRoute,
          navigatorObservers: navigatorObservers,
          restorationScopeId: restorationScopeId,
        ) {
    mateBuilder = (p) => CupertinoTabView$Mate(
          key: p.get('key').build(),
          builder: p.get('builder').build(),
          navigatorKey: p.get('navigatorKey').build(),
          defaultTitle: p.get('defaultTitle').build(),
          routes: p.get('routes').build(),
          onGenerateRoute: p.get('onGenerateRoute').build(),
          onUnknownRoute: p.get('onUnknownRoute').build(),
          navigatorObservers: p.get('navigatorObservers').build(),
          restorationScopeId: p.get('restorationScopeId').build(),
        );
    mateDeclare('key', key);
    mateDeclare('builder', builder);
    mateDeclare('navigatorKey', navigatorKey);
    mateDeclare('defaultTitle', defaultTitle);
    mateDeclare('routes', routes);
    mateDeclare('onGenerateRoute', onGenerateRoute);
    mateDeclare('onUnknownRoute', onUnknownRoute);
    mateDeclare('navigatorObservers', navigatorObservers);
    mateDeclare('restorationScopeId', restorationScopeId);
  }
}
