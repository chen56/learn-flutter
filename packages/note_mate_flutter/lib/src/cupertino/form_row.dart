// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/cupertino/form_row.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/widgets/framework.dart' as _i4;
import 'package:flutter/src/painting/edge_insets.dart' as _i5;

/// class CupertinoFormRow extends StatelessWidget
class CupertinoFormRow$Mate extends _i1.CupertinoFormRow with _i2.Mate {
  /// CupertinoFormRow CupertinoFormRow({Key? key, required Widget child, Widget? prefix, EdgeInsetsGeometry? padding, Widget? helper, Widget? error})
  CupertinoFormRow$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {required Widget child} , default:none
    required _i4.Widget child,

    /// optionalParameters: {Widget? prefix} , default:none
    _i4.Widget? prefix,

    /// optionalParameters: {EdgeInsetsGeometry? padding} , default:none
    _i5.EdgeInsetsGeometry? padding,

    /// optionalParameters: {Widget? helper} , default:none
    _i4.Widget? helper,

    /// optionalParameters: {Widget? error} , default:none
    _i4.Widget? error,
  }) : super(
          key: key,
          child: child,
          prefix: prefix,
          padding: padding,
          helper: helper,
          error: error,
        ) {
    mateBuilderName = 'CupertinoFormRow';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoFormRow$Mate(
          key: p.get('key').build(),
          child: p.get('child').build(),
          prefix: p.get('prefix').build(),
          padding: p.get('padding').build(),
          helper: p.get('helper').build(),
          error: p.get('error').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'child',
      child,
      isNamed: true,
    );
    mateUse(
      'prefix',
      prefix,
      isNamed: true,
    );
    mateUse(
      'padding',
      padding,
      isNamed: true,
    );
    mateUse(
      'helper',
      helper,
      isNamed: true,
    );
    mateUse(
      'error',
      error,
      isNamed: true,
    );
  }
}
