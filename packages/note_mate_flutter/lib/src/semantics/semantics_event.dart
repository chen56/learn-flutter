// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/semantics/semantics_event.dart';
import 'package:note/mate.dart';
import 'dart:core';
import 'dart:ui';
import 'package:flutter/semantics.dart';

/// class AnnounceSemanticsEvent extends SemanticsEvent
class AnnounceSemanticsEvent$Mate extends AnnounceSemanticsEvent with Mate {
  /// AnnounceSemanticsEvent AnnounceSemanticsEvent(String message, TextDirection textDirection, {Assertiveness assertiveness = Assertiveness.polite})
  AnnounceSemanticsEvent$Mate(
    /// requiredParameters: String message
    String message,

    /// requiredParameters: TextDirection textDirection
    TextDirection textDirection, {
    /// optionalParameters: {Assertiveness assertiveness = Assertiveness.polite} , default:processed=PrefixedIdentifierImpl
    Assertiveness assertiveness = Assertiveness.polite,
  }) : super(
          message,
          textDirection,
          assertiveness: assertiveness,
        ) {
    mateBuilderName = 'AnnounceSemanticsEvent';
    matePackageUrl = 'package:flutter/semantics.dart';
    mateBuilder = (p) => AnnounceSemanticsEvent$Mate(
          p.get('message').value,
          p.get('textDirection').value,
          assertiveness: p.get('assertiveness').build(),
        );
    mateUse(
      'message',
      message,
      isNamed: false,
    );
    mateUse(
      'textDirection',
      textDirection,
      isNamed: false,
    );
    mateUse(
      'assertiveness',
      assertiveness,
      isNamed: true,
      defaultValue: Assertiveness.polite,
    );
  }
}

/// class TooltipSemanticsEvent extends SemanticsEvent
class TooltipSemanticsEvent$Mate extends TooltipSemanticsEvent with Mate {
  /// TooltipSemanticsEvent TooltipSemanticsEvent(String message)
  TooltipSemanticsEvent$Mate(

      /// requiredParameters: String message
      String message)
      : super(message) {
    mateBuilderName = 'TooltipSemanticsEvent';
    matePackageUrl = 'package:flutter/semantics.dart';
    mateBuilder = (p) => TooltipSemanticsEvent$Mate(p.get('message').value);
    mateUse(
      'message',
      message,
      isNamed: false,
    );
  }
}
