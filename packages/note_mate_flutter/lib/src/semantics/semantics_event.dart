// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/semantics/semantics_event.dart';
import 'package:note/mate.dart';
import 'dart:core';
import 'dart:ui';

/// class AnnounceSemanticsEvent extends SemanticsEvent
class AnnounceSemanticsEvent$Mate extends AnnounceSemanticsEvent with Mate {
  /// AnnounceSemanticsEvent AnnounceSemanticsEvent(String message, TextDirection textDirection, {Assertiveness assertiveness = Assertiveness.polite})
  AnnounceSemanticsEvent$Mate(
    /// requiredParameters: String message
    String message,

    /// requiredParameters: TextDirection textDirection
    TextDirection textDirection, {
    /// optionalParameters: {Assertiveness assertiveness = Assertiveness.polite} , defaultValue:unprocessed
    required Assertiveness assertiveness,
  }) : super(
          message,
          textDirection,
          assertiveness: assertiveness,
        ) {
    mateBuilder = (p) => AnnounceSemanticsEvent$Mate(
          p.get('message').value,
          p.get('textDirection').value,
          assertiveness: p.get('assertiveness').build(),
        );
    mateUse('message', message);
    mateUse('textDirection', textDirection);
    mateUse('assertiveness', assertiveness);
  }
}

/// class TooltipSemanticsEvent extends SemanticsEvent
class TooltipSemanticsEvent$Mate extends TooltipSemanticsEvent with Mate {
  /// TooltipSemanticsEvent TooltipSemanticsEvent(String message)
  TooltipSemanticsEvent$Mate(

      /// requiredParameters: String message
      String message)
      : super(message) {
    mateBuilder = (p) => TooltipSemanticsEvent$Mate(p.get('message').value);
    mateUse('message', message);
  }
}
