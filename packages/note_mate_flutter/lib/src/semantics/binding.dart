// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/semantics/binding.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'dart:ui' as _i3;

/// class SemanticsActionEvent
class SemanticsActionEvent$Mate extends _i1.SemanticsActionEvent with _i2.Mate {
  /// SemanticsActionEvent SemanticsActionEvent({required SemanticsAction type, required int nodeId, Object? arguments})
  SemanticsActionEvent$Mate({
    /// optionalParameters: {required SemanticsAction type} , default:none
    required super.type,

    /// optionalParameters: {required int nodeId} , default:none
    required super.nodeId,

    /// optionalParameters: {Object? arguments} , default:none
    super.arguments,
  })  : mateParams = {
          'type': _i2.BuilderArg<_i3.SemanticsAction>(
            name: 'type',
            init: type,
            isNamed: true,
          ),
          'nodeId': _i2.BuilderArg<int>(
            name: 'nodeId',
            init: nodeId,
            isNamed: true,
          ),
          'arguments': _i2.BuilderArg<Object?>(
            name: 'arguments',
            init: arguments,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'SemanticsActionEvent';
    matePackageUrl = 'package:flutter/semantics.dart';
    mateBuilder = (p) => SemanticsActionEvent$Mate(
          type: p.get('type').build(),
          nodeId: p.get('nodeId').build(),
          arguments: p.get('arguments').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
