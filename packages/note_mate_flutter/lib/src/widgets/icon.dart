// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/icon.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/widgets/icon_data.dart' as _i3;
import 'package:flutter/src/foundation/key.dart' as _i4;
import 'dart:ui' as _i5;

/// class Icon extends StatelessWidget
class Icon$Mate extends _i1.Icon with _i2.Mate {
  /// Icon Icon(IconData? icon, {Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection})
  Icon$Mate(
    /// requiredParameters: IconData? icon
    _i3.IconData? icon, {
    /// optionalParameters: {Key? key} , default:none
    _i4.Key? key,

    /// optionalParameters: {double? size} , default:none
    double? size,

    /// optionalParameters: {double? fill} , default:none
    double? fill,

    /// optionalParameters: {double? weight} , default:none
    double? weight,

    /// optionalParameters: {double? grade} , default:none
    double? grade,

    /// optionalParameters: {double? opticalSize} , default:none
    double? opticalSize,

    /// optionalParameters: {Color? color} , default:none
    _i5.Color? color,

    /// optionalParameters: {List<Shadow>? shadows} , default:none
    List<_i5.Shadow>? shadows,

    /// optionalParameters: {String? semanticLabel} , default:none
    String? semanticLabel,

    /// optionalParameters: {TextDirection? textDirection} , default:none
    _i5.TextDirection? textDirection,
  }) : super(
          icon,
          key: key,
          size: size,
          fill: fill,
          weight: weight,
          grade: grade,
          opticalSize: opticalSize,
          color: color,
          shadows: shadows,
          semanticLabel: semanticLabel,
          textDirection: textDirection,
        ) {
    mateBuilderName = 'Icon';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => Icon$Mate(
          p.get('icon').value,
          key: p.get('key').build(),
          size: p.get('size').build(),
          fill: p.get('fill').build(),
          weight: p.get('weight').build(),
          grade: p.get('grade').build(),
          opticalSize: p.get('opticalSize').build(),
          color: p.get('color').build(),
          shadows: p.get('shadows').build(),
          semanticLabel: p.get('semanticLabel').build(),
          textDirection: p.get('textDirection').build(),
        );
    mateUse(
      'icon',
      icon,
      isNamed: false,
    );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'size',
      size,
      isNamed: true,
    );
    mateUse(
      'fill',
      fill,
      isNamed: true,
    );
    mateUse(
      'weight',
      weight,
      isNamed: true,
    );
    mateUse(
      'grade',
      grade,
      isNamed: true,
    );
    mateUse(
      'opticalSize',
      opticalSize,
      isNamed: true,
    );
    mateUse(
      'color',
      color,
      isNamed: true,
    );
    mateUse(
      'shadows',
      shadows,
      isNamed: true,
    );
    mateUse(
      'semanticLabel',
      semanticLabel,
      isNamed: true,
    );
    mateUse(
      'textDirection',
      textDirection,
      isNamed: true,
    );
  }
}
