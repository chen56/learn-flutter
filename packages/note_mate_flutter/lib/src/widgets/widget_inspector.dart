// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/widgets/widget_inspector.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'dart:core';
import 'package:flutter/src/foundation/diagnostics.dart';

/// class WidgetInspector extends StatefulWidget
class WidgetInspector$Mate extends WidgetInspector with Mate {
  /// WidgetInspector WidgetInspector({Key? key, required Widget child, required Widget Function(BuildContext, void Function())? selectButtonBuilder})
  WidgetInspector$Mate({
    /// optionalParameters: {Key? key} , defaultValue:none
    Key? key,

    /// optionalParameters: {required Widget child} , defaultValue:none
    required Widget child,

    /// optionalParameters: {required Widget Function(BuildContext, void Function())? selectButtonBuilder} , defaultValue:none
    required InspectorSelectButtonBuilder? selectButtonBuilder,
  }) : super(
          key: key,
          child: child,
          selectButtonBuilder: selectButtonBuilder,
        ) {
    mateCreateName = 'WidgetInspector';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => WidgetInspector$Mate(
          key: p.get('key').build(),
          child: p.get('child').build(),
          selectButtonBuilder: p.get('selectButtonBuilder').build(),
        );
    mateUse('key', key);
    mateUse('child', child);
    mateUse('selectButtonBuilder', selectButtonBuilder);
  }
}

/// class DevToolsDeepLinkProperty extends DiagnosticsProperty<String>
class DevToolsDeepLinkProperty$Mate extends DevToolsDeepLinkProperty with Mate {
  /// DevToolsDeepLinkProperty DevToolsDeepLinkProperty(String description, String url)
  DevToolsDeepLinkProperty$Mate(
    /// requiredParameters: String description
    String description,

    /// requiredParameters: String url
    String url,
  ) : super(
          description,
          url,
        ) {
    mateCreateName = 'DevToolsDeepLinkProperty';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => DevToolsDeepLinkProperty$Mate(
          p.get('description').value,
          p.get('url').value,
        );
    mateUse('description', description);
    mateUse('url', url);
  }
}

/// class InspectorSerializationDelegate implements DiagnosticsSerializationDelegate
class InspectorSerializationDelegate$Mate extends InspectorSerializationDelegate with Mate {
  /// InspectorSerializationDelegate InspectorSerializationDelegate({String? groupName, bool summaryTree = false, int maxDescendantsTruncatableNode = -1, bool expandPropertyValues = true, int subtreeDepth = 1, bool includeProperties = false, required WidgetInspectorService service, Map<String, Object>? Function(DiagnosticsNode, InspectorSerializationDelegate)? addAdditionalPropertiesCallback})
  InspectorSerializationDelegate$Mate({
    /// optionalParameters: {String? groupName} , defaultValue:none
    String? groupName,

    /// optionalParameters: {bool summaryTree = false} , defaultValue:Literal
    bool summaryTree = false,

    /// optionalParameters: {int maxDescendantsTruncatableNode = -1} , defaultValue:unprocessed
    required int maxDescendantsTruncatableNode,

    /// optionalParameters: {bool expandPropertyValues = true} , defaultValue:Literal
    bool expandPropertyValues = true,

    /// optionalParameters: {int subtreeDepth = 1} , defaultValue:Literal
    int subtreeDepth = 1,

    /// optionalParameters: {bool includeProperties = false} , defaultValue:Literal
    bool includeProperties = false,

    /// optionalParameters: {required WidgetInspectorService service} , defaultValue:none
    required WidgetInspectorService service,

    /// optionalParameters: {Map<String, Object>? Function(DiagnosticsNode, InspectorSerializationDelegate)? addAdditionalPropertiesCallback} , defaultValue:none
    Map<String, Object>? Function(
      DiagnosticsNode,
      InspectorSerializationDelegate,
    )? addAdditionalPropertiesCallback,
  }) : super(
          groupName: groupName,
          summaryTree: summaryTree,
          maxDescendantsTruncatableNode: maxDescendantsTruncatableNode,
          expandPropertyValues: expandPropertyValues,
          subtreeDepth: subtreeDepth,
          includeProperties: includeProperties,
          service: service,
          addAdditionalPropertiesCallback: addAdditionalPropertiesCallback,
        ) {
    mateCreateName = 'InspectorSerializationDelegate';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => InspectorSerializationDelegate$Mate(
          groupName: p.get('groupName').build(),
          summaryTree: p.get('summaryTree').build(),
          maxDescendantsTruncatableNode: p.get('maxDescendantsTruncatableNode').build(),
          expandPropertyValues: p.get('expandPropertyValues').build(),
          subtreeDepth: p.get('subtreeDepth').build(),
          includeProperties: p.get('includeProperties').build(),
          service: p.get('service').build(),
          addAdditionalPropertiesCallback: p.get('addAdditionalPropertiesCallback').build(),
        );
    mateUse('groupName', groupName);
    mateUse('summaryTree', summaryTree);
    mateUse('maxDescendantsTruncatableNode', maxDescendantsTruncatableNode);
    mateUse('expandPropertyValues', expandPropertyValues);
    mateUse('subtreeDepth', subtreeDepth);
    mateUse('includeProperties', includeProperties);
    mateUse('service', service);
    mateUse('addAdditionalPropertiesCallback', addAdditionalPropertiesCallback);
  }
}
