// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/scroll_notification.dart' as _i1;
import 'package:note/mate_core.dart' as _i2;
import 'package:flutter/src/widgets/scroll_metrics.dart' as _i3;
import 'package:flutter/src/widgets/framework.dart' as _i4;
import 'package:flutter/src/gestures/drag_details.dart' as _i5;
import 'package:flutter/src/rendering/viewport_offset.dart' as _i6;

/// class ScrollStartNotification extends ScrollNotification
class ScrollStartNotification$Mate extends _i1.ScrollStartNotification
    with _i2.Mate {
  /// ScrollStartNotification ScrollStartNotification({required ScrollMetrics metrics, required BuildContext? context, DragStartDetails? dragDetails})
  ScrollStartNotification$Mate({
    /// optionalParameters: {required ScrollMetrics metrics} , default:none
    required super.metrics,

    /// optionalParameters: {required BuildContext? context} , default:none
    required super.context,

    /// optionalParameters: {DragStartDetails? dragDetails} , default:none
    super.dragDetails,
  })  : mateParams = {
          'metrics': _i2.BuilderArg<_i3.ScrollMetrics>(
            name: 'metrics',
            init: metrics,
            isNamed: true,
          ),
          'context': _i2.BuilderArg<_i4.BuildContext?>(
            name: 'context',
            init: context,
            isNamed: true,
          ),
          'dragDetails': _i2.BuilderArg<_i5.DragStartDetails?>(
            name: 'dragDetails',
            init: dragDetails,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'ScrollStartNotification';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ScrollStartNotification$Mate(
          metrics: p.get('metrics').build(),
          context: p.get('context').build(),
          dragDetails: p.get('dragDetails').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class ScrollUpdateNotification extends ScrollNotification
class ScrollUpdateNotification$Mate extends _i1.ScrollUpdateNotification
    with _i2.Mate {
  /// ScrollUpdateNotification ScrollUpdateNotification({required ScrollMetrics metrics, required BuildContext context, DragUpdateDetails? dragDetails, double? scrollDelta, int? depth})
  ScrollUpdateNotification$Mate({
    /// optionalParameters: {required ScrollMetrics metrics} , default:none
    required super.metrics,

    /// optionalParameters: {required BuildContext context} , default:none
    required super.context,

    /// optionalParameters: {DragUpdateDetails? dragDetails} , default:none
    super.dragDetails,

    /// optionalParameters: {double? scrollDelta} , default:none
    super.scrollDelta,

    /// optionalParameters: {int? depth} , default:none
    super.depth,
  })  : mateParams = {
          'metrics': _i2.BuilderArg<_i3.ScrollMetrics>(
            name: 'metrics',
            init: metrics,
            isNamed: true,
          ),
          'context': _i2.BuilderArg<_i4.BuildContext>(
            name: 'context',
            init: context,
            isNamed: true,
          ),
          'dragDetails': _i2.BuilderArg<_i5.DragUpdateDetails?>(
            name: 'dragDetails',
            init: dragDetails,
            isNamed: true,
          ),
          'scrollDelta': _i2.BuilderArg<double?>(
            name: 'scrollDelta',
            init: scrollDelta,
            isNamed: true,
          ),
          'depth': _i2.BuilderArg<int?>(
            name: 'depth',
            init: depth,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'ScrollUpdateNotification';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ScrollUpdateNotification$Mate(
          metrics: p.get('metrics').build(),
          context: p.get('context').build(),
          dragDetails: p.get('dragDetails').build(),
          scrollDelta: p.get('scrollDelta').build(),
          depth: p.get('depth').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class OverscrollNotification extends ScrollNotification
class OverscrollNotification$Mate extends _i1.OverscrollNotification
    with _i2.Mate {
  /// OverscrollNotification OverscrollNotification({required ScrollMetrics metrics, required BuildContext context, DragUpdateDetails? dragDetails, required double overscroll, double velocity = 0.0})
  OverscrollNotification$Mate({
    /// optionalParameters: {required ScrollMetrics metrics} , default:none
    required super.metrics,

    /// optionalParameters: {required BuildContext context} , default:none
    required super.context,

    /// optionalParameters: {DragUpdateDetails? dragDetails} , default:none
    super.dragDetails,

    /// optionalParameters: {required double overscroll} , default:none
    required super.overscroll,

    /// optionalParameters: {double velocity = 0.0} , default:processed=DoubleLiteralImpl
    super.velocity,
  })  : mateParams = {
          'metrics': _i2.BuilderArg<_i3.ScrollMetrics>(
            name: 'metrics',
            init: metrics,
            isNamed: true,
          ),
          'context': _i2.BuilderArg<_i4.BuildContext>(
            name: 'context',
            init: context,
            isNamed: true,
          ),
          'dragDetails': _i2.BuilderArg<_i5.DragUpdateDetails?>(
            name: 'dragDetails',
            init: dragDetails,
            isNamed: true,
          ),
          'overscroll': _i2.BuilderArg<double>(
            name: 'overscroll',
            init: overscroll,
            isNamed: true,
          ),
          'velocity': _i2.BuilderArg<double>(
            name: 'velocity',
            init: velocity,
            isNamed: true,
            defaultValue: 0.0,
          ),
        },
        super() {
    mateBuilderName = 'OverscrollNotification';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => OverscrollNotification$Mate(
          metrics: p.get('metrics').build(),
          context: p.get('context').build(),
          dragDetails: p.get('dragDetails').build(),
          overscroll: p.get('overscroll').build(),
          velocity: p.get('velocity').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class ScrollEndNotification extends ScrollNotification
class ScrollEndNotification$Mate extends _i1.ScrollEndNotification
    with _i2.Mate {
  /// ScrollEndNotification ScrollEndNotification({required ScrollMetrics metrics, required BuildContext context, DragEndDetails? dragDetails})
  ScrollEndNotification$Mate({
    /// optionalParameters: {required ScrollMetrics metrics} , default:none
    required super.metrics,

    /// optionalParameters: {required BuildContext context} , default:none
    required super.context,

    /// optionalParameters: {DragEndDetails? dragDetails} , default:none
    super.dragDetails,
  })  : mateParams = {
          'metrics': _i2.BuilderArg<_i3.ScrollMetrics>(
            name: 'metrics',
            init: metrics,
            isNamed: true,
          ),
          'context': _i2.BuilderArg<_i4.BuildContext>(
            name: 'context',
            init: context,
            isNamed: true,
          ),
          'dragDetails': _i2.BuilderArg<_i5.DragEndDetails?>(
            name: 'dragDetails',
            init: dragDetails,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'ScrollEndNotification';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ScrollEndNotification$Mate(
          metrics: p.get('metrics').build(),
          context: p.get('context').build(),
          dragDetails: p.get('dragDetails').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class UserScrollNotification extends ScrollNotification
class UserScrollNotification$Mate extends _i1.UserScrollNotification
    with _i2.Mate {
  /// UserScrollNotification UserScrollNotification({required ScrollMetrics metrics, required BuildContext context, required ScrollDirection direction})
  UserScrollNotification$Mate({
    /// optionalParameters: {required ScrollMetrics metrics} , default:none
    required super.metrics,

    /// optionalParameters: {required BuildContext context} , default:none
    required super.context,

    /// optionalParameters: {required ScrollDirection direction} , default:none
    required super.direction,
  })  : mateParams = {
          'metrics': _i2.BuilderArg<_i3.ScrollMetrics>(
            name: 'metrics',
            init: metrics,
            isNamed: true,
          ),
          'context': _i2.BuilderArg<_i4.BuildContext>(
            name: 'context',
            init: context,
            isNamed: true,
          ),
          'direction': _i2.BuilderArg<_i6.ScrollDirection>(
            name: 'direction',
            init: direction,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'UserScrollNotification';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => UserScrollNotification$Mate(
          metrics: p.get('metrics').build(),
          context: p.get('context').build(),
          direction: p.get('direction').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
