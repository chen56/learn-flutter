// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/interactive_viewer.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'dart:ui' as _i4;
import 'package:flutter/cupertino.dart' as _i5;
import 'package:flutter/src/painting/edge_insets.dart' as _i6;
import 'package:flutter/src/gestures/scale.dart' as _i7;
import 'package:flutter/src/painting/alignment.dart' as _i8;
import 'package:flutter/src/widgets/framework.dart' as _i9;
import 'package:vector_math/vector_math_64.dart' as _i10;

/// class InteractiveViewer extends StatefulWidget
class InteractiveViewer$Mate extends _i1.InteractiveViewer with _i2.Mate {
  /// InteractiveViewer InteractiveViewer({Key? key, Clip clipBehavior = Clip.hardEdge, bool alignPanAxis = false, PanAxis panAxis = PanAxis.free, EdgeInsets boundaryMargin = EdgeInsets.zero, bool constrained = true, double maxScale = 2.5, double minScale = 0.8, double interactionEndFrictionCoefficient = _kDrag, void Function(ScaleEndDetails)? onInteractionEnd, void Function(ScaleStartDetails)? onInteractionStart, void Function(ScaleUpdateDetails)? onInteractionUpdate, bool panEnabled = true, bool scaleEnabled = true, double scaleFactor = kDefaultMouseScrollToScaleFactor, TransformationController? transformationController, Alignment? alignment, bool trackpadScrollCausesScale = false, required Widget child})
  InteractiveViewer$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {Clip clipBehavior = Clip.hardEdge} , default:processed=PrefixedIdentifierImpl
    _i4.Clip clipBehavior = _i4.Clip.hardEdge,

    /// optionalParameters: {PanAxis panAxis = PanAxis.free} , default:processed=PrefixedIdentifierImpl
    _i1.PanAxis panAxis = _i5.PanAxis.free,

    /// optionalParameters: {EdgeInsets boundaryMargin = EdgeInsets.zero} , default:processed=PrefixedIdentifierImpl
    _i6.EdgeInsets boundaryMargin = _i5.EdgeInsets.zero,

    /// optionalParameters: {bool constrained = true} , default:processed=BooleanLiteralImpl
    bool constrained = true,

    /// optionalParameters: {double maxScale = 2.5} , default:processed=DoubleLiteralImpl
    double maxScale = 2.5,

    /// optionalParameters: {double minScale = 0.8} , default:processed=DoubleLiteralImpl
    double minScale = 0.8,

    /// optionalParameters: {double interactionEndFrictionCoefficient = _kDrag} , default:unprocessed=SimpleIdentifierImpl
    required double interactionEndFrictionCoefficient,

    /// optionalParameters: {void Function(ScaleEndDetails)? onInteractionEnd} , default:none
    _i7.GestureScaleEndCallback? onInteractionEnd,

    /// optionalParameters: {void Function(ScaleStartDetails)? onInteractionStart} , default:none
    _i7.GestureScaleStartCallback? onInteractionStart,

    /// optionalParameters: {void Function(ScaleUpdateDetails)? onInteractionUpdate} , default:none
    _i7.GestureScaleUpdateCallback? onInteractionUpdate,

    /// optionalParameters: {bool panEnabled = true} , default:processed=BooleanLiteralImpl
    bool panEnabled = true,

    /// optionalParameters: {bool scaleEnabled = true} , default:processed=BooleanLiteralImpl
    bool scaleEnabled = true,

    /// optionalParameters: {double scaleFactor = kDefaultMouseScrollToScaleFactor} , default:unprocessed=SimpleIdentifierImpl
    required double scaleFactor,

    /// optionalParameters: {TransformationController? transformationController} , default:none
    _i1.TransformationController? transformationController,

    /// optionalParameters: {Alignment? alignment} , default:none
    _i8.Alignment? alignment,

    /// optionalParameters: {bool trackpadScrollCausesScale = false} , default:processed=BooleanLiteralImpl
    bool trackpadScrollCausesScale = false,

    /// optionalParameters: {required Widget child} , default:none
    required _i9.Widget child,
  }) : super(
          key: key,
          clipBehavior: clipBehavior,
          panAxis: panAxis,
          boundaryMargin: boundaryMargin,
          constrained: constrained,
          maxScale: maxScale,
          minScale: minScale,
          interactionEndFrictionCoefficient: interactionEndFrictionCoefficient,
          onInteractionEnd: onInteractionEnd,
          onInteractionStart: onInteractionStart,
          onInteractionUpdate: onInteractionUpdate,
          panEnabled: panEnabled,
          scaleEnabled: scaleEnabled,
          scaleFactor: scaleFactor,
          transformationController: transformationController,
          alignment: alignment,
          trackpadScrollCausesScale: trackpadScrollCausesScale,
          child: child,
        ) {
    mateBuilderName = 'InteractiveViewer';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => InteractiveViewer$Mate(
          key: p.get('key').build(),
          clipBehavior: p.get('clipBehavior').build(),
          panAxis: p.get('panAxis').build(),
          boundaryMargin: p.get('boundaryMargin').build(),
          constrained: p.get('constrained').build(),
          maxScale: p.get('maxScale').build(),
          minScale: p.get('minScale').build(),
          interactionEndFrictionCoefficient: p.get('interactionEndFrictionCoefficient').build(),
          onInteractionEnd: p.get('onInteractionEnd').build(),
          onInteractionStart: p.get('onInteractionStart').build(),
          onInteractionUpdate: p.get('onInteractionUpdate').build(),
          panEnabled: p.get('panEnabled').build(),
          scaleEnabled: p.get('scaleEnabled').build(),
          scaleFactor: p.get('scaleFactor').build(),
          transformationController: p.get('transformationController').build(),
          alignment: p.get('alignment').build(),
          trackpadScrollCausesScale: p.get('trackpadScrollCausesScale').build(),
          child: p.get('child').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'clipBehavior',
      clipBehavior,
      isNamed: true,
      defaultValue: _i4.Clip.hardEdge,
    );
    mateUse(
      'panAxis',
      panAxis,
      isNamed: true,
      defaultValue: _i5.PanAxis.free,
    );
    mateUse(
      'boundaryMargin',
      boundaryMargin,
      isNamed: true,
      defaultValue: _i5.EdgeInsets.zero,
    );
    mateUse(
      'constrained',
      constrained,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'maxScale',
      maxScale,
      isNamed: true,
      defaultValue: 2.5,
    );
    mateUse(
      'minScale',
      minScale,
      isNamed: true,
      defaultValue: 0.8,
    );
    mateUse(
      'interactionEndFrictionCoefficient',
      interactionEndFrictionCoefficient,
      isNamed: true,
    );
    mateUse(
      'onInteractionEnd',
      onInteractionEnd,
      isNamed: true,
    );
    mateUse(
      'onInteractionStart',
      onInteractionStart,
      isNamed: true,
    );
    mateUse(
      'onInteractionUpdate',
      onInteractionUpdate,
      isNamed: true,
    );
    mateUse(
      'panEnabled',
      panEnabled,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'scaleEnabled',
      scaleEnabled,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'scaleFactor',
      scaleFactor,
      isNamed: true,
    );
    mateUse(
      'transformationController',
      transformationController,
      isNamed: true,
    );
    mateUse(
      'alignment',
      alignment,
      isNamed: true,
    );
    mateUse(
      'trackpadScrollCausesScale',
      trackpadScrollCausesScale,
      isNamed: true,
      defaultValue: false,
    );
    mateUse(
      'child',
      child,
      isNamed: true,
    );
  }

  /// InteractiveViewer InteractiveViewer.builder({Key? key, Clip clipBehavior = Clip.hardEdge, bool alignPanAxis = false, PanAxis panAxis = PanAxis.free, EdgeInsets boundaryMargin = EdgeInsets.zero, double maxScale = 2.5, double minScale = 0.8, double interactionEndFrictionCoefficient = _kDrag, void Function(ScaleEndDetails)? onInteractionEnd, void Function(ScaleStartDetails)? onInteractionStart, void Function(ScaleUpdateDetails)? onInteractionUpdate, bool panEnabled = true, bool scaleEnabled = true, double scaleFactor = 200.0, TransformationController? transformationController, Alignment? alignment, bool trackpadScrollCausesScale = false, required Widget Function(BuildContext, Quad) builder})
  InteractiveViewer$Mate.builder({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {Clip clipBehavior = Clip.hardEdge} , default:processed=PrefixedIdentifierImpl
    _i4.Clip clipBehavior = _i4.Clip.hardEdge,

    /// optionalParameters: {PanAxis panAxis = PanAxis.free} , default:processed=PrefixedIdentifierImpl
    _i1.PanAxis panAxis = _i5.PanAxis.free,

    /// optionalParameters: {EdgeInsets boundaryMargin = EdgeInsets.zero} , default:processed=PrefixedIdentifierImpl
    _i6.EdgeInsets boundaryMargin = _i5.EdgeInsets.zero,

    /// optionalParameters: {double maxScale = 2.5} , default:processed=DoubleLiteralImpl
    double maxScale = 2.5,

    /// optionalParameters: {double minScale = 0.8} , default:processed=DoubleLiteralImpl
    double minScale = 0.8,

    /// optionalParameters: {double interactionEndFrictionCoefficient = _kDrag} , default:unprocessed=SimpleIdentifierImpl
    required double interactionEndFrictionCoefficient,

    /// optionalParameters: {void Function(ScaleEndDetails)? onInteractionEnd} , default:none
    _i7.GestureScaleEndCallback? onInteractionEnd,

    /// optionalParameters: {void Function(ScaleStartDetails)? onInteractionStart} , default:none
    _i7.GestureScaleStartCallback? onInteractionStart,

    /// optionalParameters: {void Function(ScaleUpdateDetails)? onInteractionUpdate} , default:none
    _i7.GestureScaleUpdateCallback? onInteractionUpdate,

    /// optionalParameters: {bool panEnabled = true} , default:processed=BooleanLiteralImpl
    bool panEnabled = true,

    /// optionalParameters: {bool scaleEnabled = true} , default:processed=BooleanLiteralImpl
    bool scaleEnabled = true,

    /// optionalParameters: {double scaleFactor = 200.0} , default:processed=DoubleLiteralImpl
    double scaleFactor = 200.0,

    /// optionalParameters: {TransformationController? transformationController} , default:none
    _i1.TransformationController? transformationController,

    /// optionalParameters: {Alignment? alignment} , default:none
    _i8.Alignment? alignment,

    /// optionalParameters: {bool trackpadScrollCausesScale = false} , default:processed=BooleanLiteralImpl
    bool trackpadScrollCausesScale = false,

    /// optionalParameters: {required Widget Function(BuildContext, Quad) builder} , default:none
    required _i1.InteractiveViewerWidgetBuilder builder,
  }) : super.builder(
          key: key,
          clipBehavior: clipBehavior,
          panAxis: panAxis,
          boundaryMargin: boundaryMargin,
          maxScale: maxScale,
          minScale: minScale,
          interactionEndFrictionCoefficient: interactionEndFrictionCoefficient,
          onInteractionEnd: onInteractionEnd,
          onInteractionStart: onInteractionStart,
          onInteractionUpdate: onInteractionUpdate,
          panEnabled: panEnabled,
          scaleEnabled: scaleEnabled,
          scaleFactor: scaleFactor,
          transformationController: transformationController,
          alignment: alignment,
          trackpadScrollCausesScale: trackpadScrollCausesScale,
          builder: builder,
        ) {
    mateBuilderName = 'InteractiveViewer.builder';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => InteractiveViewer$Mate.builder(
          key: p.get('key').build(),
          clipBehavior: p.get('clipBehavior').build(),
          panAxis: p.get('panAxis').build(),
          boundaryMargin: p.get('boundaryMargin').build(),
          maxScale: p.get('maxScale').build(),
          minScale: p.get('minScale').build(),
          interactionEndFrictionCoefficient: p.get('interactionEndFrictionCoefficient').build(),
          onInteractionEnd: p.get('onInteractionEnd').build(),
          onInteractionStart: p.get('onInteractionStart').build(),
          onInteractionUpdate: p.get('onInteractionUpdate').build(),
          panEnabled: p.get('panEnabled').build(),
          scaleEnabled: p.get('scaleEnabled').build(),
          scaleFactor: p.get('scaleFactor').build(),
          transformationController: p.get('transformationController').build(),
          alignment: p.get('alignment').build(),
          trackpadScrollCausesScale: p.get('trackpadScrollCausesScale').build(),
          builder: p.get('builder').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'clipBehavior',
      clipBehavior,
      isNamed: true,
      defaultValue: _i4.Clip.hardEdge,
    );
    mateUse(
      'panAxis',
      panAxis,
      isNamed: true,
      defaultValue: _i5.PanAxis.free,
    );
    mateUse(
      'boundaryMargin',
      boundaryMargin,
      isNamed: true,
      defaultValue: _i5.EdgeInsets.zero,
    );
    mateUse(
      'maxScale',
      maxScale,
      isNamed: true,
      defaultValue: 2.5,
    );
    mateUse(
      'minScale',
      minScale,
      isNamed: true,
      defaultValue: 0.8,
    );
    mateUse(
      'interactionEndFrictionCoefficient',
      interactionEndFrictionCoefficient,
      isNamed: true,
    );
    mateUse(
      'onInteractionEnd',
      onInteractionEnd,
      isNamed: true,
    );
    mateUse(
      'onInteractionStart',
      onInteractionStart,
      isNamed: true,
    );
    mateUse(
      'onInteractionUpdate',
      onInteractionUpdate,
      isNamed: true,
    );
    mateUse(
      'panEnabled',
      panEnabled,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'scaleEnabled',
      scaleEnabled,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'scaleFactor',
      scaleFactor,
      isNamed: true,
      defaultValue: 200.0,
    );
    mateUse(
      'transformationController',
      transformationController,
      isNamed: true,
    );
    mateUse(
      'alignment',
      alignment,
      isNamed: true,
    );
    mateUse(
      'trackpadScrollCausesScale',
      trackpadScrollCausesScale,
      isNamed: true,
      defaultValue: false,
    );
    mateUse(
      'builder',
      builder,
      isNamed: true,
    );
  }
}

/// class TransformationController extends ValueNotifier<Matrix4>
class TransformationController$Mate extends _i1.TransformationController with _i2.Mate {
  /// TransformationController TransformationController([Matrix4? value])
  TransformationController$Mate(

      /// requiredParameters: [Matrix4? value]
      _i10.Matrix4? value)
      : super(value) {
    mateBuilderName = 'TransformationController';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => TransformationController$Mate(p.get('value').value);
    mateUse(
      'value',
      value,
      isNamed: false,
    );
  }
}
