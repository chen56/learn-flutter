// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/scrollable.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/painting/basic_types.dart' as _i4;
import 'package:flutter/cupertino.dart' as _i5;
import 'package:flutter/src/widgets/scroll_controller.dart' as _i6;
import 'package:flutter/src/widgets/scroll_physics.dart' as _i7;
import 'package:flutter/src/widgets/scrollable_helpers.dart' as _i8;
import 'package:flutter/src/gestures/recognizer.dart' as _i9;
import 'package:flutter/gestures.dart' as _i10;
import 'package:flutter/src/widgets/scroll_configuration.dart' as _i11;
import 'dart:ui' as _i12;

/// class Scrollable extends StatefulWidget
class Scrollable$Mate extends _i1.Scrollable with _i2.Mate {
  /// Scrollable Scrollable({Key? key, AxisDirection axisDirection = AxisDirection.down, ScrollController? controller, ScrollPhysics? physics, required Widget Function(BuildContext, ViewportOffset) viewportBuilder, double Function(ScrollIncrementDetails)? incrementCalculator, bool excludeFromSemantics = false, int? semanticChildCount, DragStartBehavior dragStartBehavior = DragStartBehavior.start, String? restorationId, ScrollBehavior? scrollBehavior, Clip clipBehavior = Clip.hardEdge})
  Scrollable$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {AxisDirection axisDirection = AxisDirection.down} , default:processed=PrefixedIdentifierImpl
    _i4.AxisDirection axisDirection = _i5.AxisDirection.down,

    /// optionalParameters: {ScrollController? controller} , default:none
    _i6.ScrollController? controller,

    /// optionalParameters: {ScrollPhysics? physics} , default:none
    _i7.ScrollPhysics? physics,

    /// optionalParameters: {required Widget Function(BuildContext, ViewportOffset) viewportBuilder} , default:none
    required _i1.ViewportBuilder viewportBuilder,

    /// optionalParameters: {double Function(ScrollIncrementDetails)? incrementCalculator} , default:none
    _i8.ScrollIncrementCalculator? incrementCalculator,

    /// optionalParameters: {bool excludeFromSemantics = false} , default:processed=BooleanLiteralImpl
    bool excludeFromSemantics = false,

    /// optionalParameters: {int? semanticChildCount} , default:none
    int? semanticChildCount,

    /// optionalParameters: {DragStartBehavior dragStartBehavior = DragStartBehavior.start} , default:processed=PrefixedIdentifierImpl
    _i9.DragStartBehavior dragStartBehavior = _i10.DragStartBehavior.start,

    /// optionalParameters: {String? restorationId} , default:none
    String? restorationId,

    /// optionalParameters: {ScrollBehavior? scrollBehavior} , default:none
    _i11.ScrollBehavior? scrollBehavior,

    /// optionalParameters: {Clip clipBehavior = Clip.hardEdge} , default:processed=PrefixedIdentifierImpl
    _i12.Clip clipBehavior = _i12.Clip.hardEdge,
  }) : super(
          key: key,
          axisDirection: axisDirection,
          controller: controller,
          physics: physics,
          viewportBuilder: viewportBuilder,
          incrementCalculator: incrementCalculator,
          excludeFromSemantics: excludeFromSemantics,
          semanticChildCount: semanticChildCount,
          dragStartBehavior: dragStartBehavior,
          restorationId: restorationId,
          scrollBehavior: scrollBehavior,
          clipBehavior: clipBehavior,
        ) {
    mateBuilderName = 'Scrollable';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => Scrollable$Mate(
          key: p.get('key').build(),
          axisDirection: p.get('axisDirection').build(),
          controller: p.get('controller').build(),
          physics: p.get('physics').build(),
          viewportBuilder: p.get('viewportBuilder').build(),
          incrementCalculator: p.get('incrementCalculator').build(),
          excludeFromSemantics: p.get('excludeFromSemantics').build(),
          semanticChildCount: p.get('semanticChildCount').build(),
          dragStartBehavior: p.get('dragStartBehavior').build(),
          restorationId: p.get('restorationId').build(),
          scrollBehavior: p.get('scrollBehavior').build(),
          clipBehavior: p.get('clipBehavior').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'axisDirection',
      axisDirection,
      isNamed: true,
      defaultValue: _i5.AxisDirection.down,
    );
    mateUse(
      'controller',
      controller,
      isNamed: true,
    );
    mateUse(
      'physics',
      physics,
      isNamed: true,
    );
    mateUse(
      'viewportBuilder',
      viewportBuilder,
      isNamed: true,
    );
    mateUse(
      'incrementCalculator',
      incrementCalculator,
      isNamed: true,
    );
    mateUse(
      'excludeFromSemantics',
      excludeFromSemantics,
      isNamed: true,
      defaultValue: false,
    );
    mateUse(
      'semanticChildCount',
      semanticChildCount,
      isNamed: true,
    );
    mateUse(
      'dragStartBehavior',
      dragStartBehavior,
      isNamed: true,
      defaultValue: _i10.DragStartBehavior.start,
    );
    mateUse(
      'restorationId',
      restorationId,
      isNamed: true,
    );
    mateUse(
      'scrollBehavior',
      scrollBehavior,
      isNamed: true,
    );
    mateUse(
      'clipBehavior',
      clipBehavior,
      isNamed: true,
      defaultValue: _i12.Clip.hardEdge,
    );
  }
}
