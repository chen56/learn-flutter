// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/safe_area.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/painting/edge_insets.dart' as _i4;
import 'package:flutter/cupertino.dart' as _i5;
import 'package:flutter/src/widgets/framework.dart' as _i6;

/// class SafeArea extends StatelessWidget
class SafeArea$Mate extends _i1.SafeArea with _i2.Mate {
  /// SafeArea SafeArea({Key? key, bool left = true, bool top = true, bool right = true, bool bottom = true, EdgeInsets minimum = EdgeInsets.zero, bool maintainBottomViewPadding = false, required Widget child})
  SafeArea$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {bool left = true} , default:processed=BooleanLiteralImpl
    bool left = true,

    /// optionalParameters: {bool top = true} , default:processed=BooleanLiteralImpl
    bool top = true,

    /// optionalParameters: {bool right = true} , default:processed=BooleanLiteralImpl
    bool right = true,

    /// optionalParameters: {bool bottom = true} , default:processed=BooleanLiteralImpl
    bool bottom = true,

    /// optionalParameters: {EdgeInsets minimum = EdgeInsets.zero} , default:processed=PrefixedIdentifierImpl
    _i4.EdgeInsets minimum = _i5.EdgeInsets.zero,

    /// optionalParameters: {bool maintainBottomViewPadding = false} , default:processed=BooleanLiteralImpl
    bool maintainBottomViewPadding = false,

    /// optionalParameters: {required Widget child} , default:none
    required _i6.Widget child,
  }) : super(
          key: key,
          left: left,
          top: top,
          right: right,
          bottom: bottom,
          minimum: minimum,
          maintainBottomViewPadding: maintainBottomViewPadding,
          child: child,
        ) {
    mateBuilderName = 'SafeArea';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => SafeArea$Mate(
          key: p.get('key').build(),
          left: p.get('left').build(),
          top: p.get('top').build(),
          right: p.get('right').build(),
          bottom: p.get('bottom').build(),
          minimum: p.get('minimum').build(),
          maintainBottomViewPadding: p.get('maintainBottomViewPadding').build(),
          child: p.get('child').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'left',
      left,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'top',
      top,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'right',
      right,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'bottom',
      bottom,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'minimum',
      minimum,
      isNamed: true,
      defaultValue: _i5.EdgeInsets.zero,
    );
    mateUse(
      'maintainBottomViewPadding',
      maintainBottomViewPadding,
      isNamed: true,
      defaultValue: false,
    );
    mateUse(
      'child',
      child,
      isNamed: true,
    );
  }
}

/// class SliverSafeArea extends StatelessWidget
class SliverSafeArea$Mate extends _i1.SliverSafeArea with _i2.Mate {
  /// SliverSafeArea SliverSafeArea({Key? key, bool left = true, bool top = true, bool right = true, bool bottom = true, EdgeInsets minimum = EdgeInsets.zero, required Widget sliver})
  SliverSafeArea$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {bool left = true} , default:processed=BooleanLiteralImpl
    bool left = true,

    /// optionalParameters: {bool top = true} , default:processed=BooleanLiteralImpl
    bool top = true,

    /// optionalParameters: {bool right = true} , default:processed=BooleanLiteralImpl
    bool right = true,

    /// optionalParameters: {bool bottom = true} , default:processed=BooleanLiteralImpl
    bool bottom = true,

    /// optionalParameters: {EdgeInsets minimum = EdgeInsets.zero} , default:processed=PrefixedIdentifierImpl
    _i4.EdgeInsets minimum = _i5.EdgeInsets.zero,

    /// optionalParameters: {required Widget sliver} , default:none
    required _i6.Widget sliver,
  }) : super(
          key: key,
          left: left,
          top: top,
          right: right,
          bottom: bottom,
          minimum: minimum,
          sliver: sliver,
        ) {
    mateBuilderName = 'SliverSafeArea';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => SliverSafeArea$Mate(
          key: p.get('key').build(),
          left: p.get('left').build(),
          top: p.get('top').build(),
          right: p.get('right').build(),
          bottom: p.get('bottom').build(),
          minimum: p.get('minimum').build(),
          sliver: p.get('sliver').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'left',
      left,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'top',
      top,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'right',
      right,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'bottom',
      bottom,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'minimum',
      minimum,
      isNamed: true,
      defaultValue: _i5.EdgeInsets.zero,
    );
    mateUse(
      'sliver',
      sliver,
      isNamed: true,
    );
  }
}
