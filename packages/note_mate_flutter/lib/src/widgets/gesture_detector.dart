// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/gestures/recognizer.dart';
import 'package:flutter/src/widgets/gesture_detector.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/gestures/tap.dart';
import 'package:flutter/src/gestures/long_press.dart';
import 'package:flutter/src/gestures/drag_details.dart';
import 'package:flutter/src/gestures/monodrag.dart';
import 'package:flutter/src/gestures/force_press.dart';
import 'package:flutter/src/gestures/scale.dart';
import 'package:flutter/src/rendering/proxy_box.dart';
import 'dart:core';
import 'dart:ui';

/// class GestureRecognizerFactoryWithHandlers<T extends GestureRecognizer> extends GestureRecognizerFactory<T>
class GestureRecognizerFactoryWithHandlers$Mate<T extends GestureRecognizer>
    extends GestureRecognizerFactoryWithHandlers<T> with Mate<GestureRecognizerFactoryWithHandlers$Mate> {
  /// GestureRecognizerFactoryWithHandlers<T> GestureRecognizerFactoryWithHandlers(T Function() _constructor, void Function(T) _initializer)
  GestureRecognizerFactoryWithHandlers$Mate(
    /// requiredParameters: T Function() _constructor
    GestureRecognizerFactoryConstructor<T> _constructor,

    /// requiredParameters: void Function(T) _initializer
    GestureRecognizerFactoryInitializer<T> _initializer,
  ) : super(
          _constructor,
          _initializer,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => GestureRecognizerFactoryWithHandlers$Mate(
        p.get('_constructor').value,
        p.get('_initializer').value,
      ),
    );
    mateParams.put('_constructor', _constructor);
    mateParams.put('_initializer', _initializer);
  }
}

/// class GestureDetector extends StatelessWidget
class GestureDetector$Mate extends GestureDetector with Mate<GestureDetector$Mate> {
  /// GestureDetector GestureDetector({Key? key, Widget? child, void Function(TapDownDetails)? onTapDown, void Function(TapUpDetails)? onTapUp, void Function()? onTap, void Function()? onTapCancel, void Function()? onSecondaryTap, void Function(TapDownDetails)? onSecondaryTapDown, void Function(TapUpDetails)? onSecondaryTapUp, void Function()? onSecondaryTapCancel, void Function(TapDownDetails)? onTertiaryTapDown, void Function(TapUpDetails)? onTertiaryTapUp, void Function()? onTertiaryTapCancel, void Function(TapDownDetails)? onDoubleTapDown, void Function()? onDoubleTap, void Function()? onDoubleTapCancel, void Function(LongPressDownDetails)? onLongPressDown, void Function()? onLongPressCancel, void Function()? onLongPress, void Function(LongPressStartDetails)? onLongPressStart, void Function(LongPressMoveUpdateDetails)? onLongPressMoveUpdate, void Function()? onLongPressUp, void Function(LongPressEndDetails)? onLongPressEnd, void Function(LongPressDownDetails)? onSecondaryLongPressDown, void Function()? onSecondaryLongPressCancel, void Function()? onSecondaryLongPress, void Function(LongPressStartDetails)? onSecondaryLongPressStart, void Function(LongPressMoveUpdateDetails)? onSecondaryLongPressMoveUpdate, void Function()? onSecondaryLongPressUp, void Function(LongPressEndDetails)? onSecondaryLongPressEnd, void Function(LongPressDownDetails)? onTertiaryLongPressDown, void Function()? onTertiaryLongPressCancel, void Function()? onTertiaryLongPress, void Function(LongPressStartDetails)? onTertiaryLongPressStart, void Function(LongPressMoveUpdateDetails)? onTertiaryLongPressMoveUpdate, void Function()? onTertiaryLongPressUp, void Function(LongPressEndDetails)? onTertiaryLongPressEnd, void Function(DragDownDetails)? onVerticalDragDown, void Function(DragStartDetails)? onVerticalDragStart, void Function(DragUpdateDetails)? onVerticalDragUpdate, void Function(DragEndDetails)? onVerticalDragEnd, void Function()? onVerticalDragCancel, void Function(DragDownDetails)? onHorizontalDragDown, void Function(DragStartDetails)? onHorizontalDragStart, void Function(DragUpdateDetails)? onHorizontalDragUpdate, void Function(DragEndDetails)? onHorizontalDragEnd, void Function()? onHorizontalDragCancel, void Function(ForcePressDetails)? onForcePressStart, void Function(ForcePressDetails)? onForcePressPeak, void Function(ForcePressDetails)? onForcePressUpdate, void Function(ForcePressDetails)? onForcePressEnd, void Function(DragDownDetails)? onPanDown, void Function(DragStartDetails)? onPanStart, void Function(DragUpdateDetails)? onPanUpdate, void Function(DragEndDetails)? onPanEnd, void Function()? onPanCancel, void Function(ScaleStartDetails)? onScaleStart, void Function(ScaleUpdateDetails)? onScaleUpdate, void Function(ScaleEndDetails)? onScaleEnd, HitTestBehavior? behavior, bool excludeFromSemantics = false, DragStartBehavior dragStartBehavior = DragStartBehavior.start, bool trackpadScrollCausesScale = false, Offset trackpadScrollToScaleFactor = kDefaultTrackpadScrollToScaleFactor, Set<PointerDeviceKind>? supportedDevices})
  GestureDetector$Mate({
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {Widget? child} , hasDefaultValue:false, defaultValueCode:null
    Widget? child,

    /// optionalParameters: {void Function(TapDownDetails)? onTapDown} , hasDefaultValue:false, defaultValueCode:null
    GestureTapDownCallback? onTapDown,

    /// optionalParameters: {void Function(TapUpDetails)? onTapUp} , hasDefaultValue:false, defaultValueCode:null
    GestureTapUpCallback? onTapUp,

    /// optionalParameters: {void Function()? onTap} , hasDefaultValue:false, defaultValueCode:null
    GestureTapCallback? onTap,

    /// optionalParameters: {void Function()? onTapCancel} , hasDefaultValue:false, defaultValueCode:null
    GestureTapCancelCallback? onTapCancel,

    /// optionalParameters: {void Function()? onSecondaryTap} , hasDefaultValue:false, defaultValueCode:null
    GestureTapCallback? onSecondaryTap,

    /// optionalParameters: {void Function(TapDownDetails)? onSecondaryTapDown} , hasDefaultValue:false, defaultValueCode:null
    GestureTapDownCallback? onSecondaryTapDown,

    /// optionalParameters: {void Function(TapUpDetails)? onSecondaryTapUp} , hasDefaultValue:false, defaultValueCode:null
    GestureTapUpCallback? onSecondaryTapUp,

    /// optionalParameters: {void Function()? onSecondaryTapCancel} , hasDefaultValue:false, defaultValueCode:null
    GestureTapCancelCallback? onSecondaryTapCancel,

    /// optionalParameters: {void Function(TapDownDetails)? onTertiaryTapDown} , hasDefaultValue:false, defaultValueCode:null
    GestureTapDownCallback? onTertiaryTapDown,

    /// optionalParameters: {void Function(TapUpDetails)? onTertiaryTapUp} , hasDefaultValue:false, defaultValueCode:null
    GestureTapUpCallback? onTertiaryTapUp,

    /// optionalParameters: {void Function()? onTertiaryTapCancel} , hasDefaultValue:false, defaultValueCode:null
    GestureTapCancelCallback? onTertiaryTapCancel,

    /// optionalParameters: {void Function(TapDownDetails)? onDoubleTapDown} , hasDefaultValue:false, defaultValueCode:null
    GestureTapDownCallback? onDoubleTapDown,

    /// optionalParameters: {void Function()? onDoubleTap} , hasDefaultValue:false, defaultValueCode:null
    GestureTapCallback? onDoubleTap,

    /// optionalParameters: {void Function()? onDoubleTapCancel} , hasDefaultValue:false, defaultValueCode:null
    GestureTapCancelCallback? onDoubleTapCancel,

    /// optionalParameters: {void Function(LongPressDownDetails)? onLongPressDown} , hasDefaultValue:false, defaultValueCode:null
    GestureLongPressDownCallback? onLongPressDown,

    /// optionalParameters: {void Function()? onLongPressCancel} , hasDefaultValue:false, defaultValueCode:null
    GestureLongPressCancelCallback? onLongPressCancel,

    /// optionalParameters: {void Function()? onLongPress} , hasDefaultValue:false, defaultValueCode:null
    GestureLongPressCallback? onLongPress,

    /// optionalParameters: {void Function(LongPressStartDetails)? onLongPressStart} , hasDefaultValue:false, defaultValueCode:null
    GestureLongPressStartCallback? onLongPressStart,

    /// optionalParameters: {void Function(LongPressMoveUpdateDetails)? onLongPressMoveUpdate} , hasDefaultValue:false, defaultValueCode:null
    GestureLongPressMoveUpdateCallback? onLongPressMoveUpdate,

    /// optionalParameters: {void Function()? onLongPressUp} , hasDefaultValue:false, defaultValueCode:null
    GestureLongPressUpCallback? onLongPressUp,

    /// optionalParameters: {void Function(LongPressEndDetails)? onLongPressEnd} , hasDefaultValue:false, defaultValueCode:null
    GestureLongPressEndCallback? onLongPressEnd,

    /// optionalParameters: {void Function(LongPressDownDetails)? onSecondaryLongPressDown} , hasDefaultValue:false, defaultValueCode:null
    GestureLongPressDownCallback? onSecondaryLongPressDown,

    /// optionalParameters: {void Function()? onSecondaryLongPressCancel} , hasDefaultValue:false, defaultValueCode:null
    GestureLongPressCancelCallback? onSecondaryLongPressCancel,

    /// optionalParameters: {void Function()? onSecondaryLongPress} , hasDefaultValue:false, defaultValueCode:null
    GestureLongPressCallback? onSecondaryLongPress,

    /// optionalParameters: {void Function(LongPressStartDetails)? onSecondaryLongPressStart} , hasDefaultValue:false, defaultValueCode:null
    GestureLongPressStartCallback? onSecondaryLongPressStart,

    /// optionalParameters: {void Function(LongPressMoveUpdateDetails)? onSecondaryLongPressMoveUpdate} , hasDefaultValue:false, defaultValueCode:null
    GestureLongPressMoveUpdateCallback? onSecondaryLongPressMoveUpdate,

    /// optionalParameters: {void Function()? onSecondaryLongPressUp} , hasDefaultValue:false, defaultValueCode:null
    GestureLongPressUpCallback? onSecondaryLongPressUp,

    /// optionalParameters: {void Function(LongPressEndDetails)? onSecondaryLongPressEnd} , hasDefaultValue:false, defaultValueCode:null
    GestureLongPressEndCallback? onSecondaryLongPressEnd,

    /// optionalParameters: {void Function(LongPressDownDetails)? onTertiaryLongPressDown} , hasDefaultValue:false, defaultValueCode:null
    GestureLongPressDownCallback? onTertiaryLongPressDown,

    /// optionalParameters: {void Function()? onTertiaryLongPressCancel} , hasDefaultValue:false, defaultValueCode:null
    GestureLongPressCancelCallback? onTertiaryLongPressCancel,

    /// optionalParameters: {void Function()? onTertiaryLongPress} , hasDefaultValue:false, defaultValueCode:null
    GestureLongPressCallback? onTertiaryLongPress,

    /// optionalParameters: {void Function(LongPressStartDetails)? onTertiaryLongPressStart} , hasDefaultValue:false, defaultValueCode:null
    GestureLongPressStartCallback? onTertiaryLongPressStart,

    /// optionalParameters: {void Function(LongPressMoveUpdateDetails)? onTertiaryLongPressMoveUpdate} , hasDefaultValue:false, defaultValueCode:null
    GestureLongPressMoveUpdateCallback? onTertiaryLongPressMoveUpdate,

    /// optionalParameters: {void Function()? onTertiaryLongPressUp} , hasDefaultValue:false, defaultValueCode:null
    GestureLongPressUpCallback? onTertiaryLongPressUp,

    /// optionalParameters: {void Function(LongPressEndDetails)? onTertiaryLongPressEnd} , hasDefaultValue:false, defaultValueCode:null
    GestureLongPressEndCallback? onTertiaryLongPressEnd,

    /// optionalParameters: {void Function(DragDownDetails)? onVerticalDragDown} , hasDefaultValue:false, defaultValueCode:null
    GestureDragDownCallback? onVerticalDragDown,

    /// optionalParameters: {void Function(DragStartDetails)? onVerticalDragStart} , hasDefaultValue:false, defaultValueCode:null
    GestureDragStartCallback? onVerticalDragStart,

    /// optionalParameters: {void Function(DragUpdateDetails)? onVerticalDragUpdate} , hasDefaultValue:false, defaultValueCode:null
    GestureDragUpdateCallback? onVerticalDragUpdate,

    /// optionalParameters: {void Function(DragEndDetails)? onVerticalDragEnd} , hasDefaultValue:false, defaultValueCode:null
    GestureDragEndCallback? onVerticalDragEnd,

    /// optionalParameters: {void Function()? onVerticalDragCancel} , hasDefaultValue:false, defaultValueCode:null
    GestureDragCancelCallback? onVerticalDragCancel,

    /// optionalParameters: {void Function(DragDownDetails)? onHorizontalDragDown} , hasDefaultValue:false, defaultValueCode:null
    GestureDragDownCallback? onHorizontalDragDown,

    /// optionalParameters: {void Function(DragStartDetails)? onHorizontalDragStart} , hasDefaultValue:false, defaultValueCode:null
    GestureDragStartCallback? onHorizontalDragStart,

    /// optionalParameters: {void Function(DragUpdateDetails)? onHorizontalDragUpdate} , hasDefaultValue:false, defaultValueCode:null
    GestureDragUpdateCallback? onHorizontalDragUpdate,

    /// optionalParameters: {void Function(DragEndDetails)? onHorizontalDragEnd} , hasDefaultValue:false, defaultValueCode:null
    GestureDragEndCallback? onHorizontalDragEnd,

    /// optionalParameters: {void Function()? onHorizontalDragCancel} , hasDefaultValue:false, defaultValueCode:null
    GestureDragCancelCallback? onHorizontalDragCancel,

    /// optionalParameters: {void Function(ForcePressDetails)? onForcePressStart} , hasDefaultValue:false, defaultValueCode:null
    GestureForcePressStartCallback? onForcePressStart,

    /// optionalParameters: {void Function(ForcePressDetails)? onForcePressPeak} , hasDefaultValue:false, defaultValueCode:null
    GestureForcePressPeakCallback? onForcePressPeak,

    /// optionalParameters: {void Function(ForcePressDetails)? onForcePressUpdate} , hasDefaultValue:false, defaultValueCode:null
    GestureForcePressUpdateCallback? onForcePressUpdate,

    /// optionalParameters: {void Function(ForcePressDetails)? onForcePressEnd} , hasDefaultValue:false, defaultValueCode:null
    GestureForcePressEndCallback? onForcePressEnd,

    /// optionalParameters: {void Function(DragDownDetails)? onPanDown} , hasDefaultValue:false, defaultValueCode:null
    GestureDragDownCallback? onPanDown,

    /// optionalParameters: {void Function(DragStartDetails)? onPanStart} , hasDefaultValue:false, defaultValueCode:null
    GestureDragStartCallback? onPanStart,

    /// optionalParameters: {void Function(DragUpdateDetails)? onPanUpdate} , hasDefaultValue:false, defaultValueCode:null
    GestureDragUpdateCallback? onPanUpdate,

    /// optionalParameters: {void Function(DragEndDetails)? onPanEnd} , hasDefaultValue:false, defaultValueCode:null
    GestureDragEndCallback? onPanEnd,

    /// optionalParameters: {void Function()? onPanCancel} , hasDefaultValue:false, defaultValueCode:null
    GestureDragCancelCallback? onPanCancel,

    /// optionalParameters: {void Function(ScaleStartDetails)? onScaleStart} , hasDefaultValue:false, defaultValueCode:null
    GestureScaleStartCallback? onScaleStart,

    /// optionalParameters: {void Function(ScaleUpdateDetails)? onScaleUpdate} , hasDefaultValue:false, defaultValueCode:null
    GestureScaleUpdateCallback? onScaleUpdate,

    /// optionalParameters: {void Function(ScaleEndDetails)? onScaleEnd} , hasDefaultValue:false, defaultValueCode:null
    GestureScaleEndCallback? onScaleEnd,

    /// optionalParameters: {HitTestBehavior? behavior} , hasDefaultValue:false, defaultValueCode:null
    HitTestBehavior? behavior,

    /// optionalParameters: {bool excludeFromSemantics = false} , hasDefaultValue:true, defaultValueCode:false
    required bool excludeFromSemantics,

    /// optionalParameters: {DragStartBehavior dragStartBehavior = DragStartBehavior.start} , hasDefaultValue:true, defaultValueCode:DragStartBehavior.start
    required DragStartBehavior dragStartBehavior,

    /// optionalParameters: {bool trackpadScrollCausesScale = false} , hasDefaultValue:true, defaultValueCode:false
    required bool trackpadScrollCausesScale,

    /// optionalParameters: {Offset trackpadScrollToScaleFactor = kDefaultTrackpadScrollToScaleFactor} , hasDefaultValue:true, defaultValueCode:kDefaultTrackpadScrollToScaleFactor
    required Offset trackpadScrollToScaleFactor,

    /// optionalParameters: {Set<PointerDeviceKind>? supportedDevices} , hasDefaultValue:false, defaultValueCode:null
    Set<PointerDeviceKind>? supportedDevices,
  }) : super(
          key: key,
          child: child,
          onTapDown: onTapDown,
          onTapUp: onTapUp,
          onTap: onTap,
          onTapCancel: onTapCancel,
          onSecondaryTap: onSecondaryTap,
          onSecondaryTapDown: onSecondaryTapDown,
          onSecondaryTapUp: onSecondaryTapUp,
          onSecondaryTapCancel: onSecondaryTapCancel,
          onTertiaryTapDown: onTertiaryTapDown,
          onTertiaryTapUp: onTertiaryTapUp,
          onTertiaryTapCancel: onTertiaryTapCancel,
          onDoubleTapDown: onDoubleTapDown,
          onDoubleTap: onDoubleTap,
          onDoubleTapCancel: onDoubleTapCancel,
          onLongPressDown: onLongPressDown,
          onLongPressCancel: onLongPressCancel,
          onLongPress: onLongPress,
          onLongPressStart: onLongPressStart,
          onLongPressMoveUpdate: onLongPressMoveUpdate,
          onLongPressUp: onLongPressUp,
          onLongPressEnd: onLongPressEnd,
          onSecondaryLongPressDown: onSecondaryLongPressDown,
          onSecondaryLongPressCancel: onSecondaryLongPressCancel,
          onSecondaryLongPress: onSecondaryLongPress,
          onSecondaryLongPressStart: onSecondaryLongPressStart,
          onSecondaryLongPressMoveUpdate: onSecondaryLongPressMoveUpdate,
          onSecondaryLongPressUp: onSecondaryLongPressUp,
          onSecondaryLongPressEnd: onSecondaryLongPressEnd,
          onTertiaryLongPressDown: onTertiaryLongPressDown,
          onTertiaryLongPressCancel: onTertiaryLongPressCancel,
          onTertiaryLongPress: onTertiaryLongPress,
          onTertiaryLongPressStart: onTertiaryLongPressStart,
          onTertiaryLongPressMoveUpdate: onTertiaryLongPressMoveUpdate,
          onTertiaryLongPressUp: onTertiaryLongPressUp,
          onTertiaryLongPressEnd: onTertiaryLongPressEnd,
          onVerticalDragDown: onVerticalDragDown,
          onVerticalDragStart: onVerticalDragStart,
          onVerticalDragUpdate: onVerticalDragUpdate,
          onVerticalDragEnd: onVerticalDragEnd,
          onVerticalDragCancel: onVerticalDragCancel,
          onHorizontalDragDown: onHorizontalDragDown,
          onHorizontalDragStart: onHorizontalDragStart,
          onHorizontalDragUpdate: onHorizontalDragUpdate,
          onHorizontalDragEnd: onHorizontalDragEnd,
          onHorizontalDragCancel: onHorizontalDragCancel,
          onForcePressStart: onForcePressStart,
          onForcePressPeak: onForcePressPeak,
          onForcePressUpdate: onForcePressUpdate,
          onForcePressEnd: onForcePressEnd,
          onPanDown: onPanDown,
          onPanStart: onPanStart,
          onPanUpdate: onPanUpdate,
          onPanEnd: onPanEnd,
          onPanCancel: onPanCancel,
          onScaleStart: onScaleStart,
          onScaleUpdate: onScaleUpdate,
          onScaleEnd: onScaleEnd,
          behavior: behavior,
          excludeFromSemantics: excludeFromSemantics,
          dragStartBehavior: dragStartBehavior,
          trackpadScrollCausesScale: trackpadScrollCausesScale,
          trackpadScrollToScaleFactor: trackpadScrollToScaleFactor,
          supportedDevices: supportedDevices,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => GestureDetector$Mate(
        key: p.get('key').build(),
        child: p.get('child').build(),
        onTapDown: p.get('onTapDown').build(),
        onTapUp: p.get('onTapUp').build(),
        onTap: p.get('onTap').build(),
        onTapCancel: p.get('onTapCancel').build(),
        onSecondaryTap: p.get('onSecondaryTap').build(),
        onSecondaryTapDown: p.get('onSecondaryTapDown').build(),
        onSecondaryTapUp: p.get('onSecondaryTapUp').build(),
        onSecondaryTapCancel: p.get('onSecondaryTapCancel').build(),
        onTertiaryTapDown: p.get('onTertiaryTapDown').build(),
        onTertiaryTapUp: p.get('onTertiaryTapUp').build(),
        onTertiaryTapCancel: p.get('onTertiaryTapCancel').build(),
        onDoubleTapDown: p.get('onDoubleTapDown').build(),
        onDoubleTap: p.get('onDoubleTap').build(),
        onDoubleTapCancel: p.get('onDoubleTapCancel').build(),
        onLongPressDown: p.get('onLongPressDown').build(),
        onLongPressCancel: p.get('onLongPressCancel').build(),
        onLongPress: p.get('onLongPress').build(),
        onLongPressStart: p.get('onLongPressStart').build(),
        onLongPressMoveUpdate: p.get('onLongPressMoveUpdate').build(),
        onLongPressUp: p.get('onLongPressUp').build(),
        onLongPressEnd: p.get('onLongPressEnd').build(),
        onSecondaryLongPressDown: p.get('onSecondaryLongPressDown').build(),
        onSecondaryLongPressCancel: p.get('onSecondaryLongPressCancel').build(),
        onSecondaryLongPress: p.get('onSecondaryLongPress').build(),
        onSecondaryLongPressStart: p.get('onSecondaryLongPressStart').build(),
        onSecondaryLongPressMoveUpdate: p.get('onSecondaryLongPressMoveUpdate').build(),
        onSecondaryLongPressUp: p.get('onSecondaryLongPressUp').build(),
        onSecondaryLongPressEnd: p.get('onSecondaryLongPressEnd').build(),
        onTertiaryLongPressDown: p.get('onTertiaryLongPressDown').build(),
        onTertiaryLongPressCancel: p.get('onTertiaryLongPressCancel').build(),
        onTertiaryLongPress: p.get('onTertiaryLongPress').build(),
        onTertiaryLongPressStart: p.get('onTertiaryLongPressStart').build(),
        onTertiaryLongPressMoveUpdate: p.get('onTertiaryLongPressMoveUpdate').build(),
        onTertiaryLongPressUp: p.get('onTertiaryLongPressUp').build(),
        onTertiaryLongPressEnd: p.get('onTertiaryLongPressEnd').build(),
        onVerticalDragDown: p.get('onVerticalDragDown').build(),
        onVerticalDragStart: p.get('onVerticalDragStart').build(),
        onVerticalDragUpdate: p.get('onVerticalDragUpdate').build(),
        onVerticalDragEnd: p.get('onVerticalDragEnd').build(),
        onVerticalDragCancel: p.get('onVerticalDragCancel').build(),
        onHorizontalDragDown: p.get('onHorizontalDragDown').build(),
        onHorizontalDragStart: p.get('onHorizontalDragStart').build(),
        onHorizontalDragUpdate: p.get('onHorizontalDragUpdate').build(),
        onHorizontalDragEnd: p.get('onHorizontalDragEnd').build(),
        onHorizontalDragCancel: p.get('onHorizontalDragCancel').build(),
        onForcePressStart: p.get('onForcePressStart').build(),
        onForcePressPeak: p.get('onForcePressPeak').build(),
        onForcePressUpdate: p.get('onForcePressUpdate').build(),
        onForcePressEnd: p.get('onForcePressEnd').build(),
        onPanDown: p.get('onPanDown').build(),
        onPanStart: p.get('onPanStart').build(),
        onPanUpdate: p.get('onPanUpdate').build(),
        onPanEnd: p.get('onPanEnd').build(),
        onPanCancel: p.get('onPanCancel').build(),
        onScaleStart: p.get('onScaleStart').build(),
        onScaleUpdate: p.get('onScaleUpdate').build(),
        onScaleEnd: p.get('onScaleEnd').build(),
        behavior: p.get('behavior').build(),
        excludeFromSemantics: p.get('excludeFromSemantics').build(),
        dragStartBehavior: p.get('dragStartBehavior').build(),
        trackpadScrollCausesScale: p.get('trackpadScrollCausesScale').build(),
        trackpadScrollToScaleFactor: p.get('trackpadScrollToScaleFactor').build(),
        supportedDevices: p.get('supportedDevices').build(),
      ),
    );
    mateParams.put('key', key);
    mateParams.put('child', child);
    mateParams.put('onTapDown', onTapDown);
    mateParams.put('onTapUp', onTapUp);
    mateParams.put('onTap', onTap);
    mateParams.put('onTapCancel', onTapCancel);
    mateParams.put('onSecondaryTap', onSecondaryTap);
    mateParams.put('onSecondaryTapDown', onSecondaryTapDown);
    mateParams.put('onSecondaryTapUp', onSecondaryTapUp);
    mateParams.put('onSecondaryTapCancel', onSecondaryTapCancel);
    mateParams.put('onTertiaryTapDown', onTertiaryTapDown);
    mateParams.put('onTertiaryTapUp', onTertiaryTapUp);
    mateParams.put('onTertiaryTapCancel', onTertiaryTapCancel);
    mateParams.put('onDoubleTapDown', onDoubleTapDown);
    mateParams.put('onDoubleTap', onDoubleTap);
    mateParams.put('onDoubleTapCancel', onDoubleTapCancel);
    mateParams.put('onLongPressDown', onLongPressDown);
    mateParams.put('onLongPressCancel', onLongPressCancel);
    mateParams.put('onLongPress', onLongPress);
    mateParams.put('onLongPressStart', onLongPressStart);
    mateParams.put('onLongPressMoveUpdate', onLongPressMoveUpdate);
    mateParams.put('onLongPressUp', onLongPressUp);
    mateParams.put('onLongPressEnd', onLongPressEnd);
    mateParams.put('onSecondaryLongPressDown', onSecondaryLongPressDown);
    mateParams.put('onSecondaryLongPressCancel', onSecondaryLongPressCancel);
    mateParams.put('onSecondaryLongPress', onSecondaryLongPress);
    mateParams.put('onSecondaryLongPressStart', onSecondaryLongPressStart);
    mateParams.put('onSecondaryLongPressMoveUpdate', onSecondaryLongPressMoveUpdate);
    mateParams.put('onSecondaryLongPressUp', onSecondaryLongPressUp);
    mateParams.put('onSecondaryLongPressEnd', onSecondaryLongPressEnd);
    mateParams.put('onTertiaryLongPressDown', onTertiaryLongPressDown);
    mateParams.put('onTertiaryLongPressCancel', onTertiaryLongPressCancel);
    mateParams.put('onTertiaryLongPress', onTertiaryLongPress);
    mateParams.put('onTertiaryLongPressStart', onTertiaryLongPressStart);
    mateParams.put('onTertiaryLongPressMoveUpdate', onTertiaryLongPressMoveUpdate);
    mateParams.put('onTertiaryLongPressUp', onTertiaryLongPressUp);
    mateParams.put('onTertiaryLongPressEnd', onTertiaryLongPressEnd);
    mateParams.put('onVerticalDragDown', onVerticalDragDown);
    mateParams.put('onVerticalDragStart', onVerticalDragStart);
    mateParams.put('onVerticalDragUpdate', onVerticalDragUpdate);
    mateParams.put('onVerticalDragEnd', onVerticalDragEnd);
    mateParams.put('onVerticalDragCancel', onVerticalDragCancel);
    mateParams.put('onHorizontalDragDown', onHorizontalDragDown);
    mateParams.put('onHorizontalDragStart', onHorizontalDragStart);
    mateParams.put('onHorizontalDragUpdate', onHorizontalDragUpdate);
    mateParams.put('onHorizontalDragEnd', onHorizontalDragEnd);
    mateParams.put('onHorizontalDragCancel', onHorizontalDragCancel);
    mateParams.put('onForcePressStart', onForcePressStart);
    mateParams.put('onForcePressPeak', onForcePressPeak);
    mateParams.put('onForcePressUpdate', onForcePressUpdate);
    mateParams.put('onForcePressEnd', onForcePressEnd);
    mateParams.put('onPanDown', onPanDown);
    mateParams.put('onPanStart', onPanStart);
    mateParams.put('onPanUpdate', onPanUpdate);
    mateParams.put('onPanEnd', onPanEnd);
    mateParams.put('onPanCancel', onPanCancel);
    mateParams.put('onScaleStart', onScaleStart);
    mateParams.put('onScaleUpdate', onScaleUpdate);
    mateParams.put('onScaleEnd', onScaleEnd);
    mateParams.put('behavior', behavior);
    mateParams.put('excludeFromSemantics', excludeFromSemantics);
    mateParams.put('dragStartBehavior', dragStartBehavior);
    mateParams.put('trackpadScrollCausesScale', trackpadScrollCausesScale);
    mateParams.put('trackpadScrollToScaleFactor', trackpadScrollToScaleFactor);
    mateParams.put('supportedDevices', supportedDevices);
  }
}

/// class RawGestureDetector extends StatefulWidget
class RawGestureDetector$Mate extends RawGestureDetector with Mate<RawGestureDetector$Mate> {
  /// RawGestureDetector RawGestureDetector({Key? key, Widget? child, Map<Type, GestureRecognizerFactory<GestureRecognizer>> gestures = const <Type, GestureRecognizerFactory>{}, HitTestBehavior? behavior, bool excludeFromSemantics = false, SemanticsGestureDelegate? semantics})
  RawGestureDetector$Mate({
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {Widget? child} , hasDefaultValue:false, defaultValueCode:null
    Widget? child,

    /// optionalParameters: {Map<Type, GestureRecognizerFactory<GestureRecognizer>> gestures = const <Type, GestureRecognizerFactory>{}} , hasDefaultValue:true, defaultValueCode:const <Type, GestureRecognizerFactory>{}
    required Map<Type, GestureRecognizerFactory<GestureRecognizer>> gestures,

    /// optionalParameters: {HitTestBehavior? behavior} , hasDefaultValue:false, defaultValueCode:null
    HitTestBehavior? behavior,

    /// optionalParameters: {bool excludeFromSemantics = false} , hasDefaultValue:true, defaultValueCode:false
    required bool excludeFromSemantics,

    /// optionalParameters: {SemanticsGestureDelegate? semantics} , hasDefaultValue:false, defaultValueCode:null
    SemanticsGestureDelegate? semantics,
  }) : super(
          key: key,
          child: child,
          gestures: gestures,
          behavior: behavior,
          excludeFromSemantics: excludeFromSemantics,
          semantics: semantics,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => RawGestureDetector$Mate(
        key: p.get('key').build(),
        child: p.get('child').build(),
        gestures: p.get('gestures').build(),
        behavior: p.get('behavior').build(),
        excludeFromSemantics: p.get('excludeFromSemantics').build(),
        semantics: p.get('semantics').build(),
      ),
    );
    mateParams.put('key', key);
    mateParams.put('child', child);
    mateParams.put('gestures', gestures);
    mateParams.put('behavior', behavior);
    mateParams.put('excludeFromSemantics', excludeFromSemantics);
    mateParams.put('semantics', semantics);
  }
}
