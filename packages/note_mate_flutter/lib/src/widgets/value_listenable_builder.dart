// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/value_listenable_builder.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/foundation/change_notifier.dart' as _i4;
import 'package:flutter/src/widgets/framework.dart' as _i5;

/// class ValueListenableBuilder<T> extends StatefulWidget
class ValueListenableBuilder$Mate<T> extends _i1.ValueListenableBuilder<T> with _i2.Mate {
  /// ValueListenableBuilder<T> ValueListenableBuilder({Key? key, required ValueListenable<T> valueListenable, required Widget Function(BuildContext, T, Widget?) builder, Widget? child})
  ValueListenableBuilder$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required ValueListenable<T> valueListenable} , default:none
    required super.valueListenable,

    /// optionalParameters: {required Widget Function(BuildContext, T, Widget?) builder} , default:none
    required super.builder,

    /// optionalParameters: {Widget? child} , default:none
    super.child,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'valueListenable': _i2.BuilderArg<_i4.ValueListenable<T>>(
            name: 'valueListenable',
            init: valueListenable,
            isNamed: true,
          ),
          'builder': _i2.BuilderArg<_i1.ValueWidgetBuilder<T>>(
            name: 'builder',
            init: builder,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i5.Widget?>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'ValueListenableBuilder';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ValueListenableBuilder$Mate<T>(
          key: p.get('key').build(),
          valueListenable: p.get('valueListenable').build(),
          builder: p.get('builder').build(),
          child: p.get('child').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
