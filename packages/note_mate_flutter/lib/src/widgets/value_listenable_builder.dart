// /// Generated by gen_maters.dart, please don't edit! 

import 'package:flutter/src/widgets/value_listenable_builder.dart';import 'package:flutter/src/foundation/key.dart';import 'package:flutter/src/foundation/change_notifier.dart';import 'package:flutter/src/widgets/framework.dart';import 'package:note/mate.dart' show Mate;/// class ValueListenableBuilder<T> extends StatefulWidget
class ValueListenableBuilder$Mate<T> extends ValueListenableBuilder<T> with Mate {/// ValueListenableBuilder<T> ValueListenableBuilder({Key? key, required ValueListenable<T> valueListenable, required Widget Function(BuildContext, T, Widget?) builder, Widget? child})
ValueListenableBuilder$Mate({/// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
Key? key, /// optionalParameters: {required ValueListenable<T> valueListenable} , hasDefaultValue:false, defaultValueCode:null
required ValueListenable<T> valueListenable, /// optionalParameters: {required Widget Function(BuildContext, T, Widget?) builder} , hasDefaultValue:false, defaultValueCode:null
required ValueWidgetBuilder<T> builder, /// optionalParameters: {Widget? child} , hasDefaultValue:false, defaultValueCode:null
Widget? child, }) : super(key: key, valueListenable: valueListenable, builder: builder, child: child, ) { mateBuilder = (p) => ValueListenableBuilder$Mate<T>(key: p.get('key').build(), valueListenable: p.get('valueListenable').build(), builder: p.get('builder').build(), child: p.get('child').build(), );
matePut('key', key);
matePut('valueListenable', valueListenable);
matePut('builder', builder);
matePut('child', child); }

 }
