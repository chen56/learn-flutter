// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/widgets/value_listenable_builder.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/foundation/change_notifier.dart';
import 'package:flutter/src/widgets/framework.dart';

/// class ValueListenableBuilder<T> extends StatefulWidget
class ValueListenableBuilder$Mate<T> extends ValueListenableBuilder<T>
    with Mate {
  /// ValueListenableBuilder<T> ValueListenableBuilder({Key? key, required ValueListenable<T> valueListenable, required Widget Function(BuildContext, T, Widget?) builder, Widget? child})
  ValueListenableBuilder$Mate({
    /// optionalParameters: {Key? key} , default:none
    Key? key,

    /// optionalParameters: {required ValueListenable<T> valueListenable} , default:none
    required ValueListenable<T> valueListenable,

    /// optionalParameters: {required Widget Function(BuildContext, T, Widget?) builder} , default:none
    required ValueWidgetBuilder<T> builder,

    /// optionalParameters: {Widget? child} , default:none
    Widget? child,
  }) : super(
          key: key,
          valueListenable: valueListenable,
          builder: builder,
          child: child,
        ) {
    mateBuilderName = 'ValueListenableBuilder';
    matePackageUrl = 'package:flutter/widgets.dart';
    mateBuilder = (p) => ValueListenableBuilder$Mate<T>(
          key: p.get('key').build(),
          valueListenable: p.get('valueListenable').build(),
          builder: p.get('builder').build(),
          child: p.get('child').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'valueListenable',
      valueListenable,
      isNamed: true,
    );
    mateUse(
      'builder',
      builder,
      isNamed: true,
    );
    mateUse(
      'child',
      child,
      isNamed: true,
    );
  }
}
