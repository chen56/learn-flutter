// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/container.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/painting/decoration.dart' as _i4;
import 'package:flutter/src/rendering/proxy_box.dart' as _i5;
import 'package:flutter/cupertino.dart' as _i6;
import 'package:flutter/src/widgets/framework.dart' as _i7;
import 'package:flutter/src/painting/alignment.dart' as _i8;
import 'package:flutter/src/painting/edge_insets.dart' as _i9;
import 'dart:ui' as _i10;
import 'package:flutter/src/rendering/box.dart' as _i11;
import 'package:vector_math/vector_math_64.dart' as _i12;

/// class DecoratedBox extends SingleChildRenderObjectWidget
class DecoratedBox$Mate extends _i1.DecoratedBox with _i2.Mate {
  /// DecoratedBox DecoratedBox({Key? key, required Decoration decoration, DecorationPosition position = DecorationPosition.background, Widget? child})
  DecoratedBox$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {required Decoration decoration} , default:none
    required _i4.Decoration decoration,

    /// optionalParameters: {DecorationPosition position = DecorationPosition.background} , default:processed=PrefixedIdentifierImpl
    _i5.DecorationPosition position = _i6.DecorationPosition.background,

    /// optionalParameters: {Widget? child} , default:none
    _i7.Widget? child,
  }) : super(
          key: key,
          decoration: decoration,
          position: position,
          child: child,
        ) {
    mateBuilderName = 'DecoratedBox';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => DecoratedBox$Mate(
          key: p.get('key').build(),
          decoration: p.get('decoration').build(),
          position: p.get('position').build(),
          child: p.get('child').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'decoration',
      decoration,
      isNamed: true,
    );
    mateUse(
      'position',
      position,
      isNamed: true,
      defaultValue: _i6.DecorationPosition.background,
    );
    mateUse(
      'child',
      child,
      isNamed: true,
    );
  }
}

/// class Container extends StatelessWidget
class Container$Mate extends _i1.Container with _i2.Mate {
  /// Container Container({Key? key, AlignmentGeometry? alignment, EdgeInsetsGeometry? padding, Color? color, Decoration? decoration, Decoration? foregroundDecoration, double? width, double? height, BoxConstraints? constraints, EdgeInsetsGeometry? margin, Matrix4? transform, AlignmentGeometry? transformAlignment, Widget? child, Clip clipBehavior = Clip.none})
  Container$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {AlignmentGeometry? alignment} , default:none
    _i8.AlignmentGeometry? alignment,

    /// optionalParameters: {EdgeInsetsGeometry? padding} , default:none
    _i9.EdgeInsetsGeometry? padding,

    /// optionalParameters: {Color? color} , default:none
    _i10.Color? color,

    /// optionalParameters: {Decoration? decoration} , default:none
    _i4.Decoration? decoration,

    /// optionalParameters: {Decoration? foregroundDecoration} , default:none
    _i4.Decoration? foregroundDecoration,

    /// optionalParameters: {double? width} , default:none
    double? width,

    /// optionalParameters: {double? height} , default:none
    double? height,

    /// optionalParameters: {BoxConstraints? constraints} , default:none
    _i11.BoxConstraints? constraints,

    /// optionalParameters: {EdgeInsetsGeometry? margin} , default:none
    _i9.EdgeInsetsGeometry? margin,

    /// optionalParameters: {Matrix4? transform} , default:none
    _i12.Matrix4? transform,

    /// optionalParameters: {AlignmentGeometry? transformAlignment} , default:none
    _i8.AlignmentGeometry? transformAlignment,

    /// optionalParameters: {Widget? child} , default:none
    _i7.Widget? child,

    /// optionalParameters: {Clip clipBehavior = Clip.none} , default:processed=PrefixedIdentifierImpl
    _i10.Clip clipBehavior = _i10.Clip.none,
  }) : super(
          key: key,
          alignment: alignment,
          padding: padding,
          color: color,
          decoration: decoration,
          foregroundDecoration: foregroundDecoration,
          width: width,
          height: height,
          constraints: constraints,
          margin: margin,
          transform: transform,
          transformAlignment: transformAlignment,
          child: child,
          clipBehavior: clipBehavior,
        ) {
    mateBuilderName = 'Container';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => Container$Mate(
          key: p.get('key').build(),
          alignment: p.get('alignment').build(),
          padding: p.get('padding').build(),
          color: p.get('color').build(),
          decoration: p.get('decoration').build(),
          foregroundDecoration: p.get('foregroundDecoration').build(),
          width: p.get('width').build(),
          height: p.get('height').build(),
          constraints: p.get('constraints').build(),
          margin: p.get('margin').build(),
          transform: p.get('transform').build(),
          transformAlignment: p.get('transformAlignment').build(),
          child: p.get('child').build(),
          clipBehavior: p.get('clipBehavior').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'alignment',
      alignment,
      isNamed: true,
    );
    mateUse(
      'padding',
      padding,
      isNamed: true,
    );
    mateUse(
      'color',
      color,
      isNamed: true,
    );
    mateUse(
      'decoration',
      decoration,
      isNamed: true,
    );
    mateUse(
      'foregroundDecoration',
      foregroundDecoration,
      isNamed: true,
    );
    mateUse(
      'width',
      width,
      isNamed: true,
    );
    mateUse(
      'height',
      height,
      isNamed: true,
    );
    mateUse(
      'constraints',
      constraints,
      isNamed: true,
    );
    mateUse(
      'margin',
      margin,
      isNamed: true,
    );
    mateUse(
      'transform',
      transform,
      isNamed: true,
    );
    mateUse(
      'transformAlignment',
      transformAlignment,
      isNamed: true,
    );
    mateUse(
      'child',
      child,
      isNamed: true,
    );
    mateUse(
      'clipBehavior',
      clipBehavior,
      isNamed: true,
      defaultValue: _i10.Clip.none,
    );
  }
}
