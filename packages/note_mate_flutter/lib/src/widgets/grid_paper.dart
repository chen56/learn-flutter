// /// Generated by gen_maters.dart, please don't edit! 

import 'package:flutter/src/widgets/grid_paper.dart';import 'package:flutter/src/foundation/key.dart';import 'dart:ui';import 'dart:core';import 'package:flutter/src/widgets/framework.dart';import 'package:note/mate.dart' show Mate;/// class GridPaper extends StatelessWidget
class GridPaper$Mate extends GridPaper with Mate {/// GridPaper GridPaper({Key? key, Color color = const Color(0x7FC3E8F3), double interval = 100.0, int divisions = 2, int subdivisions = 5, Widget? child})
GridPaper$Mate({/// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
Key? key, /// optionalParameters: {Color color = const Color(0x7FC3E8F3)} , hasDefaultValue:true, defaultValueCode:const Color(0x7FC3E8F3)
required Color color, /// optionalParameters: {double interval = 100.0} , hasDefaultValue:true, defaultValueCode:100.0
required double interval, /// optionalParameters: {int divisions = 2} , hasDefaultValue:true, defaultValueCode:2
required int divisions, /// optionalParameters: {int subdivisions = 5} , hasDefaultValue:true, defaultValueCode:5
required int subdivisions, /// optionalParameters: {Widget? child} , hasDefaultValue:false, defaultValueCode:null
Widget? child, }) : super(key: key, color: color, interval: interval, divisions: divisions, subdivisions: subdivisions, child: child, ) { mateBuilder = (p) => GridPaper$Mate(key: p.get('key').build(), color: p.get('color').build(), interval: p.get('interval').build(), divisions: p.get('divisions').build(), subdivisions: p.get('subdivisions').build(), child: p.get('child').build(), );
matePut('key', key);
matePut('color', color);
matePut('interval', interval);
matePut('divisions', divisions);
matePut('subdivisions', subdivisions);
matePut('child', child); }

 }
