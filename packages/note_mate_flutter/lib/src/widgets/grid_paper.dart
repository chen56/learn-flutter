// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/widgets/grid_paper.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'dart:ui';
import 'dart:core';
import 'package:flutter/src/widgets/framework.dart';

/// class GridPaper extends StatelessWidget
class GridPaper$Mate extends GridPaper with Mate {
  /// GridPaper GridPaper({Key? key, Color color = const Color(0x7FC3E8F3), double interval = 100.0, int divisions = 2, int subdivisions = 5, Widget? child})
  GridPaper$Mate({
    /// optionalParameters: {Key? key} , default:none
    Key? key,

    /// optionalParameters: {Color color = const Color(0x7FC3E8F3)} , default:unprocessed=InstanceCreationExpressionImpl
    required Color color,

    /// optionalParameters: {double interval = 100.0} , default:processed=DoubleLiteralImpl
    double interval = 100.0,

    /// optionalParameters: {int divisions = 2} , default:processed=IntegerLiteralImpl
    int divisions = 2,

    /// optionalParameters: {int subdivisions = 5} , default:processed=IntegerLiteralImpl
    int subdivisions = 5,

    /// optionalParameters: {Widget? child} , default:none
    Widget? child,
  }) : super(
          key: key,
          color: color,
          interval: interval,
          divisions: divisions,
          subdivisions: subdivisions,
          child: child,
        ) {
    mateBuilderName = 'GridPaper';
    matePackageUrl = 'package:flutter/widgets.dart';
    mateBuilder = (p) => GridPaper$Mate(
          key: p.get('key').build(),
          color: p.get('color').build(),
          interval: p.get('interval').build(),
          divisions: p.get('divisions').build(),
          subdivisions: p.get('subdivisions').build(),
          child: p.get('child').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'color',
      color,
      isNamed: true,
    );
    mateUse(
      'interval',
      interval,
      isNamed: true,
      defaultValue: 100.0,
    );
    mateUse(
      'divisions',
      divisions,
      isNamed: true,
      defaultValue: 2,
    );
    mateUse(
      'subdivisions',
      subdivisions,
      isNamed: true,
      defaultValue: 5,
    );
    mateUse(
      'child',
      child,
      isNamed: true,
    );
  }
}
