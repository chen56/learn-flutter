// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/undo_history.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/foundation/change_notifier.dart' as _i4;
import 'package:flutter/src/widgets/focus_manager.dart' as _i5;
import 'package:flutter/src/widgets/framework.dart' as _i6;

/// class UndoHistory<T> extends StatefulWidget
class UndoHistory$Mate<T> extends _i1.UndoHistory<T> with _i2.Mate {
  /// UndoHistory<T> UndoHistory({Key? key, bool Function(T?, T)? shouldChangeUndoStack, required ValueNotifier<T> value, required void Function(T) onTriggered, required FocusNode focusNode, UndoHistoryController? controller, required Widget child})
  UndoHistory$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {bool Function(T?, T)? shouldChangeUndoStack} , default:none
    bool Function(
      T?,
      T,
    )? shouldChangeUndoStack,

    /// optionalParameters: {required ValueNotifier<T> value} , default:none
    required _i4.ValueNotifier<T> value,

    /// optionalParameters: {required void Function(T) onTriggered} , default:none
    required void Function(T) onTriggered,

    /// optionalParameters: {required FocusNode focusNode} , default:none
    required _i5.FocusNode focusNode,

    /// optionalParameters: {UndoHistoryController? controller} , default:none
    _i1.UndoHistoryController? controller,

    /// optionalParameters: {required Widget child} , default:none
    required _i6.Widget child,
  }) : super(
          key: key,
          shouldChangeUndoStack: shouldChangeUndoStack,
          value: value,
          onTriggered: onTriggered,
          focusNode: focusNode,
          controller: controller,
          child: child,
        ) {
    mateBuilderName = 'UndoHistory';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => UndoHistory$Mate<T>(
          key: p.get('key').build(),
          shouldChangeUndoStack: p.get('shouldChangeUndoStack').build(),
          value: p.get('value').build(),
          onTriggered: p.get('onTriggered').build(),
          focusNode: p.get('focusNode').build(),
          controller: p.get('controller').build(),
          child: p.get('child').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'shouldChangeUndoStack',
      shouldChangeUndoStack,
      isNamed: true,
    );
    mateUse(
      'value',
      value,
      isNamed: true,
    );
    mateUse(
      'onTriggered',
      onTriggered,
      isNamed: true,
    );
    mateUse(
      'focusNode',
      focusNode,
      isNamed: true,
    );
    mateUse(
      'controller',
      controller,
      isNamed: true,
    );
    mateUse(
      'child',
      child,
      isNamed: true,
    );
  }
}

/// class UndoHistoryValue
class UndoHistoryValue$Mate extends _i1.UndoHistoryValue with _i2.Mate {
  /// UndoHistoryValue UndoHistoryValue({bool canUndo = false, bool canRedo = false})
  UndoHistoryValue$Mate({
    /// optionalParameters: {bool canUndo = false} , default:processed=BooleanLiteralImpl
    bool canUndo = false,

    /// optionalParameters: {bool canRedo = false} , default:processed=BooleanLiteralImpl
    bool canRedo = false,
  }) : super(
          canUndo: canUndo,
          canRedo: canRedo,
        ) {
    mateBuilderName = 'UndoHistoryValue';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => UndoHistoryValue$Mate(
          canUndo: p.get('canUndo').build(),
          canRedo: p.get('canRedo').build(),
        );
    mateUse(
      'canUndo',
      canUndo,
      isNamed: true,
      defaultValue: false,
    );
    mateUse(
      'canRedo',
      canRedo,
      isNamed: true,
      defaultValue: false,
    );
  }
}

/// class UndoHistoryController extends ValueNotifier<UndoHistoryValue>
class UndoHistoryController$Mate extends _i1.UndoHistoryController with _i2.Mate {
  /// UndoHistoryController UndoHistoryController({UndoHistoryValue? value})
  UndoHistoryController$Mate(
      {
      /// optionalParameters: {UndoHistoryValue? value} , default:none
      _i1.UndoHistoryValue? value})
      : super(value: value) {
    mateBuilderName = 'UndoHistoryController';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => UndoHistoryController$Mate(value: p.get('value').build());
    mateUse(
      'value',
      value,
      isNamed: true,
    );
  }
}
