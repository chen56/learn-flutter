// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/widgets/overscroll_indicator.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'dart:core';
import 'package:flutter/src/painting/basic_types.dart';
import 'dart:ui';
import 'package:flutter/src/widgets/scroll_notification.dart';
import 'package:flutter/src/widgets/framework.dart';

/// class GlowingOverscrollIndicator extends StatefulWidget
class GlowingOverscrollIndicator$Mate extends GlowingOverscrollIndicator with Mate {
  /// GlowingOverscrollIndicator GlowingOverscrollIndicator({Key? key, bool showLeading = true, bool showTrailing = true, required AxisDirection axisDirection, required Color color, bool Function(ScrollNotification) notificationPredicate = defaultScrollNotificationPredicate, Widget? child})
  GlowingOverscrollIndicator$Mate({
    /// optionalParameters: {Key? key} , defaultValue:none
    Key? key,

    /// optionalParameters: {bool showLeading = true} , defaultValue:Literal
    bool showLeading = true,

    /// optionalParameters: {bool showTrailing = true} , defaultValue:Literal
    bool showTrailing = true,

    /// optionalParameters: {required AxisDirection axisDirection} , defaultValue:none
    required AxisDirection axisDirection,

    /// optionalParameters: {required Color color} , defaultValue:none
    required Color color,

    /// optionalParameters: {bool Function(ScrollNotification) notificationPredicate = defaultScrollNotificationPredicate} , defaultValue:unprocessed
    required ScrollNotificationPredicate notificationPredicate,

    /// optionalParameters: {Widget? child} , defaultValue:none
    Widget? child,
  }) : super(
          key: key,
          showLeading: showLeading,
          showTrailing: showTrailing,
          axisDirection: axisDirection,
          color: color,
          notificationPredicate: notificationPredicate,
          child: child,
        ) {
    mateCreateName = 'GlowingOverscrollIndicator';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => GlowingOverscrollIndicator$Mate(
          key: p.get('key').build(),
          showLeading: p.get('showLeading').build(),
          showTrailing: p.get('showTrailing').build(),
          axisDirection: p.get('axisDirection').build(),
          color: p.get('color').build(),
          notificationPredicate: p.get('notificationPredicate').build(),
          child: p.get('child').build(),
        );
    mateUse('key', key);
    mateUse('showLeading', showLeading);
    mateUse('showTrailing', showTrailing);
    mateUse('axisDirection', axisDirection);
    mateUse('color', color);
    mateUse('notificationPredicate', notificationPredicate);
    mateUse('child', child);
  }
}

/// class StretchingOverscrollIndicator extends StatefulWidget
class StretchingOverscrollIndicator$Mate extends StretchingOverscrollIndicator with Mate {
  /// StretchingOverscrollIndicator StretchingOverscrollIndicator({Key? key, required AxisDirection axisDirection, bool Function(ScrollNotification) notificationPredicate = defaultScrollNotificationPredicate, Clip clipBehavior = Clip.hardEdge, Widget? child})
  StretchingOverscrollIndicator$Mate({
    /// optionalParameters: {Key? key} , defaultValue:none
    Key? key,

    /// optionalParameters: {required AxisDirection axisDirection} , defaultValue:none
    required AxisDirection axisDirection,

    /// optionalParameters: {bool Function(ScrollNotification) notificationPredicate = defaultScrollNotificationPredicate} , defaultValue:unprocessed
    required ScrollNotificationPredicate notificationPredicate,

    /// optionalParameters: {Clip clipBehavior = Clip.hardEdge} , defaultValue:unprocessed
    required Clip clipBehavior,

    /// optionalParameters: {Widget? child} , defaultValue:none
    Widget? child,
  }) : super(
          key: key,
          axisDirection: axisDirection,
          notificationPredicate: notificationPredicate,
          clipBehavior: clipBehavior,
          child: child,
        ) {
    mateCreateName = 'StretchingOverscrollIndicator';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => StretchingOverscrollIndicator$Mate(
          key: p.get('key').build(),
          axisDirection: p.get('axisDirection').build(),
          notificationPredicate: p.get('notificationPredicate').build(),
          clipBehavior: p.get('clipBehavior').build(),
          child: p.get('child').build(),
        );
    mateUse('key', key);
    mateUse('axisDirection', axisDirection);
    mateUse('notificationPredicate', notificationPredicate);
    mateUse('clipBehavior', clipBehavior);
    mateUse('child', child);
  }
}

/// class OverscrollIndicatorNotification extends Notification with ViewportNotificationMixin
class OverscrollIndicatorNotification$Mate extends OverscrollIndicatorNotification with Mate {
  /// OverscrollIndicatorNotification OverscrollIndicatorNotification({required bool leading})
  OverscrollIndicatorNotification$Mate(
      {
      /// optionalParameters: {required bool leading} , defaultValue:none
      required bool leading})
      : super(leading: leading) {
    mateCreateName = 'OverscrollIndicatorNotification';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => OverscrollIndicatorNotification$Mate(leading: p.get('leading').build());
    mateUse('leading', leading);
  }
}
