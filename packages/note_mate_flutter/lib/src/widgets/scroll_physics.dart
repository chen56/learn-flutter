// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/widgets/scroll_physics.dart';
import 'package:note/mate.dart';

/// class ScrollPhysics
class ScrollPhysics$Mate extends ScrollPhysics with Mate {
  /// ScrollPhysics ScrollPhysics({ScrollPhysics? parent})
  ScrollPhysics$Mate(
      {
      /// optionalParameters: {ScrollPhysics? parent} , defaultValue:none
      ScrollPhysics? parent})
      : super(parent: parent) {
    mateBuilder = (p) => ScrollPhysics$Mate(parent: p.get('parent').build());
    mateDeclare('parent', parent);
  }
}

/// class RangeMaintainingScrollPhysics extends ScrollPhysics
class RangeMaintainingScrollPhysics$Mate extends RangeMaintainingScrollPhysics with Mate {
  /// RangeMaintainingScrollPhysics RangeMaintainingScrollPhysics({ScrollPhysics? parent})
  RangeMaintainingScrollPhysics$Mate(
      {
      /// optionalParameters: {ScrollPhysics? parent} , defaultValue:none
      ScrollPhysics? parent})
      : super(parent: parent) {
    mateBuilder = (p) => RangeMaintainingScrollPhysics$Mate(parent: p.get('parent').build());
    mateDeclare('parent', parent);
  }
}

/// class BouncingScrollPhysics extends ScrollPhysics
class BouncingScrollPhysics$Mate extends BouncingScrollPhysics with Mate {
  /// BouncingScrollPhysics BouncingScrollPhysics({ScrollDecelerationRate decelerationRate = ScrollDecelerationRate.normal, ScrollPhysics? parent})
  BouncingScrollPhysics$Mate({
    /// optionalParameters: {ScrollDecelerationRate decelerationRate = ScrollDecelerationRate.normal} , defaultValue:unprocessed
    required ScrollDecelerationRate decelerationRate,

    /// optionalParameters: {ScrollPhysics? parent} , defaultValue:none
    ScrollPhysics? parent,
  }) : super(
          decelerationRate: decelerationRate,
          parent: parent,
        ) {
    mateBuilder = (p) => BouncingScrollPhysics$Mate(
          decelerationRate: p.get('decelerationRate').build(),
          parent: p.get('parent').build(),
        );
    mateDeclare('decelerationRate', decelerationRate);
    mateDeclare('parent', parent);
  }
}

/// class ClampingScrollPhysics extends ScrollPhysics
class ClampingScrollPhysics$Mate extends ClampingScrollPhysics with Mate {
  /// ClampingScrollPhysics ClampingScrollPhysics({ScrollPhysics? parent})
  ClampingScrollPhysics$Mate(
      {
      /// optionalParameters: {ScrollPhysics? parent} , defaultValue:none
      ScrollPhysics? parent})
      : super(parent: parent) {
    mateBuilder = (p) => ClampingScrollPhysics$Mate(parent: p.get('parent').build());
    mateDeclare('parent', parent);
  }
}

/// class AlwaysScrollableScrollPhysics extends ScrollPhysics
class AlwaysScrollableScrollPhysics$Mate extends AlwaysScrollableScrollPhysics with Mate {
  /// AlwaysScrollableScrollPhysics AlwaysScrollableScrollPhysics({ScrollPhysics? parent})
  AlwaysScrollableScrollPhysics$Mate(
      {
      /// optionalParameters: {ScrollPhysics? parent} , defaultValue:none
      ScrollPhysics? parent})
      : super(parent: parent) {
    mateBuilder = (p) => AlwaysScrollableScrollPhysics$Mate(parent: p.get('parent').build());
    mateDeclare('parent', parent);
  }
}

/// class NeverScrollableScrollPhysics extends ScrollPhysics
class NeverScrollableScrollPhysics$Mate extends NeverScrollableScrollPhysics with Mate {
  /// NeverScrollableScrollPhysics NeverScrollableScrollPhysics({ScrollPhysics? parent})
  NeverScrollableScrollPhysics$Mate(
      {
      /// optionalParameters: {ScrollPhysics? parent} , defaultValue:none
      ScrollPhysics? parent})
      : super(parent: parent) {
    mateBuilder = (p) => NeverScrollableScrollPhysics$Mate(parent: p.get('parent').build());
    mateDeclare('parent', parent);
  }
}
