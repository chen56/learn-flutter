// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/widgets/sliver_persistent_header.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'dart:core';

/// class SliverPersistentHeader extends StatelessWidget
class SliverPersistentHeader$Mate extends SliverPersistentHeader with Mate {
  /// SliverPersistentHeader SliverPersistentHeader({Key? key, required SliverPersistentHeaderDelegate delegate, bool pinned = false, bool floating = false})
  SliverPersistentHeader$Mate({
    /// optionalParameters: {Key? key} , default:none
    Key? key,

    /// optionalParameters: {required SliverPersistentHeaderDelegate delegate} , default:none
    required SliverPersistentHeaderDelegate delegate,

    /// optionalParameters: {bool pinned = false} , default:processed=BooleanLiteralImpl
    bool pinned = false,

    /// optionalParameters: {bool floating = false} , default:processed=BooleanLiteralImpl
    bool floating = false,
  }) : super(
          key: key,
          delegate: delegate,
          pinned: pinned,
          floating: floating,
        ) {
    mateBuilderName = 'SliverPersistentHeader';
    matePackageUrl = 'package:flutter/widgets.dart';
    mateBuilder = (p) => SliverPersistentHeader$Mate(
          key: p.get('key').build(),
          delegate: p.get('delegate').build(),
          pinned: p.get('pinned').build(),
          floating: p.get('floating').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'delegate',
      delegate,
      isNamed: true,
    );
    mateUse(
      'pinned',
      pinned,
      isNamed: true,
      defaultValue: false,
    );
    mateUse(
      'floating',
      floating,
      isNamed: true,
      defaultValue: false,
    );
  }
}
