// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/dismissible.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/widgets/framework.dart' as _i4;
import 'dart:ui' as _i5;
import 'package:flutter/cupertino.dart' as _i6;
import 'package:flutter/src/gestures/recognizer.dart' as _i7;
import 'package:flutter/gestures.dart' as _i8;
import 'package:flutter/src/rendering/proxy_box.dart' as _i9;

/// class Dismissible extends StatefulWidget
class Dismissible$Mate extends _i1.Dismissible with _i2.Mate {
  /// Dismissible Dismissible({required Key key, required Widget child, Widget? background, Widget? secondaryBackground, Future<bool?> Function(DismissDirection)? confirmDismiss, void Function()? onResize, void Function(DismissUpdateDetails)? onUpdate, void Function(DismissDirection)? onDismissed, DismissDirection direction = DismissDirection.horizontal, Duration? resizeDuration = const Duration(milliseconds: 300), Map<DismissDirection, double> dismissThresholds = const <DismissDirection, double>{}, Duration movementDuration = const Duration(milliseconds: 200), double crossAxisEndOffset = 0.0, DragStartBehavior dragStartBehavior = DragStartBehavior.start, HitTestBehavior behavior = HitTestBehavior.opaque})
  Dismissible$Mate({
    /// optionalParameters: {required Key key} , default:none
    required super.key,

    /// optionalParameters: {required Widget child} , default:none
    required super.child,

    /// optionalParameters: {Widget? background} , default:none
    super.background,

    /// optionalParameters: {Widget? secondaryBackground} , default:none
    super.secondaryBackground,

    /// optionalParameters: {Future<bool?> Function(DismissDirection)? confirmDismiss} , default:none
    super.confirmDismiss,

    /// optionalParameters: {void Function()? onResize} , default:none
    super.onResize,

    /// optionalParameters: {void Function(DismissUpdateDetails)? onUpdate} , default:none
    super.onUpdate,

    /// optionalParameters: {void Function(DismissDirection)? onDismissed} , default:none
    super.onDismissed,

    /// optionalParameters: {DismissDirection direction = DismissDirection.horizontal} , default:processed=PrefixedIdentifierImpl
    super.direction,

    /// optionalParameters: {Duration? resizeDuration = const Duration(milliseconds: 300)} , default:unprocessed=InstanceCreationExpressionImpl
    super.resizeDuration,

    /// optionalParameters: {Map<DismissDirection, double> dismissThresholds = const <DismissDirection, double>{}} , default:unprocessed=SetOrMapLiteralImpl
    super.dismissThresholds,

    /// optionalParameters: {Duration movementDuration = const Duration(milliseconds: 200)} , default:unprocessed=InstanceCreationExpressionImpl
    super.movementDuration,

    /// optionalParameters: {double crossAxisEndOffset = 0.0} , default:processed=DoubleLiteralImpl
    super.crossAxisEndOffset,

    /// optionalParameters: {DragStartBehavior dragStartBehavior = DragStartBehavior.start} , default:processed=PrefixedIdentifierImpl
    super.dragStartBehavior,

    /// optionalParameters: {HitTestBehavior behavior = HitTestBehavior.opaque} , default:processed=PrefixedIdentifierImpl
    super.behavior,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i4.Widget>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
          'background': _i2.BuilderArg<_i4.Widget?>(
            name: 'background',
            init: background,
            isNamed: true,
          ),
          'secondaryBackground': _i2.BuilderArg<_i4.Widget?>(
            name: 'secondaryBackground',
            init: secondaryBackground,
            isNamed: true,
          ),
          'confirmDismiss': _i2.BuilderArg<_i1.ConfirmDismissCallback?>(
            name: 'confirmDismiss',
            init: confirmDismiss,
            isNamed: true,
          ),
          'onResize': _i2.BuilderArg<_i5.VoidCallback?>(
            name: 'onResize',
            init: onResize,
            isNamed: true,
          ),
          'onUpdate': _i2.BuilderArg<_i1.DismissUpdateCallback?>(
            name: 'onUpdate',
            init: onUpdate,
            isNamed: true,
          ),
          'onDismissed': _i2.BuilderArg<_i1.DismissDirectionCallback?>(
            name: 'onDismissed',
            init: onDismissed,
            isNamed: true,
          ),
          'direction': _i2.BuilderArg<_i1.DismissDirection>(
            name: 'direction',
            init: direction,
            isNamed: true,
            defaultValue: _i6.DismissDirection.horizontal,
          ),
          'resizeDuration': _i2.BuilderArg<Duration?>(
            name: 'resizeDuration',
            init: resizeDuration,
            isNamed: true,
          ),
          'dismissThresholds': _i2.BuilderArg<Map<_i1.DismissDirection, double>>(
            name: 'dismissThresholds',
            init: dismissThresholds,
            isNamed: true,
          ),
          'movementDuration': _i2.BuilderArg<Duration>(
            name: 'movementDuration',
            init: movementDuration,
            isNamed: true,
          ),
          'crossAxisEndOffset': _i2.BuilderArg<double>(
            name: 'crossAxisEndOffset',
            init: crossAxisEndOffset,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'dragStartBehavior': _i2.BuilderArg<_i7.DragStartBehavior>(
            name: 'dragStartBehavior',
            init: dragStartBehavior,
            isNamed: true,
            defaultValue: _i8.DragStartBehavior.start,
          ),
          'behavior': _i2.BuilderArg<_i9.HitTestBehavior>(
            name: 'behavior',
            init: behavior,
            isNamed: true,
            defaultValue: _i6.HitTestBehavior.opaque,
          ),
        },
        super() {
    mateBuilderName = 'Dismissible';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => Dismissible$Mate(
          key: p.get('key').build(),
          child: p.get('child').build(),
          background: p.get('background').build(),
          secondaryBackground: p.get('secondaryBackground').build(),
          confirmDismiss: p.get('confirmDismiss').build(),
          onResize: p.get('onResize').build(),
          onUpdate: p.get('onUpdate').build(),
          onDismissed: p.get('onDismissed').build(),
          direction: p.get('direction').build(),
          resizeDuration: p.get('resizeDuration').build(),
          dismissThresholds: p.get('dismissThresholds').build(),
          movementDuration: p.get('movementDuration').build(),
          crossAxisEndOffset: p.get('crossAxisEndOffset').build(),
          dragStartBehavior: p.get('dragStartBehavior').build(),
          behavior: p.get('behavior').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class DismissUpdateDetails
class DismissUpdateDetails$Mate extends _i1.DismissUpdateDetails with _i2.Mate {
  /// DismissUpdateDetails DismissUpdateDetails({DismissDirection direction = DismissDirection.horizontal, bool reached = false, bool previousReached = false, double progress = 0.0})
  DismissUpdateDetails$Mate({
    /// optionalParameters: {DismissDirection direction = DismissDirection.horizontal} , default:processed=PrefixedIdentifierImpl
    super.direction,

    /// optionalParameters: {bool reached = false} , default:processed=BooleanLiteralImpl
    super.reached,

    /// optionalParameters: {bool previousReached = false} , default:processed=BooleanLiteralImpl
    super.previousReached,

    /// optionalParameters: {double progress = 0.0} , default:processed=DoubleLiteralImpl
    super.progress,
  })  : mateParams = {
          'direction': _i2.BuilderArg<_i1.DismissDirection>(
            name: 'direction',
            init: direction,
            isNamed: true,
            defaultValue: _i6.DismissDirection.horizontal,
          ),
          'reached': _i2.BuilderArg<bool>(
            name: 'reached',
            init: reached,
            isNamed: true,
            defaultValue: false,
          ),
          'previousReached': _i2.BuilderArg<bool>(
            name: 'previousReached',
            init: previousReached,
            isNamed: true,
            defaultValue: false,
          ),
          'progress': _i2.BuilderArg<double>(
            name: 'progress',
            init: progress,
            isNamed: true,
            defaultValue: 0.0,
          ),
        },
        super() {
    mateBuilderName = 'DismissUpdateDetails';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => DismissUpdateDetails$Mate(
          direction: p.get('direction').build(),
          reached: p.get('reached').build(),
          previousReached: p.get('previousReached').build(),
          progress: p.get('progress').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
