// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/media_query.dart' as _i1;
import 'package:note/mate_core.dart' as _i2;
import 'dart:ui' as _i3;
import 'package:flutter/animation.dart' as _i4;
import 'package:flutter/src/painting/edge_insets.dart' as _i5;
import 'package:flutter/cupertino.dart' as _i6;
import 'package:flutter/src/gestures/gesture_settings.dart' as _i7;
import 'package:flutter/src/foundation/key.dart' as _i8;
import 'package:flutter/src/widgets/framework.dart' as _i9;

/// class MediaQueryData
class MediaQueryData$Mate extends _i1.MediaQueryData with _i2.Mate {
  /// MediaQueryData MediaQueryData({Size size = Size.zero, double devicePixelRatio = 1.0, double textScaleFactor = 1.0, Brightness platformBrightness = Brightness.light, EdgeInsets padding = EdgeInsets.zero, EdgeInsets viewInsets = EdgeInsets.zero, EdgeInsets systemGestureInsets = EdgeInsets.zero, EdgeInsets viewPadding = EdgeInsets.zero, bool alwaysUse24HourFormat = false, bool accessibleNavigation = false, bool invertColors = false, bool highContrast = false, bool disableAnimations = false, bool boldText = false, NavigationMode navigationMode = NavigationMode.traditional, DeviceGestureSettings gestureSettings = const DeviceGestureSettings(touchSlop: kTouchSlop), List<DisplayFeature> displayFeatures = const <ui.DisplayFeature>[]})
  MediaQueryData$Mate({
    /// optionalParameters: {Size size = Size.zero} , default:processed=PrefixedIdentifierImpl
    super.size,

    /// optionalParameters: {double devicePixelRatio = 1.0} , default:processed=DoubleLiteralImpl
    super.devicePixelRatio,

    /// optionalParameters: {double textScaleFactor = 1.0} , default:processed=DoubleLiteralImpl
    super.textScaleFactor,

    /// optionalParameters: {Brightness platformBrightness = Brightness.light} , default:processed=PrefixedIdentifierImpl
    super.platformBrightness,

    /// optionalParameters: {EdgeInsets padding = EdgeInsets.zero} , default:processed=PrefixedIdentifierImpl
    super.padding,

    /// optionalParameters: {EdgeInsets viewInsets = EdgeInsets.zero} , default:processed=PrefixedIdentifierImpl
    super.viewInsets,

    /// optionalParameters: {EdgeInsets systemGestureInsets = EdgeInsets.zero} , default:processed=PrefixedIdentifierImpl
    super.systemGestureInsets,

    /// optionalParameters: {EdgeInsets viewPadding = EdgeInsets.zero} , default:processed=PrefixedIdentifierImpl
    super.viewPadding,

    /// optionalParameters: {bool alwaysUse24HourFormat = false} , default:processed=BooleanLiteralImpl
    super.alwaysUse24HourFormat,

    /// optionalParameters: {bool accessibleNavigation = false} , default:processed=BooleanLiteralImpl
    super.accessibleNavigation,

    /// optionalParameters: {bool invertColors = false} , default:processed=BooleanLiteralImpl
    super.invertColors,

    /// optionalParameters: {bool highContrast = false} , default:processed=BooleanLiteralImpl
    super.highContrast,

    /// optionalParameters: {bool disableAnimations = false} , default:processed=BooleanLiteralImpl
    super.disableAnimations,

    /// optionalParameters: {bool boldText = false} , default:processed=BooleanLiteralImpl
    super.boldText,

    /// optionalParameters: {NavigationMode navigationMode = NavigationMode.traditional} , default:processed=PrefixedIdentifierImpl
    super.navigationMode,

    /// optionalParameters: {DeviceGestureSettings gestureSettings = const DeviceGestureSettings(touchSlop: kTouchSlop)} , default:unprocessed=InstanceCreationExpressionImpl
    super.gestureSettings,

    /// optionalParameters: {List<DisplayFeature> displayFeatures = const <ui.DisplayFeature>[]} , default:unprocessed=ListLiteralImpl
    super.displayFeatures,
  })  : mateParams = {
          'size': _i2.BuilderArg<_i3.Size>(
            name: 'size',
            init: size,
            isNamed: true,
            defaultValue: _i4.Size.zero,
          ),
          'devicePixelRatio': _i2.BuilderArg<double>(
            name: 'devicePixelRatio',
            init: devicePixelRatio,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'textScaleFactor': _i2.BuilderArg<double>(
            name: 'textScaleFactor',
            init: textScaleFactor,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'platformBrightness': _i2.BuilderArg<_i3.Brightness>(
            name: 'platformBrightness',
            init: platformBrightness,
            isNamed: true,
            defaultValue: _i3.Brightness.light,
          ),
          'padding': _i2.BuilderArg<_i5.EdgeInsets>(
            name: 'padding',
            init: padding,
            isNamed: true,
            defaultValue: _i6.EdgeInsets.zero,
          ),
          'viewInsets': _i2.BuilderArg<_i5.EdgeInsets>(
            name: 'viewInsets',
            init: viewInsets,
            isNamed: true,
            defaultValue: _i6.EdgeInsets.zero,
          ),
          'systemGestureInsets': _i2.BuilderArg<_i5.EdgeInsets>(
            name: 'systemGestureInsets',
            init: systemGestureInsets,
            isNamed: true,
            defaultValue: _i6.EdgeInsets.zero,
          ),
          'viewPadding': _i2.BuilderArg<_i5.EdgeInsets>(
            name: 'viewPadding',
            init: viewPadding,
            isNamed: true,
            defaultValue: _i6.EdgeInsets.zero,
          ),
          'alwaysUse24HourFormat': _i2.BuilderArg<bool>(
            name: 'alwaysUse24HourFormat',
            init: alwaysUse24HourFormat,
            isNamed: true,
            defaultValue: false,
          ),
          'accessibleNavigation': _i2.BuilderArg<bool>(
            name: 'accessibleNavigation',
            init: accessibleNavigation,
            isNamed: true,
            defaultValue: false,
          ),
          'invertColors': _i2.BuilderArg<bool>(
            name: 'invertColors',
            init: invertColors,
            isNamed: true,
            defaultValue: false,
          ),
          'highContrast': _i2.BuilderArg<bool>(
            name: 'highContrast',
            init: highContrast,
            isNamed: true,
            defaultValue: false,
          ),
          'disableAnimations': _i2.BuilderArg<bool>(
            name: 'disableAnimations',
            init: disableAnimations,
            isNamed: true,
            defaultValue: false,
          ),
          'boldText': _i2.BuilderArg<bool>(
            name: 'boldText',
            init: boldText,
            isNamed: true,
            defaultValue: false,
          ),
          'navigationMode': _i2.BuilderArg<_i1.NavigationMode>(
            name: 'navigationMode',
            init: navigationMode,
            isNamed: true,
            defaultValue: _i6.NavigationMode.traditional,
          ),
          'gestureSettings': _i2.BuilderArg<_i7.DeviceGestureSettings>(
            name: 'gestureSettings',
            init: gestureSettings,
            isNamed: true,
          ),
          'displayFeatures': _i2.BuilderArg<List<_i3.DisplayFeature>>(
            name: 'displayFeatures',
            init: displayFeatures,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'MediaQueryData';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => MediaQueryData$Mate(
          size: p.get('size').build(),
          devicePixelRatio: p.get('devicePixelRatio').build(),
          textScaleFactor: p.get('textScaleFactor').build(),
          platformBrightness: p.get('platformBrightness').build(),
          padding: p.get('padding').build(),
          viewInsets: p.get('viewInsets').build(),
          systemGestureInsets: p.get('systemGestureInsets').build(),
          viewPadding: p.get('viewPadding').build(),
          alwaysUse24HourFormat: p.get('alwaysUse24HourFormat').build(),
          accessibleNavigation: p.get('accessibleNavigation').build(),
          invertColors: p.get('invertColors').build(),
          highContrast: p.get('highContrast').build(),
          disableAnimations: p.get('disableAnimations').build(),
          boldText: p.get('boldText').build(),
          navigationMode: p.get('navigationMode').build(),
          gestureSettings: p.get('gestureSettings').build(),
          displayFeatures: p.get('displayFeatures').build(),
        );
  }

  /// MediaQueryData MediaQueryData.fromView(FlutterView view, {MediaQueryData? platformData})
  MediaQueryData$Mate.fromView(
    /// requiredParameters: FlutterView view
    super.view, {
    /// optionalParameters: {MediaQueryData? platformData} , default:none
    super.platformData,
  })  : mateParams = {
          'view': _i2.BuilderArg<_i3.FlutterView>(
            name: 'view',
            init: view,
            isNamed: false,
          ),
          'platformData': _i2.BuilderArg<_i1.MediaQueryData?>(
            name: 'platformData',
            init: platformData,
            isNamed: true,
          ),
        },
        super.fromView() {
    mateBuilderName = 'MediaQueryData.fromView';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => MediaQueryData$Mate.fromView(
          p.get('view').value,
          platformData: p.get('platformData').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class MediaQuery extends InheritedModel<_MediaQueryAspect>
class MediaQuery$Mate extends _i1.MediaQuery with _i2.Mate {
  /// MediaQuery MediaQuery({Key? key, required MediaQueryData data, required Widget child})
  MediaQuery$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required MediaQueryData data} , default:none
    required super.data,

    /// optionalParameters: {required Widget child} , default:none
    required super.child,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i8.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'data': _i2.BuilderArg<_i1.MediaQueryData>(
            name: 'data',
            init: data,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i9.Widget>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'MediaQuery';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => MediaQuery$Mate(
          key: p.get('key').build(),
          data: p.get('data').build(),
          child: p.get('child').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
