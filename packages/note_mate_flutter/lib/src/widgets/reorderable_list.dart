// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/widgets/reorderable_list.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'dart:core';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/painting/basic_types.dart';
import 'package:flutter/src/widgets/scroll_controller.dart';
import 'package:flutter/src/widgets/scroll_physics.dart';
import 'package:flutter/src/gestures/recognizer.dart';
import 'package:flutter/src/widgets/scroll_view.dart';
import 'dart:ui';
import 'package:flutter/src/widgets/sliver.dart';

/// class ReorderableList extends StatefulWidget
class ReorderableList$Mate extends ReorderableList with Mate {
  /// ReorderableList ReorderableList({Key? key, required Widget Function(BuildContext, int) itemBuilder, required int itemCount, required void Function(int, int) onReorder, void Function(int)? onReorderStart, void Function(int)? onReorderEnd, double? itemExtent, Widget? prototypeItem, Widget Function(Widget, int, Animation<double>)? proxyDecorator, EdgeInsetsGeometry? padding, Axis scrollDirection = Axis.vertical, bool reverse = false, ScrollController? controller, bool? primary, ScrollPhysics? physics, bool shrinkWrap = false, double anchor = 0.0, double? cacheExtent, DragStartBehavior dragStartBehavior = DragStartBehavior.start, ScrollViewKeyboardDismissBehavior keyboardDismissBehavior = ScrollViewKeyboardDismissBehavior.manual, String? restorationId, Clip clipBehavior = Clip.hardEdge})
  ReorderableList$Mate({
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {required Widget Function(BuildContext, int) itemBuilder} , hasDefaultValue:false, defaultValueCode:null
    required IndexedWidgetBuilder itemBuilder,

    /// optionalParameters: {required int itemCount} , hasDefaultValue:false, defaultValueCode:null
    required int itemCount,

    /// optionalParameters: {required void Function(int, int) onReorder} , hasDefaultValue:false, defaultValueCode:null
    required ReorderCallback onReorder,

    /// optionalParameters: {void Function(int)? onReorderStart} , hasDefaultValue:false, defaultValueCode:null
    void Function(int)? onReorderStart,

    /// optionalParameters: {void Function(int)? onReorderEnd} , hasDefaultValue:false, defaultValueCode:null
    void Function(int)? onReorderEnd,

    /// optionalParameters: {double? itemExtent} , hasDefaultValue:false, defaultValueCode:null
    double? itemExtent,

    /// optionalParameters: {Widget? prototypeItem} , hasDefaultValue:false, defaultValueCode:null
    Widget? prototypeItem,

    /// optionalParameters: {Widget Function(Widget, int, Animation<double>)? proxyDecorator} , hasDefaultValue:false, defaultValueCode:null
    ReorderItemProxyDecorator? proxyDecorator,

    /// optionalParameters: {EdgeInsetsGeometry? padding} , hasDefaultValue:false, defaultValueCode:null
    EdgeInsetsGeometry? padding,

    /// optionalParameters: {Axis scrollDirection = Axis.vertical} , hasDefaultValue:true, defaultValueCode:Axis.vertical
    required Axis scrollDirection,

    /// optionalParameters: {bool reverse = false} , hasDefaultValue:true, defaultValueCode:false
    required bool reverse,

    /// optionalParameters: {ScrollController? controller} , hasDefaultValue:false, defaultValueCode:null
    ScrollController? controller,

    /// optionalParameters: {bool? primary} , hasDefaultValue:false, defaultValueCode:null
    bool? primary,

    /// optionalParameters: {ScrollPhysics? physics} , hasDefaultValue:false, defaultValueCode:null
    ScrollPhysics? physics,

    /// optionalParameters: {bool shrinkWrap = false} , hasDefaultValue:true, defaultValueCode:false
    required bool shrinkWrap,

    /// optionalParameters: {double anchor = 0.0} , hasDefaultValue:true, defaultValueCode:0.0
    required double anchor,

    /// optionalParameters: {double? cacheExtent} , hasDefaultValue:false, defaultValueCode:null
    double? cacheExtent,

    /// optionalParameters: {DragStartBehavior dragStartBehavior = DragStartBehavior.start} , hasDefaultValue:true, defaultValueCode:DragStartBehavior.start
    required DragStartBehavior dragStartBehavior,

    /// optionalParameters: {ScrollViewKeyboardDismissBehavior keyboardDismissBehavior = ScrollViewKeyboardDismissBehavior.manual} , hasDefaultValue:true, defaultValueCode:ScrollViewKeyboardDismissBehavior.manual
    required ScrollViewKeyboardDismissBehavior keyboardDismissBehavior,

    /// optionalParameters: {String? restorationId} , hasDefaultValue:false, defaultValueCode:null
    String? restorationId,

    /// optionalParameters: {Clip clipBehavior = Clip.hardEdge} , hasDefaultValue:true, defaultValueCode:Clip.hardEdge
    required Clip clipBehavior,
  }) : super(
          key: key,
          itemBuilder: itemBuilder,
          itemCount: itemCount,
          onReorder: onReorder,
          onReorderStart: onReorderStart,
          onReorderEnd: onReorderEnd,
          itemExtent: itemExtent,
          prototypeItem: prototypeItem,
          proxyDecorator: proxyDecorator,
          padding: padding,
          scrollDirection: scrollDirection,
          reverse: reverse,
          controller: controller,
          primary: primary,
          physics: physics,
          shrinkWrap: shrinkWrap,
          anchor: anchor,
          cacheExtent: cacheExtent,
          dragStartBehavior: dragStartBehavior,
          keyboardDismissBehavior: keyboardDismissBehavior,
          restorationId: restorationId,
          clipBehavior: clipBehavior,
        ) {
    mateBuilder = (p) => ReorderableList$Mate(
          key: p.get('key').build(),
          itemBuilder: p.get('itemBuilder').build(),
          itemCount: p.get('itemCount').build(),
          onReorder: p.get('onReorder').build(),
          onReorderStart: p.get('onReorderStart').build(),
          onReorderEnd: p.get('onReorderEnd').build(),
          itemExtent: p.get('itemExtent').build(),
          prototypeItem: p.get('prototypeItem').build(),
          proxyDecorator: p.get('proxyDecorator').build(),
          padding: p.get('padding').build(),
          scrollDirection: p.get('scrollDirection').build(),
          reverse: p.get('reverse').build(),
          controller: p.get('controller').build(),
          primary: p.get('primary').build(),
          physics: p.get('physics').build(),
          shrinkWrap: p.get('shrinkWrap').build(),
          anchor: p.get('anchor').build(),
          cacheExtent: p.get('cacheExtent').build(),
          dragStartBehavior: p.get('dragStartBehavior').build(),
          keyboardDismissBehavior: p.get('keyboardDismissBehavior').build(),
          restorationId: p.get('restorationId').build(),
          clipBehavior: p.get('clipBehavior').build(),
        );
    matePut('key', key);
    matePut('itemBuilder', itemBuilder);
    matePut('itemCount', itemCount);
    matePut('onReorder', onReorder);
    matePut('onReorderStart', onReorderStart);
    matePut('onReorderEnd', onReorderEnd);
    matePut('itemExtent', itemExtent);
    matePut('prototypeItem', prototypeItem);
    matePut('proxyDecorator', proxyDecorator);
    matePut('padding', padding);
    matePut('scrollDirection', scrollDirection);
    matePut('reverse', reverse);
    matePut('controller', controller);
    matePut('primary', primary);
    matePut('physics', physics);
    matePut('shrinkWrap', shrinkWrap);
    matePut('anchor', anchor);
    matePut('cacheExtent', cacheExtent);
    matePut('dragStartBehavior', dragStartBehavior);
    matePut('keyboardDismissBehavior', keyboardDismissBehavior);
    matePut('restorationId', restorationId);
    matePut('clipBehavior', clipBehavior);
  }
}

/// class SliverReorderableList extends StatefulWidget
class SliverReorderableList$Mate extends SliverReorderableList with Mate {
  /// SliverReorderableList SliverReorderableList({Key? key, required Widget Function(BuildContext, int) itemBuilder, int? Function(Key)? findChildIndexCallback, required int itemCount, required void Function(int, int) onReorder, void Function(int)? onReorderStart, void Function(int)? onReorderEnd, double? itemExtent, Widget? prototypeItem, Widget Function(Widget, int, Animation<double>)? proxyDecorator})
  SliverReorderableList$Mate({
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {required Widget Function(BuildContext, int) itemBuilder} , hasDefaultValue:false, defaultValueCode:null
    required IndexedWidgetBuilder itemBuilder,

    /// optionalParameters: {int? Function(Key)? findChildIndexCallback} , hasDefaultValue:false, defaultValueCode:null
    ChildIndexGetter? findChildIndexCallback,

    /// optionalParameters: {required int itemCount} , hasDefaultValue:false, defaultValueCode:null
    required int itemCount,

    /// optionalParameters: {required void Function(int, int) onReorder} , hasDefaultValue:false, defaultValueCode:null
    required ReorderCallback onReorder,

    /// optionalParameters: {void Function(int)? onReorderStart} , hasDefaultValue:false, defaultValueCode:null
    void Function(int)? onReorderStart,

    /// optionalParameters: {void Function(int)? onReorderEnd} , hasDefaultValue:false, defaultValueCode:null
    void Function(int)? onReorderEnd,

    /// optionalParameters: {double? itemExtent} , hasDefaultValue:false, defaultValueCode:null
    double? itemExtent,

    /// optionalParameters: {Widget? prototypeItem} , hasDefaultValue:false, defaultValueCode:null
    Widget? prototypeItem,

    /// optionalParameters: {Widget Function(Widget, int, Animation<double>)? proxyDecorator} , hasDefaultValue:false, defaultValueCode:null
    ReorderItemProxyDecorator? proxyDecorator,
  }) : super(
          key: key,
          itemBuilder: itemBuilder,
          findChildIndexCallback: findChildIndexCallback,
          itemCount: itemCount,
          onReorder: onReorder,
          onReorderStart: onReorderStart,
          onReorderEnd: onReorderEnd,
          itemExtent: itemExtent,
          prototypeItem: prototypeItem,
          proxyDecorator: proxyDecorator,
        ) {
    mateBuilder = (p) => SliverReorderableList$Mate(
          key: p.get('key').build(),
          itemBuilder: p.get('itemBuilder').build(),
          findChildIndexCallback: p.get('findChildIndexCallback').build(),
          itemCount: p.get('itemCount').build(),
          onReorder: p.get('onReorder').build(),
          onReorderStart: p.get('onReorderStart').build(),
          onReorderEnd: p.get('onReorderEnd').build(),
          itemExtent: p.get('itemExtent').build(),
          prototypeItem: p.get('prototypeItem').build(),
          proxyDecorator: p.get('proxyDecorator').build(),
        );
    matePut('key', key);
    matePut('itemBuilder', itemBuilder);
    matePut('findChildIndexCallback', findChildIndexCallback);
    matePut('itemCount', itemCount);
    matePut('onReorder', onReorder);
    matePut('onReorderStart', onReorderStart);
    matePut('onReorderEnd', onReorderEnd);
    matePut('itemExtent', itemExtent);
    matePut('prototypeItem', prototypeItem);
    matePut('proxyDecorator', proxyDecorator);
  }
}

/// class ReorderableDragStartListener extends StatelessWidget
class ReorderableDragStartListener$Mate extends ReorderableDragStartListener with Mate {
  /// ReorderableDragStartListener ReorderableDragStartListener({Key? key, required Widget child, required int index, bool enabled = true})
  ReorderableDragStartListener$Mate({
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {required Widget child} , hasDefaultValue:false, defaultValueCode:null
    required Widget child,

    /// optionalParameters: {required int index} , hasDefaultValue:false, defaultValueCode:null
    required int index,

    /// optionalParameters: {bool enabled = true} , hasDefaultValue:true, defaultValueCode:true
    required bool enabled,
  }) : super(
          key: key,
          child: child,
          index: index,
          enabled: enabled,
        ) {
    mateBuilder = (p) => ReorderableDragStartListener$Mate(
          key: p.get('key').build(),
          child: p.get('child').build(),
          index: p.get('index').build(),
          enabled: p.get('enabled').build(),
        );
    matePut('key', key);
    matePut('child', child);
    matePut('index', index);
    matePut('enabled', enabled);
  }
}

/// class ReorderableDelayedDragStartListener extends ReorderableDragStartListener
class ReorderableDelayedDragStartListener$Mate extends ReorderableDelayedDragStartListener with Mate {
  /// ReorderableDelayedDragStartListener ReorderableDelayedDragStartListener({Key? key, required Widget child, required int index, bool enabled = true})
  ReorderableDelayedDragStartListener$Mate({
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {required Widget child} , hasDefaultValue:false, defaultValueCode:null
    required Widget child,

    /// optionalParameters: {required int index} , hasDefaultValue:false, defaultValueCode:null
    required int index,

    /// optionalParameters: {bool enabled = true} , hasDefaultValue:true, defaultValueCode:true
    required bool enabled,
  }) : super(
          key: key,
          child: child,
          index: index,
          enabled: enabled,
        ) {
    mateBuilder = (p) => ReorderableDelayedDragStartListener$Mate(
          key: p.get('key').build(),
          child: p.get('child').build(),
          index: p.get('index').build(),
          enabled: p.get('enabled').build(),
        );
    matePut('key', key);
    matePut('child', child);
    matePut('index', index);
    matePut('enabled', enabled);
  }
}
