// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/overflow_bar.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/rendering/flex.dart' as _i4;
import 'package:flutter/cupertino.dart' as _i5;
import 'package:flutter/src/painting/basic_types.dart' as _i6;
import 'dart:ui' as _i7;
import 'package:flutter/src/widgets/framework.dart' as _i8;

/// class OverflowBar extends MultiChildRenderObjectWidget
class OverflowBar$Mate extends _i1.OverflowBar with _i2.Mate {
  /// OverflowBar OverflowBar({Key? key, double spacing = 0.0, MainAxisAlignment? alignment, double overflowSpacing = 0.0, OverflowBarAlignment overflowAlignment = OverflowBarAlignment.start, VerticalDirection overflowDirection = VerticalDirection.down, TextDirection? textDirection, Clip clipBehavior = Clip.none, List<Widget> children = const <Widget>[]})
  OverflowBar$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {double spacing = 0.0} , default:processed=DoubleLiteralImpl
    double spacing = 0.0,

    /// optionalParameters: {MainAxisAlignment? alignment} , default:none
    _i4.MainAxisAlignment? alignment,

    /// optionalParameters: {double overflowSpacing = 0.0} , default:processed=DoubleLiteralImpl
    double overflowSpacing = 0.0,

    /// optionalParameters: {OverflowBarAlignment overflowAlignment = OverflowBarAlignment.start} , default:processed=PrefixedIdentifierImpl
    _i1.OverflowBarAlignment overflowAlignment = _i5.OverflowBarAlignment.start,

    /// optionalParameters: {VerticalDirection overflowDirection = VerticalDirection.down} , default:processed=PrefixedIdentifierImpl
    _i6.VerticalDirection overflowDirection = _i5.VerticalDirection.down,

    /// optionalParameters: {TextDirection? textDirection} , default:none
    _i7.TextDirection? textDirection,

    /// optionalParameters: {Clip clipBehavior = Clip.none} , default:processed=PrefixedIdentifierImpl
    _i7.Clip clipBehavior = _i7.Clip.none,

    /// optionalParameters: {List<Widget> children = const <Widget>[]} , default:unprocessed=ListLiteralImpl
    required List<_i8.Widget> children,
  }) : super(
          key: key,
          spacing: spacing,
          alignment: alignment,
          overflowSpacing: overflowSpacing,
          overflowAlignment: overflowAlignment,
          overflowDirection: overflowDirection,
          textDirection: textDirection,
          clipBehavior: clipBehavior,
          children: children,
        ) {
    mateBuilderName = 'OverflowBar';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => OverflowBar$Mate(
          key: p.get('key').build(),
          spacing: p.get('spacing').build(),
          alignment: p.get('alignment').build(),
          overflowSpacing: p.get('overflowSpacing').build(),
          overflowAlignment: p.get('overflowAlignment').build(),
          overflowDirection: p.get('overflowDirection').build(),
          textDirection: p.get('textDirection').build(),
          clipBehavior: p.get('clipBehavior').build(),
          children: p.get('children').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'spacing',
      spacing,
      isNamed: true,
      defaultValue: 0.0,
    );
    mateUse(
      'alignment',
      alignment,
      isNamed: true,
    );
    mateUse(
      'overflowSpacing',
      overflowSpacing,
      isNamed: true,
      defaultValue: 0.0,
    );
    mateUse(
      'overflowAlignment',
      overflowAlignment,
      isNamed: true,
      defaultValue: _i5.OverflowBarAlignment.start,
    );
    mateUse(
      'overflowDirection',
      overflowDirection,
      isNamed: true,
      defaultValue: _i5.VerticalDirection.down,
    );
    mateUse(
      'textDirection',
      textDirection,
      isNamed: true,
    );
    mateUse(
      'clipBehavior',
      clipBehavior,
      isNamed: true,
      defaultValue: _i7.Clip.none,
    );
    mateUse(
      'children',
      children,
      isNamed: true,
    );
  }
}
