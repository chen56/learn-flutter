// /// Generated by gen_maters.dart, please don't edit! 

import 'package:flutter/src/widgets/overflow_bar.dart';import 'package:flutter/src/foundation/key.dart';import 'dart:core';import 'package:flutter/src/rendering/flex.dart';import 'package:flutter/src/painting/basic_types.dart';import 'dart:ui';import 'package:flutter/src/widgets/framework.dart';import 'package:note/mate.dart' show Mate;/// class OverflowBar extends MultiChildRenderObjectWidget
class OverflowBar$Mate extends OverflowBar with Mate {/// OverflowBar OverflowBar({Key? key, double spacing = 0.0, MainAxisAlignment? alignment, double overflowSpacing = 0.0, OverflowBarAlignment overflowAlignment = OverflowBarAlignment.start, VerticalDirection overflowDirection = VerticalDirection.down, TextDirection? textDirection, Clip clipBehavior = Clip.none, List<Widget> children = const <Widget>[]})
OverflowBar$Mate({/// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
Key? key, /// optionalParameters: {double spacing = 0.0} , hasDefaultValue:true, defaultValueCode:0.0
required double spacing, /// optionalParameters: {MainAxisAlignment? alignment} , hasDefaultValue:false, defaultValueCode:null
MainAxisAlignment? alignment, /// optionalParameters: {double overflowSpacing = 0.0} , hasDefaultValue:true, defaultValueCode:0.0
required double overflowSpacing, /// optionalParameters: {OverflowBarAlignment overflowAlignment = OverflowBarAlignment.start} , hasDefaultValue:true, defaultValueCode:OverflowBarAlignment.start
required OverflowBarAlignment overflowAlignment, /// optionalParameters: {VerticalDirection overflowDirection = VerticalDirection.down} , hasDefaultValue:true, defaultValueCode:VerticalDirection.down
required VerticalDirection overflowDirection, /// optionalParameters: {TextDirection? textDirection} , hasDefaultValue:false, defaultValueCode:null
TextDirection? textDirection, /// optionalParameters: {Clip clipBehavior = Clip.none} , hasDefaultValue:true, defaultValueCode:Clip.none
required Clip clipBehavior, /// optionalParameters: {List<Widget> children = const <Widget>[]} , hasDefaultValue:true, defaultValueCode:const <Widget>[]
required List<Widget> children, }) : super(key: key, spacing: spacing, alignment: alignment, overflowSpacing: overflowSpacing, overflowAlignment: overflowAlignment, overflowDirection: overflowDirection, textDirection: textDirection, clipBehavior: clipBehavior, children: children, ) { mateBuilder = (p) => OverflowBar$Mate(key: p.get('key').build(), spacing: p.get('spacing').build(), alignment: p.get('alignment').build(), overflowSpacing: p.get('overflowSpacing').build(), overflowAlignment: p.get('overflowAlignment').build(), overflowDirection: p.get('overflowDirection').build(), textDirection: p.get('textDirection').build(), clipBehavior: p.get('clipBehavior').build(), children: p.get('children').build(), );
matePut('key', key);
matePut('spacing', spacing);
matePut('alignment', alignment);
matePut('overflowSpacing', overflowSpacing);
matePut('overflowAlignment', overflowAlignment);
matePut('overflowDirection', overflowDirection);
matePut('textDirection', textDirection);
matePut('clipBehavior', clipBehavior);
matePut('children', children); }

 }
