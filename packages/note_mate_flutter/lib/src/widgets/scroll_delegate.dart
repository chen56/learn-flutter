// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/scroll_delegate.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/widgets/framework.dart' as _i3;

/// class SliverChildBuilderDelegate extends SliverChildDelegate
class SliverChildBuilderDelegate$Mate extends _i1.SliverChildBuilderDelegate with _i2.Mate {
  /// SliverChildBuilderDelegate SliverChildBuilderDelegate(Widget? Function(BuildContext, int) builder, {int? Function(Key)? findChildIndexCallback, int? childCount, bool addAutomaticKeepAlives = true, bool addRepaintBoundaries = true, bool addSemanticIndexes = true, int? Function(Widget, int) semanticIndexCallback = _kDefaultSemanticIndexCallback, int semanticIndexOffset = 0})
  SliverChildBuilderDelegate$Mate(
    /// requiredParameters: Widget? Function(BuildContext, int) builder
    _i3.NullableIndexedWidgetBuilder builder, {
    /// optionalParameters: {int? Function(Key)? findChildIndexCallback} , default:none
    _i1.ChildIndexGetter? findChildIndexCallback,

    /// optionalParameters: {int? childCount} , default:none
    int? childCount,

    /// optionalParameters: {bool addAutomaticKeepAlives = true} , default:processed=BooleanLiteralImpl
    bool addAutomaticKeepAlives = true,

    /// optionalParameters: {bool addRepaintBoundaries = true} , default:processed=BooleanLiteralImpl
    bool addRepaintBoundaries = true,

    /// optionalParameters: {bool addSemanticIndexes = true} , default:processed=BooleanLiteralImpl
    bool addSemanticIndexes = true,

    /// optionalParameters: {int? Function(Widget, int) semanticIndexCallback = _kDefaultSemanticIndexCallback} , default:unprocessed=SimpleIdentifierImpl
    required _i1.SemanticIndexCallback semanticIndexCallback,

    /// optionalParameters: {int semanticIndexOffset = 0} , default:processed=IntegerLiteralImpl
    int semanticIndexOffset = 0,
  }) : super(
          builder,
          findChildIndexCallback: findChildIndexCallback,
          childCount: childCount,
          addAutomaticKeepAlives: addAutomaticKeepAlives,
          addRepaintBoundaries: addRepaintBoundaries,
          addSemanticIndexes: addSemanticIndexes,
          semanticIndexCallback: semanticIndexCallback,
          semanticIndexOffset: semanticIndexOffset,
        ) {
    mateBuilderName = 'SliverChildBuilderDelegate';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => SliverChildBuilderDelegate$Mate(
          p.get('builder').value,
          findChildIndexCallback: p.get('findChildIndexCallback').build(),
          childCount: p.get('childCount').build(),
          addAutomaticKeepAlives: p.get('addAutomaticKeepAlives').build(),
          addRepaintBoundaries: p.get('addRepaintBoundaries').build(),
          addSemanticIndexes: p.get('addSemanticIndexes').build(),
          semanticIndexCallback: p.get('semanticIndexCallback').build(),
          semanticIndexOffset: p.get('semanticIndexOffset').build(),
        );
    mateUse(
      'builder',
      builder,
      isNamed: false,
    );
    mateUse(
      'findChildIndexCallback',
      findChildIndexCallback,
      isNamed: true,
    );
    mateUse(
      'childCount',
      childCount,
      isNamed: true,
    );
    mateUse(
      'addAutomaticKeepAlives',
      addAutomaticKeepAlives,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'addRepaintBoundaries',
      addRepaintBoundaries,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'addSemanticIndexes',
      addSemanticIndexes,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'semanticIndexCallback',
      semanticIndexCallback,
      isNamed: true,
    );
    mateUse(
      'semanticIndexOffset',
      semanticIndexOffset,
      isNamed: true,
      defaultValue: 0,
    );
  }
}

/// class SliverChildListDelegate extends SliverChildDelegate
class SliverChildListDelegate$Mate extends _i1.SliverChildListDelegate with _i2.Mate {
  /// SliverChildListDelegate SliverChildListDelegate(List<Widget> children, {bool addAutomaticKeepAlives = true, bool addRepaintBoundaries = true, bool addSemanticIndexes = true, int? Function(Widget, int) semanticIndexCallback = _kDefaultSemanticIndexCallback, int semanticIndexOffset = 0})
  SliverChildListDelegate$Mate(
    /// requiredParameters: List<Widget> children
    List<_i3.Widget> children, {
    /// optionalParameters: {bool addAutomaticKeepAlives = true} , default:processed=BooleanLiteralImpl
    bool addAutomaticKeepAlives = true,

    /// optionalParameters: {bool addRepaintBoundaries = true} , default:processed=BooleanLiteralImpl
    bool addRepaintBoundaries = true,

    /// optionalParameters: {bool addSemanticIndexes = true} , default:processed=BooleanLiteralImpl
    bool addSemanticIndexes = true,

    /// optionalParameters: {int? Function(Widget, int) semanticIndexCallback = _kDefaultSemanticIndexCallback} , default:unprocessed=SimpleIdentifierImpl
    required _i1.SemanticIndexCallback semanticIndexCallback,

    /// optionalParameters: {int semanticIndexOffset = 0} , default:processed=IntegerLiteralImpl
    int semanticIndexOffset = 0,
  }) : super(
          children,
          addAutomaticKeepAlives: addAutomaticKeepAlives,
          addRepaintBoundaries: addRepaintBoundaries,
          addSemanticIndexes: addSemanticIndexes,
          semanticIndexCallback: semanticIndexCallback,
          semanticIndexOffset: semanticIndexOffset,
        ) {
    mateBuilderName = 'SliverChildListDelegate';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => SliverChildListDelegate$Mate(
          p.get('children').value,
          addAutomaticKeepAlives: p.get('addAutomaticKeepAlives').build(),
          addRepaintBoundaries: p.get('addRepaintBoundaries').build(),
          addSemanticIndexes: p.get('addSemanticIndexes').build(),
          semanticIndexCallback: p.get('semanticIndexCallback').build(),
          semanticIndexOffset: p.get('semanticIndexOffset').build(),
        );
    mateUse(
      'children',
      children,
      isNamed: false,
    );
    mateUse(
      'addAutomaticKeepAlives',
      addAutomaticKeepAlives,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'addRepaintBoundaries',
      addRepaintBoundaries,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'addSemanticIndexes',
      addSemanticIndexes,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'semanticIndexCallback',
      semanticIndexCallback,
      isNamed: true,
    );
    mateUse(
      'semanticIndexOffset',
      semanticIndexOffset,
      isNamed: true,
      defaultValue: 0,
    );
  }

  /// SliverChildListDelegate SliverChildListDelegate.fixed(List<Widget> children, {bool addAutomaticKeepAlives = true, bool addRepaintBoundaries = true, bool addSemanticIndexes = true, int? Function(Widget, int) semanticIndexCallback = _kDefaultSemanticIndexCallback, int semanticIndexOffset = 0})
  SliverChildListDelegate$Mate.fixed(
    /// requiredParameters: List<Widget> children
    List<_i3.Widget> children, {
    /// optionalParameters: {bool addAutomaticKeepAlives = true} , default:processed=BooleanLiteralImpl
    bool addAutomaticKeepAlives = true,

    /// optionalParameters: {bool addRepaintBoundaries = true} , default:processed=BooleanLiteralImpl
    bool addRepaintBoundaries = true,

    /// optionalParameters: {bool addSemanticIndexes = true} , default:processed=BooleanLiteralImpl
    bool addSemanticIndexes = true,

    /// optionalParameters: {int? Function(Widget, int) semanticIndexCallback = _kDefaultSemanticIndexCallback} , default:unprocessed=SimpleIdentifierImpl
    required _i1.SemanticIndexCallback semanticIndexCallback,

    /// optionalParameters: {int semanticIndexOffset = 0} , default:processed=IntegerLiteralImpl
    int semanticIndexOffset = 0,
  }) : super.fixed(
          children,
          addAutomaticKeepAlives: addAutomaticKeepAlives,
          addRepaintBoundaries: addRepaintBoundaries,
          addSemanticIndexes: addSemanticIndexes,
          semanticIndexCallback: semanticIndexCallback,
          semanticIndexOffset: semanticIndexOffset,
        ) {
    mateBuilderName = 'SliverChildListDelegate.fixed';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => SliverChildListDelegate$Mate.fixed(
          p.get('children').value,
          addAutomaticKeepAlives: p.get('addAutomaticKeepAlives').build(),
          addRepaintBoundaries: p.get('addRepaintBoundaries').build(),
          addSemanticIndexes: p.get('addSemanticIndexes').build(),
          semanticIndexCallback: p.get('semanticIndexCallback').build(),
          semanticIndexOffset: p.get('semanticIndexOffset').build(),
        );
    mateUse(
      'children',
      children,
      isNamed: false,
    );
    mateUse(
      'addAutomaticKeepAlives',
      addAutomaticKeepAlives,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'addRepaintBoundaries',
      addRepaintBoundaries,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'addSemanticIndexes',
      addSemanticIndexes,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'semanticIndexCallback',
      semanticIndexCallback,
      isNamed: true,
    );
    mateUse(
      'semanticIndexOffset',
      semanticIndexOffset,
      isNamed: true,
      defaultValue: 0,
    );
  }
}
