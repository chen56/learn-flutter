// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/widgets/scroll_position_with_single_context.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/widgets/scroll_physics.dart';
import 'package:flutter/src/widgets/scroll_context.dart';
import 'dart:core';
import 'package:flutter/src/widgets/scroll_position.dart';

/// class ScrollPositionWithSingleContext extends ScrollPosition implements ScrollActivityDelegate
class ScrollPositionWithSingleContext$Mate extends ScrollPositionWithSingleContext with Mate {
  /// ScrollPositionWithSingleContext ScrollPositionWithSingleContext({required ScrollPhysics physics, required ScrollContext context, double? initialPixels = 0.0, bool keepScrollOffset = true, ScrollPosition? oldPosition, String? debugLabel})
  ScrollPositionWithSingleContext$Mate({
    /// optionalParameters: {required ScrollPhysics physics} , defaultValue:none
    required ScrollPhysics physics,

    /// optionalParameters: {required ScrollContext context} , defaultValue:none
    required ScrollContext context,

    /// optionalParameters: {double? initialPixels = 0.0} , defaultValue:Literal
    double? initialPixels = 0.0,

    /// optionalParameters: {bool keepScrollOffset = true} , defaultValue:Literal
    bool keepScrollOffset = true,

    /// optionalParameters: {ScrollPosition? oldPosition} , defaultValue:none
    ScrollPosition? oldPosition,

    /// optionalParameters: {String? debugLabel} , defaultValue:none
    String? debugLabel,
  }) : super(
          physics: physics,
          context: context,
          initialPixels: initialPixels,
          keepScrollOffset: keepScrollOffset,
          oldPosition: oldPosition,
          debugLabel: debugLabel,
        ) {
    mateCreateName = 'ScrollPositionWithSingleContext';
    matePackageUrl = 'package:flutter/widgets.dart';
    mateBuilder = (p) => ScrollPositionWithSingleContext$Mate(
          physics: p.get('physics').build(),
          context: p.get('context').build(),
          initialPixels: p.get('initialPixels').build(),
          keepScrollOffset: p.get('keepScrollOffset').build(),
          oldPosition: p.get('oldPosition').build(),
          debugLabel: p.get('debugLabel').build(),
        );
    mateUse('physics', physics);
    mateUse('context', context);
    mateUse('initialPixels', initialPixels);
    mateUse('keepScrollOffset', keepScrollOffset);
    mateUse('oldPosition', oldPosition);
    mateUse('debugLabel', debugLabel);
  }
}
