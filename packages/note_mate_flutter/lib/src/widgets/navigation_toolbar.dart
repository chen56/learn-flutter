// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/navigation_toolbar.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/widgets/framework.dart' as _i4;

/// class NavigationToolbar extends StatelessWidget
class NavigationToolbar$Mate extends _i1.NavigationToolbar with _i2.Mate {
  /// NavigationToolbar NavigationToolbar({Key? key, Widget? leading, Widget? middle, Widget? trailing, bool centerMiddle = true, double middleSpacing = kMiddleSpacing})
  NavigationToolbar$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {Widget? leading} , default:none
    _i4.Widget? leading,

    /// optionalParameters: {Widget? middle} , default:none
    _i4.Widget? middle,

    /// optionalParameters: {Widget? trailing} , default:none
    _i4.Widget? trailing,

    /// optionalParameters: {bool centerMiddle = true} , default:processed=BooleanLiteralImpl
    bool centerMiddle = true,

    /// optionalParameters: {double middleSpacing = kMiddleSpacing} , default:unprocessed=SimpleIdentifierImpl
    required double middleSpacing,
  }) : super(
          key: key,
          leading: leading,
          middle: middle,
          trailing: trailing,
          centerMiddle: centerMiddle,
          middleSpacing: middleSpacing,
        ) {
    mateBuilderName = 'NavigationToolbar';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => NavigationToolbar$Mate(
          key: p.get('key').build(),
          leading: p.get('leading').build(),
          middle: p.get('middle').build(),
          trailing: p.get('trailing').build(),
          centerMiddle: p.get('centerMiddle').build(),
          middleSpacing: p.get('middleSpacing').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'leading',
      leading,
      isNamed: true,
    );
    mateUse(
      'middle',
      middle,
      isNamed: true,
    );
    mateUse(
      'trailing',
      trailing,
      isNamed: true,
    );
    mateUse(
      'centerMiddle',
      centerMiddle,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'middleSpacing',
      middleSpacing,
      isNamed: true,
    );
  }
}
