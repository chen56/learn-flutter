// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/scheduler/ticker.dart' as _i1;
import 'package:note/mate_core.dart' as _i2;

/// class Ticker
class Ticker$Mate extends _i1.Ticker with _i2.Mate {
  /// Ticker Ticker(void Function(Duration) _onTick, {String? debugLabel})
  Ticker$Mate(
    /// requiredParameters: void Function(Duration) _onTick
    super._onTick, {
    /// optionalParameters: {String? debugLabel} , default:none
    super.debugLabel,
  })  : mateParams = {
          '_onTick': _i2.BuilderArg<_i1.TickerCallback>(
            name: '_onTick',
            init: _onTick,
            isNamed: false,
          ),
          'debugLabel': _i2.BuilderArg<String?>(
            name: 'debugLabel',
            init: debugLabel,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'Ticker';
    matePackageUrl = 'package:flutter/scheduler.dart';
    mateBuilder = (p) => Ticker$Mate(
          p.get('_onTick').value,
          debugLabel: p.get('debugLabel').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class TickerCanceled implements Exception
class TickerCanceled$Mate extends _i1.TickerCanceled with _i2.Mate {
  /// TickerCanceled TickerCanceled([Ticker? ticker])
  TickerCanceled$Mate(

      /// requiredParameters: [Ticker? ticker]
      super.ticker)
      : mateParams = {
          'ticker': _i2.BuilderArg<_i1.Ticker?>(
            name: 'ticker',
            init: ticker,
            isNamed: false,
          )
        },
        super() {
    mateBuilderName = 'TickerCanceled';
    matePackageUrl = 'package:flutter/animation.dart';
    mateBuilder = (p) => TickerCanceled$Mate(p.get('ticker').value);
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
