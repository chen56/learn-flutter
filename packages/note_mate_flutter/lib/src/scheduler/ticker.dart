// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/scheduler/ticker.dart';
import 'package:note/mate.dart';
import 'dart:core';

/// class Ticker
class Ticker$Mate extends Ticker with Mate {
  /// Ticker Ticker(void Function(Duration) _onTick, {String? debugLabel})
  Ticker$Mate(
    /// requiredParameters: void Function(Duration) _onTick
    TickerCallback _onTick, {
    /// optionalParameters: {String? debugLabel} , defaultValue:none
    String? debugLabel,
  }) : super(
          _onTick,
          debugLabel: debugLabel,
        ) {
    mateCreateName = 'Ticker';
    matePackageUrl = 'package:flutter/scheduler.dart';
    mateBuilder = (p) => Ticker$Mate(
          p.get('_onTick').value,
          debugLabel: p.get('debugLabel').build(),
        );
    mateUse('_onTick', _onTick);
    mateUse('debugLabel', debugLabel);
  }
}

/// class TickerCanceled implements Exception
class TickerCanceled$Mate extends TickerCanceled with Mate {
  /// TickerCanceled TickerCanceled([Ticker? ticker])
  TickerCanceled$Mate(

      /// requiredParameters: [Ticker? ticker]
      Ticker? ticker)
      : super(ticker) {
    mateCreateName = 'TickerCanceled';
    matePackageUrl = 'package:flutter/animation.dart';
    mateBuilder = (p) => TickerCanceled$Mate(p.get('ticker').value);
    mateUse('ticker', ticker);
  }
}
