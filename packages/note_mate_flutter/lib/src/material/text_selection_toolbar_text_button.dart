// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/text_selection_toolbar_text_button.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/widgets/framework.dart' as _i4;
import 'package:flutter/src/painting/edge_insets.dart' as _i5;
import 'dart:ui' as _i6;
import 'package:flutter/src/painting/alignment.dart' as _i7;

/// class TextSelectionToolbarTextButton extends StatelessWidget
class TextSelectionToolbarTextButton$Mate extends _i1.TextSelectionToolbarTextButton with _i2.Mate {
  /// TextSelectionToolbarTextButton TextSelectionToolbarTextButton({Key? key, required Widget child, required EdgeInsets padding, void Function()? onPressed, AlignmentGeometry? alignment})
  TextSelectionToolbarTextButton$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {required Widget child} , default:none
    required _i4.Widget child,

    /// optionalParameters: {required EdgeInsets padding} , default:none
    required _i5.EdgeInsets padding,

    /// optionalParameters: {void Function()? onPressed} , default:none
    _i6.VoidCallback? onPressed,

    /// optionalParameters: {AlignmentGeometry? alignment} , default:none
    _i7.AlignmentGeometry? alignment,
  }) : super(
          key: key,
          child: child,
          padding: padding,
          onPressed: onPressed,
          alignment: alignment,
        ) {
    mateBuilderName = 'TextSelectionToolbarTextButton';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => TextSelectionToolbarTextButton$Mate(
          key: p.get('key').build(),
          child: p.get('child').build(),
          padding: p.get('padding').build(),
          onPressed: p.get('onPressed').build(),
          alignment: p.get('alignment').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'child',
      child,
      isNamed: true,
    );
    mateUse(
      'padding',
      padding,
      isNamed: true,
    );
    mateUse(
      'onPressed',
      onPressed,
      isNamed: true,
    );
    mateUse(
      'alignment',
      alignment,
      isNamed: true,
    );
  }
}
