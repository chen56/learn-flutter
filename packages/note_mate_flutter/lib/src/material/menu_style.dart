// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/menu_style.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/material/material_state.dart' as _i3;
import 'dart:ui' as _i4;
import 'package:flutter/src/painting/edge_insets.dart' as _i5;
import 'package:flutter/src/painting/borders.dart' as _i6;
import 'package:flutter/src/services/mouse_cursor.dart' as _i7;
import 'package:flutter/src/material/theme_data.dart' as _i8;
import 'package:flutter/src/painting/alignment.dart' as _i9;

/// class MenuStyle with Diagnosticable
class MenuStyle$Mate extends _i1.MenuStyle with _i2.Mate {
  /// MenuStyle MenuStyle({MaterialStateProperty<Color?>? backgroundColor, MaterialStateProperty<Color?>? shadowColor, MaterialStateProperty<Color?>? surfaceTintColor, MaterialStateProperty<double?>? elevation, MaterialStateProperty<EdgeInsetsGeometry?>? padding, MaterialStateProperty<Size?>? minimumSize, MaterialStateProperty<Size?>? fixedSize, MaterialStateProperty<Size?>? maximumSize, MaterialStateProperty<BorderSide?>? side, MaterialStateProperty<OutlinedBorder?>? shape, MaterialStateProperty<MouseCursor?>? mouseCursor, VisualDensity? visualDensity, AlignmentGeometry? alignment})
  MenuStyle$Mate({
    /// optionalParameters: {MaterialStateProperty<Color?>? backgroundColor} , default:none
    _i3.MaterialStateProperty<_i4.Color?>? backgroundColor,

    /// optionalParameters: {MaterialStateProperty<Color?>? shadowColor} , default:none
    _i3.MaterialStateProperty<_i4.Color?>? shadowColor,

    /// optionalParameters: {MaterialStateProperty<Color?>? surfaceTintColor} , default:none
    _i3.MaterialStateProperty<_i4.Color?>? surfaceTintColor,

    /// optionalParameters: {MaterialStateProperty<double?>? elevation} , default:none
    _i3.MaterialStateProperty<double?>? elevation,

    /// optionalParameters: {MaterialStateProperty<EdgeInsetsGeometry?>? padding} , default:none
    _i3.MaterialStateProperty<_i5.EdgeInsetsGeometry?>? padding,

    /// optionalParameters: {MaterialStateProperty<Size?>? minimumSize} , default:none
    _i3.MaterialStateProperty<_i4.Size?>? minimumSize,

    /// optionalParameters: {MaterialStateProperty<Size?>? fixedSize} , default:none
    _i3.MaterialStateProperty<_i4.Size?>? fixedSize,

    /// optionalParameters: {MaterialStateProperty<Size?>? maximumSize} , default:none
    _i3.MaterialStateProperty<_i4.Size?>? maximumSize,

    /// optionalParameters: {MaterialStateProperty<BorderSide?>? side} , default:none
    _i3.MaterialStateProperty<_i6.BorderSide?>? side,

    /// optionalParameters: {MaterialStateProperty<OutlinedBorder?>? shape} , default:none
    _i3.MaterialStateProperty<_i6.OutlinedBorder?>? shape,

    /// optionalParameters: {MaterialStateProperty<MouseCursor?>? mouseCursor} , default:none
    _i3.MaterialStateProperty<_i7.MouseCursor?>? mouseCursor,

    /// optionalParameters: {VisualDensity? visualDensity} , default:none
    _i8.VisualDensity? visualDensity,

    /// optionalParameters: {AlignmentGeometry? alignment} , default:none
    _i9.AlignmentGeometry? alignment,
  }) : super(
          backgroundColor: backgroundColor,
          shadowColor: shadowColor,
          surfaceTintColor: surfaceTintColor,
          elevation: elevation,
          padding: padding,
          minimumSize: minimumSize,
          fixedSize: fixedSize,
          maximumSize: maximumSize,
          side: side,
          shape: shape,
          mouseCursor: mouseCursor,
          visualDensity: visualDensity,
          alignment: alignment,
        ) {
    mateBuilderName = 'MenuStyle';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => MenuStyle$Mate(
          backgroundColor: p.get('backgroundColor').build(),
          shadowColor: p.get('shadowColor').build(),
          surfaceTintColor: p.get('surfaceTintColor').build(),
          elevation: p.get('elevation').build(),
          padding: p.get('padding').build(),
          minimumSize: p.get('minimumSize').build(),
          fixedSize: p.get('fixedSize').build(),
          maximumSize: p.get('maximumSize').build(),
          side: p.get('side').build(),
          shape: p.get('shape').build(),
          mouseCursor: p.get('mouseCursor').build(),
          visualDensity: p.get('visualDensity').build(),
          alignment: p.get('alignment').build(),
        );
    mateUse(
      'backgroundColor',
      backgroundColor,
      isNamed: true,
    );
    mateUse(
      'shadowColor',
      shadowColor,
      isNamed: true,
    );
    mateUse(
      'surfaceTintColor',
      surfaceTintColor,
      isNamed: true,
    );
    mateUse(
      'elevation',
      elevation,
      isNamed: true,
    );
    mateUse(
      'padding',
      padding,
      isNamed: true,
    );
    mateUse(
      'minimumSize',
      minimumSize,
      isNamed: true,
    );
    mateUse(
      'fixedSize',
      fixedSize,
      isNamed: true,
    );
    mateUse(
      'maximumSize',
      maximumSize,
      isNamed: true,
    );
    mateUse(
      'side',
      side,
      isNamed: true,
    );
    mateUse(
      'shape',
      shape,
      isNamed: true,
    );
    mateUse(
      'mouseCursor',
      mouseCursor,
      isNamed: true,
    );
    mateUse(
      'visualDensity',
      visualDensity,
      isNamed: true,
    );
    mateUse(
      'alignment',
      alignment,
      isNamed: true,
    );
  }
}
