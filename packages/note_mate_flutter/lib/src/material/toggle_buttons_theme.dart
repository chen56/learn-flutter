// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/toggle_buttons_theme.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/painting/text_style.dart' as _i3;
import 'package:flutter/src/rendering/box.dart' as _i4;
import 'dart:ui' as _i5;
import 'package:flutter/src/painting/border_radius.dart' as _i6;
import 'package:flutter/src/foundation/key.dart' as _i7;
import 'package:flutter/src/widgets/framework.dart' as _i8;

/// class ToggleButtonsThemeData with Diagnosticable
class ToggleButtonsThemeData$Mate extends _i1.ToggleButtonsThemeData with _i2.Mate {
  /// ToggleButtonsThemeData ToggleButtonsThemeData({TextStyle? textStyle, BoxConstraints? constraints, Color? color, Color? selectedColor, Color? disabledColor, Color? fillColor, Color? focusColor, Color? highlightColor, Color? hoverColor, Color? splashColor, Color? borderColor, Color? selectedBorderColor, Color? disabledBorderColor, BorderRadius? borderRadius, double? borderWidth})
  ToggleButtonsThemeData$Mate({
    /// optionalParameters: {TextStyle? textStyle} , default:none
    _i3.TextStyle? textStyle,

    /// optionalParameters: {BoxConstraints? constraints} , default:none
    _i4.BoxConstraints? constraints,

    /// optionalParameters: {Color? color} , default:none
    _i5.Color? color,

    /// optionalParameters: {Color? selectedColor} , default:none
    _i5.Color? selectedColor,

    /// optionalParameters: {Color? disabledColor} , default:none
    _i5.Color? disabledColor,

    /// optionalParameters: {Color? fillColor} , default:none
    _i5.Color? fillColor,

    /// optionalParameters: {Color? focusColor} , default:none
    _i5.Color? focusColor,

    /// optionalParameters: {Color? highlightColor} , default:none
    _i5.Color? highlightColor,

    /// optionalParameters: {Color? hoverColor} , default:none
    _i5.Color? hoverColor,

    /// optionalParameters: {Color? splashColor} , default:none
    _i5.Color? splashColor,

    /// optionalParameters: {Color? borderColor} , default:none
    _i5.Color? borderColor,

    /// optionalParameters: {Color? selectedBorderColor} , default:none
    _i5.Color? selectedBorderColor,

    /// optionalParameters: {Color? disabledBorderColor} , default:none
    _i5.Color? disabledBorderColor,

    /// optionalParameters: {BorderRadius? borderRadius} , default:none
    _i6.BorderRadius? borderRadius,

    /// optionalParameters: {double? borderWidth} , default:none
    double? borderWidth,
  }) : super(
          textStyle: textStyle,
          constraints: constraints,
          color: color,
          selectedColor: selectedColor,
          disabledColor: disabledColor,
          fillColor: fillColor,
          focusColor: focusColor,
          highlightColor: highlightColor,
          hoverColor: hoverColor,
          splashColor: splashColor,
          borderColor: borderColor,
          selectedBorderColor: selectedBorderColor,
          disabledBorderColor: disabledBorderColor,
          borderRadius: borderRadius,
          borderWidth: borderWidth,
        ) {
    mateBuilderName = 'ToggleButtonsThemeData';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => ToggleButtonsThemeData$Mate(
          textStyle: p.get('textStyle').build(),
          constraints: p.get('constraints').build(),
          color: p.get('color').build(),
          selectedColor: p.get('selectedColor').build(),
          disabledColor: p.get('disabledColor').build(),
          fillColor: p.get('fillColor').build(),
          focusColor: p.get('focusColor').build(),
          highlightColor: p.get('highlightColor').build(),
          hoverColor: p.get('hoverColor').build(),
          splashColor: p.get('splashColor').build(),
          borderColor: p.get('borderColor').build(),
          selectedBorderColor: p.get('selectedBorderColor').build(),
          disabledBorderColor: p.get('disabledBorderColor').build(),
          borderRadius: p.get('borderRadius').build(),
          borderWidth: p.get('borderWidth').build(),
        );
    mateUse(
      'textStyle',
      textStyle,
      isNamed: true,
    );
    mateUse(
      'constraints',
      constraints,
      isNamed: true,
    );
    mateUse(
      'color',
      color,
      isNamed: true,
    );
    mateUse(
      'selectedColor',
      selectedColor,
      isNamed: true,
    );
    mateUse(
      'disabledColor',
      disabledColor,
      isNamed: true,
    );
    mateUse(
      'fillColor',
      fillColor,
      isNamed: true,
    );
    mateUse(
      'focusColor',
      focusColor,
      isNamed: true,
    );
    mateUse(
      'highlightColor',
      highlightColor,
      isNamed: true,
    );
    mateUse(
      'hoverColor',
      hoverColor,
      isNamed: true,
    );
    mateUse(
      'splashColor',
      splashColor,
      isNamed: true,
    );
    mateUse(
      'borderColor',
      borderColor,
      isNamed: true,
    );
    mateUse(
      'selectedBorderColor',
      selectedBorderColor,
      isNamed: true,
    );
    mateUse(
      'disabledBorderColor',
      disabledBorderColor,
      isNamed: true,
    );
    mateUse(
      'borderRadius',
      borderRadius,
      isNamed: true,
    );
    mateUse(
      'borderWidth',
      borderWidth,
      isNamed: true,
    );
  }
}

/// class ToggleButtonsTheme extends InheritedTheme
class ToggleButtonsTheme$Mate extends _i1.ToggleButtonsTheme with _i2.Mate {
  /// ToggleButtonsTheme ToggleButtonsTheme({Key? key, required ToggleButtonsThemeData data, required Widget child})
  ToggleButtonsTheme$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i7.Key? key,

    /// optionalParameters: {required ToggleButtonsThemeData data} , default:none
    required _i1.ToggleButtonsThemeData data,

    /// optionalParameters: {required Widget child} , default:none
    required _i8.Widget child,
  }) : super(
          key: key,
          data: data,
          child: child,
        ) {
    mateBuilderName = 'ToggleButtonsTheme';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => ToggleButtonsTheme$Mate(
          key: p.get('key').build(),
          data: p.get('data').build(),
          child: p.get('child').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'data',
      data,
      isNamed: true,
    );
    mateUse(
      'child',
      child,
      isNamed: true,
    );
  }
}
