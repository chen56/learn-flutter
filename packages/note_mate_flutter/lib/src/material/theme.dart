// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/theme.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/material/theme_data.dart' as _i4;
import 'package:flutter/src/widgets/framework.dart' as _i5;
import 'package:flutter/src/animation/curves.dart' as _i6;
import 'package:flutter/animation.dart' as _i7;
import 'dart:ui' as _i8;

/// class Theme extends StatelessWidget
class Theme$Mate extends _i1.Theme with _i2.Mate {
  /// Theme Theme({Key? key, required ThemeData data, required Widget child})
  Theme$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {required ThemeData data} , default:none
    required _i4.ThemeData data,

    /// optionalParameters: {required Widget child} , default:none
    required _i5.Widget child,
  }) : super(
          key: key,
          data: data,
          child: child,
        ) {
    mateBuilderName = 'Theme';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => Theme$Mate(
          key: p.get('key').build(),
          data: p.get('data').build(),
          child: p.get('child').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'data',
      data,
      isNamed: true,
    );
    mateUse(
      'child',
      child,
      isNamed: true,
    );
  }
}

/// class ThemeDataTween extends Tween<ThemeData>
class ThemeDataTween$Mate extends _i1.ThemeDataTween with _i2.Mate {
  /// ThemeDataTween ThemeDataTween({ThemeData? begin, ThemeData? end})
  ThemeDataTween$Mate({
    /// optionalParameters: {ThemeData? begin} , default:none
    _i4.ThemeData? begin,

    /// optionalParameters: {ThemeData? end} , default:none
    _i4.ThemeData? end,
  }) : super(
          begin: begin,
          end: end,
        ) {
    mateBuilderName = 'ThemeDataTween';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => ThemeDataTween$Mate(
          begin: p.get('begin').build(),
          end: p.get('end').build(),
        );
    mateUse(
      'begin',
      begin,
      isNamed: true,
    );
    mateUse(
      'end',
      end,
      isNamed: true,
    );
  }
}

/// class AnimatedTheme extends ImplicitlyAnimatedWidget
class AnimatedTheme$Mate extends _i1.AnimatedTheme with _i2.Mate {
  /// AnimatedTheme AnimatedTheme({Key? key, required ThemeData data, Curve curve = Curves.linear, Duration duration = kThemeAnimationDuration, void Function()? onEnd, required Widget child})
  AnimatedTheme$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {required ThemeData data} , default:none
    required _i4.ThemeData data,

    /// optionalParameters: {Curve curve = Curves.linear} , default:processed=PrefixedIdentifierImpl
    _i6.Curve curve = _i7.Curves.linear,

    /// optionalParameters: {Duration duration = kThemeAnimationDuration} , default:unprocessed=SimpleIdentifierImpl
    required Duration duration,

    /// optionalParameters: {void Function()? onEnd} , default:none
    _i8.VoidCallback? onEnd,

    /// optionalParameters: {required Widget child} , default:none
    required _i5.Widget child,
  }) : super(
          key: key,
          data: data,
          curve: curve,
          duration: duration,
          onEnd: onEnd,
          child: child,
        ) {
    mateBuilderName = 'AnimatedTheme';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => AnimatedTheme$Mate(
          key: p.get('key').build(),
          data: p.get('data').build(),
          curve: p.get('curve').build(),
          duration: p.get('duration').build(),
          onEnd: p.get('onEnd').build(),
          child: p.get('child').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'data',
      data,
      isNamed: true,
    );
    mateUse(
      'curve',
      curve,
      isNamed: true,
      defaultValue: _i7.Curves.linear,
    );
    mateUse(
      'duration',
      duration,
      isNamed: true,
    );
    mateUse(
      'onEnd',
      onEnd,
      isNamed: true,
    );
    mateUse(
      'child',
      child,
      isNamed: true,
    );
  }
}
