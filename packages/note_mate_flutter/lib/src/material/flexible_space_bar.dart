// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/flexible_space_bar.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'dart:core';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/material.dart';

/// class FlexibleSpaceBar extends StatefulWidget
class FlexibleSpaceBar$Mate extends FlexibleSpaceBar with Mate {
  /// FlexibleSpaceBar FlexibleSpaceBar({Key? key, Widget? title, Widget? background, bool? centerTitle, EdgeInsetsGeometry? titlePadding, CollapseMode collapseMode = CollapseMode.parallax, List<StretchMode> stretchModes = const <StretchMode>[StretchMode.zoomBackground], double expandedTitleScale = 1.5})
  FlexibleSpaceBar$Mate({
    /// optionalParameters: {Key? key} , defaultValue:none
    Key? key,

    /// optionalParameters: {Widget? title} , defaultValue:none
    Widget? title,

    /// optionalParameters: {Widget? background} , defaultValue:none
    Widget? background,

    /// optionalParameters: {bool? centerTitle} , defaultValue:none
    bool? centerTitle,

    /// optionalParameters: {EdgeInsetsGeometry? titlePadding} , defaultValue:none
    EdgeInsetsGeometry? titlePadding,

    /// optionalParameters: {CollapseMode collapseMode = CollapseMode.parallax} , defaultValue:PrefixedIdentifier
    CollapseMode collapseMode = CollapseMode.parallax,

    /// optionalParameters: {List<StretchMode> stretchModes = const <StretchMode>[StretchMode.zoomBackground]} , defaultValue:unprocessed
    required List<StretchMode> stretchModes,

    /// optionalParameters: {double expandedTitleScale = 1.5} , defaultValue:Literal
    double expandedTitleScale = 1.5,
  }) : super(
          key: key,
          title: title,
          background: background,
          centerTitle: centerTitle,
          titlePadding: titlePadding,
          collapseMode: collapseMode,
          stretchModes: stretchModes,
          expandedTitleScale: expandedTitleScale,
        ) {
    mateCreateName = 'FlexibleSpaceBar';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => FlexibleSpaceBar$Mate(
          key: p.get('key').build(),
          title: p.get('title').build(),
          background: p.get('background').build(),
          centerTitle: p.get('centerTitle').build(),
          titlePadding: p.get('titlePadding').build(),
          collapseMode: p.get('collapseMode').build(),
          stretchModes: p.get('stretchModes').build(),
          expandedTitleScale: p.get('expandedTitleScale').build(),
        );
    mateUse('key', key);
    mateUse('title', title);
    mateUse('background', background);
    mateUse('centerTitle', centerTitle);
    mateUse('titlePadding', titlePadding);
    mateUse('collapseMode', collapseMode);
    mateUse('stretchModes', stretchModes);
    mateUse('expandedTitleScale', expandedTitleScale);
  }
}

/// class FlexibleSpaceBarSettings extends InheritedWidget
class FlexibleSpaceBarSettings$Mate extends FlexibleSpaceBarSettings with Mate {
  /// FlexibleSpaceBarSettings FlexibleSpaceBarSettings({Key? key, required double toolbarOpacity, required double minExtent, required double maxExtent, required double currentExtent, required Widget child, bool? isScrolledUnder})
  FlexibleSpaceBarSettings$Mate({
    /// optionalParameters: {Key? key} , defaultValue:none
    Key? key,

    /// optionalParameters: {required double toolbarOpacity} , defaultValue:none
    required double toolbarOpacity,

    /// optionalParameters: {required double minExtent} , defaultValue:none
    required double minExtent,

    /// optionalParameters: {required double maxExtent} , defaultValue:none
    required double maxExtent,

    /// optionalParameters: {required double currentExtent} , defaultValue:none
    required double currentExtent,

    /// optionalParameters: {required Widget child} , defaultValue:none
    required Widget child,

    /// optionalParameters: {bool? isScrolledUnder} , defaultValue:none
    bool? isScrolledUnder,
  }) : super(
          key: key,
          toolbarOpacity: toolbarOpacity,
          minExtent: minExtent,
          maxExtent: maxExtent,
          currentExtent: currentExtent,
          child: child,
          isScrolledUnder: isScrolledUnder,
        ) {
    mateCreateName = 'FlexibleSpaceBarSettings';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => FlexibleSpaceBarSettings$Mate(
          key: p.get('key').build(),
          toolbarOpacity: p.get('toolbarOpacity').build(),
          minExtent: p.get('minExtent').build(),
          maxExtent: p.get('maxExtent').build(),
          currentExtent: p.get('currentExtent').build(),
          child: p.get('child').build(),
          isScrolledUnder: p.get('isScrolledUnder').build(),
        );
    mateUse('key', key);
    mateUse('toolbarOpacity', toolbarOpacity);
    mateUse('minExtent', minExtent);
    mateUse('maxExtent', maxExtent);
    mateUse('currentExtent', currentExtent);
    mateUse('child', child);
    mateUse('isScrolledUnder', isScrolledUnder);
  }
}
