// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/user_accounts_drawer_header.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/painting/decoration.dart' as _i4;
import 'package:flutter/src/painting/edge_insets.dart' as _i5;
import 'package:flutter/src/widgets/framework.dart' as _i6;
import 'dart:ui' as _i7;
import 'package:flutter/material.dart' as _i8;

/// class UserAccountsDrawerHeader extends StatefulWidget
class UserAccountsDrawerHeader$Mate extends _i1.UserAccountsDrawerHeader with _i2.Mate {
  /// UserAccountsDrawerHeader UserAccountsDrawerHeader({Key? key, Decoration? decoration, EdgeInsetsGeometry? margin = const EdgeInsets.only(bottom: 8.0), Widget? currentAccountPicture, List<Widget>? otherAccountsPictures, Size currentAccountPictureSize = const Size.square(72.0), Size otherAccountsPicturesSize = const Size.square(40.0), required Widget? accountName, required Widget? accountEmail, void Function()? onDetailsPressed, Color arrowColor = Colors.white})
  UserAccountsDrawerHeader$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {Decoration? decoration} , default:none
    _i4.Decoration? decoration,

    /// optionalParameters: {EdgeInsetsGeometry? margin = const EdgeInsets.only(bottom: 8.0)} , default:unprocessed=InstanceCreationExpressionImpl
    required _i5.EdgeInsetsGeometry? margin,

    /// optionalParameters: {Widget? currentAccountPicture} , default:none
    _i6.Widget? currentAccountPicture,

    /// optionalParameters: {List<Widget>? otherAccountsPictures} , default:none
    List<_i6.Widget>? otherAccountsPictures,

    /// optionalParameters: {Size currentAccountPictureSize = const Size.square(72.0)} , default:unprocessed=InstanceCreationExpressionImpl
    required _i7.Size currentAccountPictureSize,

    /// optionalParameters: {Size otherAccountsPicturesSize = const Size.square(40.0)} , default:unprocessed=InstanceCreationExpressionImpl
    required _i7.Size otherAccountsPicturesSize,

    /// optionalParameters: {required Widget? accountName} , default:none
    required _i6.Widget? accountName,

    /// optionalParameters: {required Widget? accountEmail} , default:none
    required _i6.Widget? accountEmail,

    /// optionalParameters: {void Function()? onDetailsPressed} , default:none
    _i7.VoidCallback? onDetailsPressed,

    /// optionalParameters: {Color arrowColor = Colors.white} , default:processed=PrefixedIdentifierImpl
    _i7.Color arrowColor = _i8.Colors.white,
  }) : super(
          key: key,
          decoration: decoration,
          margin: margin,
          currentAccountPicture: currentAccountPicture,
          otherAccountsPictures: otherAccountsPictures,
          currentAccountPictureSize: currentAccountPictureSize,
          otherAccountsPicturesSize: otherAccountsPicturesSize,
          accountName: accountName,
          accountEmail: accountEmail,
          onDetailsPressed: onDetailsPressed,
          arrowColor: arrowColor,
        ) {
    mateBuilderName = 'UserAccountsDrawerHeader';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => UserAccountsDrawerHeader$Mate(
          key: p.get('key').build(),
          decoration: p.get('decoration').build(),
          margin: p.get('margin').build(),
          currentAccountPicture: p.get('currentAccountPicture').build(),
          otherAccountsPictures: p.get('otherAccountsPictures').build(),
          currentAccountPictureSize: p.get('currentAccountPictureSize').build(),
          otherAccountsPicturesSize: p.get('otherAccountsPicturesSize').build(),
          accountName: p.get('accountName').build(),
          accountEmail: p.get('accountEmail').build(),
          onDetailsPressed: p.get('onDetailsPressed').build(),
          arrowColor: p.get('arrowColor').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'decoration',
      decoration,
      isNamed: true,
    );
    mateUse(
      'margin',
      margin,
      isNamed: true,
    );
    mateUse(
      'currentAccountPicture',
      currentAccountPicture,
      isNamed: true,
    );
    mateUse(
      'otherAccountsPictures',
      otherAccountsPictures,
      isNamed: true,
    );
    mateUse(
      'currentAccountPictureSize',
      currentAccountPictureSize,
      isNamed: true,
    );
    mateUse(
      'otherAccountsPicturesSize',
      otherAccountsPicturesSize,
      isNamed: true,
    );
    mateUse(
      'accountName',
      accountName,
      isNamed: true,
    );
    mateUse(
      'accountEmail',
      accountEmail,
      isNamed: true,
    );
    mateUse(
      'onDetailsPressed',
      onDetailsPressed,
      isNamed: true,
    );
    mateUse(
      'arrowColor',
      arrowColor,
      isNamed: true,
      defaultValue: _i8.Colors.white,
    );
  }
}
