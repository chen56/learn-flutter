// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/ink_splash.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/material/material.dart' as _i3;
import 'package:flutter/src/rendering/box.dart' as _i4;
import 'dart:ui' as _i5;
import 'package:flutter/src/painting/border_radius.dart' as _i6;
import 'package:flutter/src/painting/borders.dart' as _i7;

/// class InkSplash extends InteractiveInkFeature
class InkSplash$Mate extends _i1.InkSplash with _i2.Mate {
  /// InkSplash InkSplash({required MaterialInkController controller, required RenderBox referenceBox, required TextDirection textDirection, Offset? position, required Color color, bool containedInkWell = false, Rect Function()? rectCallback, BorderRadius? borderRadius, ShapeBorder? customBorder, double? radius, void Function()? onRemoved})
  InkSplash$Mate({
    /// optionalParameters: {required MaterialInkController controller} , default:none
    required _i3.MaterialInkController controller,

    /// optionalParameters: {required RenderBox referenceBox} , default:none
    required _i4.RenderBox referenceBox,

    /// optionalParameters: {required TextDirection textDirection} , default:none
    required _i5.TextDirection textDirection,

    /// optionalParameters: {Offset? position} , default:none
    _i5.Offset? position,

    /// optionalParameters: {required Color color} , default:none
    required _i5.Color color,

    /// optionalParameters: {bool containedInkWell = false} , default:processed=BooleanLiteralImpl
    bool containedInkWell = false,

    /// optionalParameters: {Rect Function()? rectCallback} , default:none
    _i3.RectCallback? rectCallback,

    /// optionalParameters: {BorderRadius? borderRadius} , default:none
    _i6.BorderRadius? borderRadius,

    /// optionalParameters: {ShapeBorder? customBorder} , default:none
    _i7.ShapeBorder? customBorder,

    /// optionalParameters: {double? radius} , default:none
    double? radius,

    /// optionalParameters: {void Function()? onRemoved} , default:none
    _i5.VoidCallback? onRemoved,
  }) : super(
          controller: controller,
          referenceBox: referenceBox,
          textDirection: textDirection,
          position: position,
          color: color,
          containedInkWell: containedInkWell,
          rectCallback: rectCallback,
          borderRadius: borderRadius,
          customBorder: customBorder,
          radius: radius,
          onRemoved: onRemoved,
        ) {
    mateBuilderName = 'InkSplash';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => InkSplash$Mate(
          controller: p.get('controller').build(),
          referenceBox: p.get('referenceBox').build(),
          textDirection: p.get('textDirection').build(),
          position: p.get('position').build(),
          color: p.get('color').build(),
          containedInkWell: p.get('containedInkWell').build(),
          rectCallback: p.get('rectCallback').build(),
          borderRadius: p.get('borderRadius').build(),
          customBorder: p.get('customBorder').build(),
          radius: p.get('radius').build(),
          onRemoved: p.get('onRemoved').build(),
        );
    mateUse(
      'controller',
      controller,
      isNamed: true,
    );
    mateUse(
      'referenceBox',
      referenceBox,
      isNamed: true,
    );
    mateUse(
      'textDirection',
      textDirection,
      isNamed: true,
    );
    mateUse(
      'position',
      position,
      isNamed: true,
    );
    mateUse(
      'color',
      color,
      isNamed: true,
    );
    mateUse(
      'containedInkWell',
      containedInkWell,
      isNamed: true,
      defaultValue: false,
    );
    mateUse(
      'rectCallback',
      rectCallback,
      isNamed: true,
    );
    mateUse(
      'borderRadius',
      borderRadius,
      isNamed: true,
    );
    mateUse(
      'customBorder',
      customBorder,
      isNamed: true,
    );
    mateUse(
      'radius',
      radius,
      isNamed: true,
    );
    mateUse(
      'onRemoved',
      onRemoved,
      isNamed: true,
    );
  }
}
