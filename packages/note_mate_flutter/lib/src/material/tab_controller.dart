// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/tab_controller.dart';
import 'package:note/mate.dart';
import 'dart:core';
import 'package:flutter/src/scheduler/ticker.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';

/// class TabController extends ChangeNotifier
class TabController$Mate extends TabController with Mate {
  /// TabController TabController({int initialIndex = 0, Duration? animationDuration, required int length, required TickerProvider vsync})
  TabController$Mate({
    /// optionalParameters: {int initialIndex = 0} , hasDefaultValue:true, defaultValueCode:0
    required int initialIndex,

    /// optionalParameters: {Duration? animationDuration} , hasDefaultValue:false, defaultValueCode:null
    Duration? animationDuration,

    /// optionalParameters: {required int length} , hasDefaultValue:false, defaultValueCode:null
    required int length,

    /// optionalParameters: {required TickerProvider vsync} , hasDefaultValue:false, defaultValueCode:null
    required TickerProvider vsync,
  }) : super(
          initialIndex: initialIndex,
          animationDuration: animationDuration,
          length: length,
          vsync: vsync,
        ) {
    mateBuilder = (p) => TabController$Mate(
          initialIndex: p.get('initialIndex').build(),
          animationDuration: p.get('animationDuration').build(),
          length: p.get('length').build(),
          vsync: p.get('vsync').build(),
        );
    matePut('initialIndex', initialIndex);
    matePut('animationDuration', animationDuration);
    matePut('length', length);
    matePut('vsync', vsync);
  }
}

/// class DefaultTabController extends StatefulWidget
class DefaultTabController$Mate extends DefaultTabController with Mate {
  /// DefaultTabController DefaultTabController({Key? key, required int length, int initialIndex = 0, required Widget child, Duration? animationDuration})
  DefaultTabController$Mate({
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {required int length} , hasDefaultValue:false, defaultValueCode:null
    required int length,

    /// optionalParameters: {int initialIndex = 0} , hasDefaultValue:true, defaultValueCode:0
    required int initialIndex,

    /// optionalParameters: {required Widget child} , hasDefaultValue:false, defaultValueCode:null
    required Widget child,

    /// optionalParameters: {Duration? animationDuration} , hasDefaultValue:false, defaultValueCode:null
    Duration? animationDuration,
  }) : super(
          key: key,
          length: length,
          initialIndex: initialIndex,
          child: child,
          animationDuration: animationDuration,
        ) {
    mateBuilder = (p) => DefaultTabController$Mate(
          key: p.get('key').build(),
          length: p.get('length').build(),
          initialIndex: p.get('initialIndex').build(),
          child: p.get('child').build(),
          animationDuration: p.get('animationDuration').build(),
        );
    matePut('key', key);
    matePut('length', length);
    matePut('initialIndex', initialIndex);
    matePut('child', child);
    matePut('animationDuration', animationDuration);
  }
}
