// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/navigation_bar.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'dart:core';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/foundation/basic_types.dart';
import 'dart:ui';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/animation/animation.dart';
import 'package:flutter/src/painting/border_radius.dart';

/// class NavigationBar extends StatelessWidget
class NavigationBar$Mate extends NavigationBar with Mate {
  /// NavigationBar NavigationBar({Key? key, Duration? animationDuration, int selectedIndex = 0, required List<Widget> destinations, void Function(int)? onDestinationSelected, Color? backgroundColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, Color? indicatorColor, ShapeBorder? indicatorShape, double? height, NavigationDestinationLabelBehavior? labelBehavior})
  NavigationBar$Mate({
    /// optionalParameters: {Key? key} , defaultValue:none
    Key? key,

    /// optionalParameters: {Duration? animationDuration} , defaultValue:none
    Duration? animationDuration,

    /// optionalParameters: {int selectedIndex = 0} , defaultValue:Literal
    int selectedIndex = 0,

    /// optionalParameters: {required List<Widget> destinations} , defaultValue:none
    required List<Widget> destinations,

    /// optionalParameters: {void Function(int)? onDestinationSelected} , defaultValue:none
    ValueChanged<int>? onDestinationSelected,

    /// optionalParameters: {Color? backgroundColor} , defaultValue:none
    Color? backgroundColor,

    /// optionalParameters: {double? elevation} , defaultValue:none
    double? elevation,

    /// optionalParameters: {Color? shadowColor} , defaultValue:none
    Color? shadowColor,

    /// optionalParameters: {Color? surfaceTintColor} , defaultValue:none
    Color? surfaceTintColor,

    /// optionalParameters: {Color? indicatorColor} , defaultValue:none
    Color? indicatorColor,

    /// optionalParameters: {ShapeBorder? indicatorShape} , defaultValue:none
    ShapeBorder? indicatorShape,

    /// optionalParameters: {double? height} , defaultValue:none
    double? height,

    /// optionalParameters: {NavigationDestinationLabelBehavior? labelBehavior} , defaultValue:none
    NavigationDestinationLabelBehavior? labelBehavior,
  }) : super(
          key: key,
          animationDuration: animationDuration,
          selectedIndex: selectedIndex,
          destinations: destinations,
          onDestinationSelected: onDestinationSelected,
          backgroundColor: backgroundColor,
          elevation: elevation,
          shadowColor: shadowColor,
          surfaceTintColor: surfaceTintColor,
          indicatorColor: indicatorColor,
          indicatorShape: indicatorShape,
          height: height,
          labelBehavior: labelBehavior,
        ) {
    mateCreateName = 'NavigationBar';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => NavigationBar$Mate(
          key: p.get('key').build(),
          animationDuration: p.get('animationDuration').build(),
          selectedIndex: p.get('selectedIndex').build(),
          destinations: p.get('destinations').build(),
          onDestinationSelected: p.get('onDestinationSelected').build(),
          backgroundColor: p.get('backgroundColor').build(),
          elevation: p.get('elevation').build(),
          shadowColor: p.get('shadowColor').build(),
          surfaceTintColor: p.get('surfaceTintColor').build(),
          indicatorColor: p.get('indicatorColor').build(),
          indicatorShape: p.get('indicatorShape').build(),
          height: p.get('height').build(),
          labelBehavior: p.get('labelBehavior').build(),
        );
    mateUse('key', key, isNamed: true);
    mateUse('animationDuration', animationDuration, isNamed: true);
    mateUse('selectedIndex', selectedIndex, isNamed: true);
    mateUseList('destinations', destinations, isNamed: true);
    mateUse('onDestinationSelected', onDestinationSelected, isNamed: true);
    mateUse('backgroundColor', backgroundColor, isNamed: true);
    mateUse('elevation', elevation, isNamed: true);
    mateUse('shadowColor', shadowColor, isNamed: true);
    mateUse('surfaceTintColor', surfaceTintColor, isNamed: true);
    mateUse('indicatorColor', indicatorColor, isNamed: true);
    mateUse('indicatorShape', indicatorShape, isNamed: true);
    mateUse('height', height, isNamed: true);
    mateUse('labelBehavior', labelBehavior, isNamed: true);
  }
}

/// class NavigationDestination extends StatelessWidget
class NavigationDestination$Mate extends NavigationDestination with Mate {
  /// NavigationDestination NavigationDestination({Key? key, required Widget icon, Widget? selectedIcon, required String label, String? tooltip})
  NavigationDestination$Mate({
    /// optionalParameters: {Key? key} , defaultValue:none
    Key? key,

    /// optionalParameters: {required Widget icon} , defaultValue:none
    required Widget icon,

    /// optionalParameters: {Widget? selectedIcon} , defaultValue:none
    Widget? selectedIcon,

    /// optionalParameters: {required String label} , defaultValue:none
    required String label,

    /// optionalParameters: {String? tooltip} , defaultValue:none
    String? tooltip,
  }) : super(
          key: key,
          icon: icon,
          selectedIcon: selectedIcon,
          label: label,
          tooltip: tooltip,
        ) {
    mateCreateName = 'NavigationDestination';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => NavigationDestination$Mate(
          key: p.get('key').build(),
          icon: p.get('icon').build(),
          selectedIcon: p.get('selectedIcon').build(),
          label: p.get('label').build(),
          tooltip: p.get('tooltip').build(),
        );
    mateUse('key', key, isNamed: true);
    mateUse('icon', icon, isNamed: true);
    mateUse('selectedIcon', selectedIcon, isNamed: true);
    mateUse('label', label, isNamed: true);
    mateUse('tooltip', tooltip, isNamed: true);
  }
}

/// class NavigationIndicator extends StatelessWidget
class NavigationIndicator$Mate extends NavigationIndicator with Mate {
  /// NavigationIndicator NavigationIndicator({Key? key, required Animation<double> animation, Color? color, double width = _kIndicatorWidth, double height = _kIndicatorHeight, BorderRadius borderRadius = const BorderRadius.all(Radius.circular(16)), ShapeBorder? shape})
  NavigationIndicator$Mate({
    /// optionalParameters: {Key? key} , defaultValue:none
    Key? key,

    /// optionalParameters: {required Animation<double> animation} , defaultValue:none
    required Animation<double> animation,

    /// optionalParameters: {Color? color} , defaultValue:none
    Color? color,

    /// optionalParameters: {double width = _kIndicatorWidth} , defaultValue:unprocessed
    required double width,

    /// optionalParameters: {double height = _kIndicatorHeight} , defaultValue:unprocessed
    required double height,

    /// optionalParameters: {BorderRadius borderRadius = const BorderRadius.all(Radius.circular(16))} , defaultValue:unprocessed
    required BorderRadius borderRadius,

    /// optionalParameters: {ShapeBorder? shape} , defaultValue:none
    ShapeBorder? shape,
  }) : super(
          key: key,
          animation: animation,
          color: color,
          width: width,
          height: height,
          borderRadius: borderRadius,
          shape: shape,
        ) {
    mateCreateName = 'NavigationIndicator';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => NavigationIndicator$Mate(
          key: p.get('key').build(),
          animation: p.get('animation').build(),
          color: p.get('color').build(),
          width: p.get('width').build(),
          height: p.get('height').build(),
          borderRadius: p.get('borderRadius').build(),
          shape: p.get('shape').build(),
        );
    mateUse('key', key, isNamed: true);
    mateUse('animation', animation, isNamed: true);
    mateUse('color', color, isNamed: true);
    mateUse('width', width, isNamed: true);
    mateUse('height', height, isNamed: true);
    mateUse('borderRadius', borderRadius, isNamed: true);
    mateUse('shape', shape, isNamed: true);
  }
}
