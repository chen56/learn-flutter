// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/time_picker_theme.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'dart:ui' as _i3;
import 'package:flutter/src/material/button_style.dart' as _i4;
import 'package:flutter/src/painting/borders.dart' as _i5;
import 'package:flutter/src/painting/text_style.dart' as _i6;
import 'package:flutter/src/material/input_decorator.dart' as _i7;
import 'package:flutter/src/painting/edge_insets.dart' as _i8;
import 'package:flutter/src/foundation/key.dart' as _i9;
import 'package:flutter/src/widgets/framework.dart' as _i10;

/// class TimePickerThemeData with Diagnosticable
class TimePickerThemeData$Mate extends _i1.TimePickerThemeData with _i2.Mate {
  /// TimePickerThemeData TimePickerThemeData({Color? backgroundColor, ButtonStyle? cancelButtonStyle, ButtonStyle? confirmButtonStyle, BorderSide? dayPeriodBorderSide, Color? dayPeriodColor, OutlinedBorder? dayPeriodShape, Color? dayPeriodTextColor, TextStyle? dayPeriodTextStyle, Color? dialBackgroundColor, Color? dialHandColor, Color? dialTextColor, TextStyle? dialTextStyle, double? elevation, Color? entryModeIconColor, TextStyle? helpTextStyle, Color? hourMinuteColor, ShapeBorder? hourMinuteShape, Color? hourMinuteTextColor, TextStyle? hourMinuteTextStyle, InputDecorationTheme? inputDecorationTheme, EdgeInsetsGeometry? padding, ShapeBorder? shape})
  TimePickerThemeData$Mate({
    /// optionalParameters: {Color? backgroundColor} , default:none
    super.backgroundColor,

    /// optionalParameters: {ButtonStyle? cancelButtonStyle} , default:none
    super.cancelButtonStyle,

    /// optionalParameters: {ButtonStyle? confirmButtonStyle} , default:none
    super.confirmButtonStyle,

    /// optionalParameters: {BorderSide? dayPeriodBorderSide} , default:none
    super.dayPeriodBorderSide,

    /// optionalParameters: {Color? dayPeriodColor} , default:none
    super.dayPeriodColor,

    /// optionalParameters: {OutlinedBorder? dayPeriodShape} , default:none
    super.dayPeriodShape,

    /// optionalParameters: {Color? dayPeriodTextColor} , default:none
    super.dayPeriodTextColor,

    /// optionalParameters: {TextStyle? dayPeriodTextStyle} , default:none
    super.dayPeriodTextStyle,

    /// optionalParameters: {Color? dialBackgroundColor} , default:none
    super.dialBackgroundColor,

    /// optionalParameters: {Color? dialHandColor} , default:none
    super.dialHandColor,

    /// optionalParameters: {Color? dialTextColor} , default:none
    super.dialTextColor,

    /// optionalParameters: {TextStyle? dialTextStyle} , default:none
    super.dialTextStyle,

    /// optionalParameters: {double? elevation} , default:none
    super.elevation,

    /// optionalParameters: {Color? entryModeIconColor} , default:none
    super.entryModeIconColor,

    /// optionalParameters: {TextStyle? helpTextStyle} , default:none
    super.helpTextStyle,

    /// optionalParameters: {Color? hourMinuteColor} , default:none
    super.hourMinuteColor,

    /// optionalParameters: {ShapeBorder? hourMinuteShape} , default:none
    super.hourMinuteShape,

    /// optionalParameters: {Color? hourMinuteTextColor} , default:none
    super.hourMinuteTextColor,

    /// optionalParameters: {TextStyle? hourMinuteTextStyle} , default:none
    super.hourMinuteTextStyle,

    /// optionalParameters: {InputDecorationTheme? inputDecorationTheme} , default:none
    super.inputDecorationTheme,

    /// optionalParameters: {EdgeInsetsGeometry? padding} , default:none
    super.padding,

    /// optionalParameters: {ShapeBorder? shape} , default:none
    super.shape,
  })  : mateParams = {
          'backgroundColor': _i2.BuilderArg<_i3.Color?>(
            name: 'backgroundColor',
            init: backgroundColor,
            isNamed: true,
          ),
          'cancelButtonStyle': _i2.BuilderArg<_i4.ButtonStyle?>(
            name: 'cancelButtonStyle',
            init: cancelButtonStyle,
            isNamed: true,
          ),
          'confirmButtonStyle': _i2.BuilderArg<_i4.ButtonStyle?>(
            name: 'confirmButtonStyle',
            init: confirmButtonStyle,
            isNamed: true,
          ),
          'dayPeriodBorderSide': _i2.BuilderArg<_i5.BorderSide?>(
            name: 'dayPeriodBorderSide',
            init: dayPeriodBorderSide,
            isNamed: true,
          ),
          'dayPeriodColor': _i2.BuilderArg<_i3.Color?>(
            name: 'dayPeriodColor',
            init: dayPeriodColor,
            isNamed: true,
          ),
          'dayPeriodShape': _i2.BuilderArg<_i5.OutlinedBorder?>(
            name: 'dayPeriodShape',
            init: dayPeriodShape,
            isNamed: true,
          ),
          'dayPeriodTextColor': _i2.BuilderArg<_i3.Color?>(
            name: 'dayPeriodTextColor',
            init: dayPeriodTextColor,
            isNamed: true,
          ),
          'dayPeriodTextStyle': _i2.BuilderArg<_i6.TextStyle?>(
            name: 'dayPeriodTextStyle',
            init: dayPeriodTextStyle,
            isNamed: true,
          ),
          'dialBackgroundColor': _i2.BuilderArg<_i3.Color?>(
            name: 'dialBackgroundColor',
            init: dialBackgroundColor,
            isNamed: true,
          ),
          'dialHandColor': _i2.BuilderArg<_i3.Color?>(
            name: 'dialHandColor',
            init: dialHandColor,
            isNamed: true,
          ),
          'dialTextColor': _i2.BuilderArg<_i3.Color?>(
            name: 'dialTextColor',
            init: dialTextColor,
            isNamed: true,
          ),
          'dialTextStyle': _i2.BuilderArg<_i6.TextStyle?>(
            name: 'dialTextStyle',
            init: dialTextStyle,
            isNamed: true,
          ),
          'elevation': _i2.BuilderArg<double?>(
            name: 'elevation',
            init: elevation,
            isNamed: true,
          ),
          'entryModeIconColor': _i2.BuilderArg<_i3.Color?>(
            name: 'entryModeIconColor',
            init: entryModeIconColor,
            isNamed: true,
          ),
          'helpTextStyle': _i2.BuilderArg<_i6.TextStyle?>(
            name: 'helpTextStyle',
            init: helpTextStyle,
            isNamed: true,
          ),
          'hourMinuteColor': _i2.BuilderArg<_i3.Color?>(
            name: 'hourMinuteColor',
            init: hourMinuteColor,
            isNamed: true,
          ),
          'hourMinuteShape': _i2.BuilderArg<_i5.ShapeBorder?>(
            name: 'hourMinuteShape',
            init: hourMinuteShape,
            isNamed: true,
          ),
          'hourMinuteTextColor': _i2.BuilderArg<_i3.Color?>(
            name: 'hourMinuteTextColor',
            init: hourMinuteTextColor,
            isNamed: true,
          ),
          'hourMinuteTextStyle': _i2.BuilderArg<_i6.TextStyle?>(
            name: 'hourMinuteTextStyle',
            init: hourMinuteTextStyle,
            isNamed: true,
          ),
          'inputDecorationTheme': _i2.BuilderArg<_i7.InputDecorationTheme?>(
            name: 'inputDecorationTheme',
            init: inputDecorationTheme,
            isNamed: true,
          ),
          'padding': _i2.BuilderArg<_i8.EdgeInsetsGeometry?>(
            name: 'padding',
            init: padding,
            isNamed: true,
          ),
          'shape': _i2.BuilderArg<_i5.ShapeBorder?>(
            name: 'shape',
            init: shape,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'TimePickerThemeData';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => TimePickerThemeData$Mate(
          backgroundColor: p.get('backgroundColor').build(),
          cancelButtonStyle: p.get('cancelButtonStyle').build(),
          confirmButtonStyle: p.get('confirmButtonStyle').build(),
          dayPeriodBorderSide: p.get('dayPeriodBorderSide').build(),
          dayPeriodColor: p.get('dayPeriodColor').build(),
          dayPeriodShape: p.get('dayPeriodShape').build(),
          dayPeriodTextColor: p.get('dayPeriodTextColor').build(),
          dayPeriodTextStyle: p.get('dayPeriodTextStyle').build(),
          dialBackgroundColor: p.get('dialBackgroundColor').build(),
          dialHandColor: p.get('dialHandColor').build(),
          dialTextColor: p.get('dialTextColor').build(),
          dialTextStyle: p.get('dialTextStyle').build(),
          elevation: p.get('elevation').build(),
          entryModeIconColor: p.get('entryModeIconColor').build(),
          helpTextStyle: p.get('helpTextStyle').build(),
          hourMinuteColor: p.get('hourMinuteColor').build(),
          hourMinuteShape: p.get('hourMinuteShape').build(),
          hourMinuteTextColor: p.get('hourMinuteTextColor').build(),
          hourMinuteTextStyle: p.get('hourMinuteTextStyle').build(),
          inputDecorationTheme: p.get('inputDecorationTheme').build(),
          padding: p.get('padding').build(),
          shape: p.get('shape').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class TimePickerTheme extends InheritedTheme
class TimePickerTheme$Mate extends _i1.TimePickerTheme with _i2.Mate {
  /// TimePickerTheme TimePickerTheme({Key? key, required TimePickerThemeData data, required Widget child})
  TimePickerTheme$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required TimePickerThemeData data} , default:none
    required super.data,

    /// optionalParameters: {required Widget child} , default:none
    required super.child,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i9.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'data': _i2.BuilderArg<_i1.TimePickerThemeData>(
            name: 'data',
            init: data,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i10.Widget>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'TimePickerTheme';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => TimePickerTheme$Mate(
          key: p.get('key').build(),
          data: p.get('data').build(),
          child: p.get('child').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
