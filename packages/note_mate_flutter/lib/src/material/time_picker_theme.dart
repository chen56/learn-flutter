// /// Generated by gen_maters.dart, please don't edit! 

import 'package:flutter/src/material/time_picker_theme.dart';import 'dart:ui';import 'package:flutter/src/material/button_style.dart';import 'package:flutter/src/painting/borders.dart';import 'package:flutter/src/painting/text_style.dart';import 'dart:core';import 'package:flutter/src/material/input_decorator.dart';import 'package:flutter/src/painting/edge_insets.dart';import 'package:flutter/src/foundation/key.dart';import 'package:flutter/src/widgets/framework.dart';import 'package:note/mate.dart' show Mate;/// class TimePickerThemeData with Diagnosticable
class TimePickerThemeData$Mate extends TimePickerThemeData with Mate {/// TimePickerThemeData TimePickerThemeData({Color? backgroundColor, ButtonStyle? cancelButtonStyle, ButtonStyle? confirmButtonStyle, BorderSide? dayPeriodBorderSide, Color? dayPeriodColor, OutlinedBorder? dayPeriodShape, Color? dayPeriodTextColor, TextStyle? dayPeriodTextStyle, Color? dialBackgroundColor, Color? dialHandColor, Color? dialTextColor, TextStyle? dialTextStyle, double? elevation, Color? entryModeIconColor, TextStyle? helpTextStyle, Color? hourMinuteColor, ShapeBorder? hourMinuteShape, Color? hourMinuteTextColor, TextStyle? hourMinuteTextStyle, InputDecorationTheme? inputDecorationTheme, EdgeInsetsGeometry? padding, ShapeBorder? shape})
TimePickerThemeData$Mate({/// optionalParameters: {Color? backgroundColor} , hasDefaultValue:false, defaultValueCode:null
Color? backgroundColor, /// optionalParameters: {ButtonStyle? cancelButtonStyle} , hasDefaultValue:false, defaultValueCode:null
ButtonStyle? cancelButtonStyle, /// optionalParameters: {ButtonStyle? confirmButtonStyle} , hasDefaultValue:false, defaultValueCode:null
ButtonStyle? confirmButtonStyle, /// optionalParameters: {BorderSide? dayPeriodBorderSide} , hasDefaultValue:false, defaultValueCode:null
BorderSide? dayPeriodBorderSide, /// optionalParameters: {Color? dayPeriodColor} , hasDefaultValue:false, defaultValueCode:null
Color? dayPeriodColor, /// optionalParameters: {OutlinedBorder? dayPeriodShape} , hasDefaultValue:false, defaultValueCode:null
OutlinedBorder? dayPeriodShape, /// optionalParameters: {Color? dayPeriodTextColor} , hasDefaultValue:false, defaultValueCode:null
Color? dayPeriodTextColor, /// optionalParameters: {TextStyle? dayPeriodTextStyle} , hasDefaultValue:false, defaultValueCode:null
TextStyle? dayPeriodTextStyle, /// optionalParameters: {Color? dialBackgroundColor} , hasDefaultValue:false, defaultValueCode:null
Color? dialBackgroundColor, /// optionalParameters: {Color? dialHandColor} , hasDefaultValue:false, defaultValueCode:null
Color? dialHandColor, /// optionalParameters: {Color? dialTextColor} , hasDefaultValue:false, defaultValueCode:null
Color? dialTextColor, /// optionalParameters: {TextStyle? dialTextStyle} , hasDefaultValue:false, defaultValueCode:null
TextStyle? dialTextStyle, /// optionalParameters: {double? elevation} , hasDefaultValue:false, defaultValueCode:null
double? elevation, /// optionalParameters: {Color? entryModeIconColor} , hasDefaultValue:false, defaultValueCode:null
Color? entryModeIconColor, /// optionalParameters: {TextStyle? helpTextStyle} , hasDefaultValue:false, defaultValueCode:null
TextStyle? helpTextStyle, /// optionalParameters: {Color? hourMinuteColor} , hasDefaultValue:false, defaultValueCode:null
Color? hourMinuteColor, /// optionalParameters: {ShapeBorder? hourMinuteShape} , hasDefaultValue:false, defaultValueCode:null
ShapeBorder? hourMinuteShape, /// optionalParameters: {Color? hourMinuteTextColor} , hasDefaultValue:false, defaultValueCode:null
Color? hourMinuteTextColor, /// optionalParameters: {TextStyle? hourMinuteTextStyle} , hasDefaultValue:false, defaultValueCode:null
TextStyle? hourMinuteTextStyle, /// optionalParameters: {InputDecorationTheme? inputDecorationTheme} , hasDefaultValue:false, defaultValueCode:null
InputDecorationTheme? inputDecorationTheme, /// optionalParameters: {EdgeInsetsGeometry? padding} , hasDefaultValue:false, defaultValueCode:null
EdgeInsetsGeometry? padding, /// optionalParameters: {ShapeBorder? shape} , hasDefaultValue:false, defaultValueCode:null
ShapeBorder? shape, }) : super(backgroundColor: backgroundColor, cancelButtonStyle: cancelButtonStyle, confirmButtonStyle: confirmButtonStyle, dayPeriodBorderSide: dayPeriodBorderSide, dayPeriodColor: dayPeriodColor, dayPeriodShape: dayPeriodShape, dayPeriodTextColor: dayPeriodTextColor, dayPeriodTextStyle: dayPeriodTextStyle, dialBackgroundColor: dialBackgroundColor, dialHandColor: dialHandColor, dialTextColor: dialTextColor, dialTextStyle: dialTextStyle, elevation: elevation, entryModeIconColor: entryModeIconColor, helpTextStyle: helpTextStyle, hourMinuteColor: hourMinuteColor, hourMinuteShape: hourMinuteShape, hourMinuteTextColor: hourMinuteTextColor, hourMinuteTextStyle: hourMinuteTextStyle, inputDecorationTheme: inputDecorationTheme, padding: padding, shape: shape, ) { mateBuilder = (p) => TimePickerThemeData$Mate(backgroundColor: p.get('backgroundColor').build(), cancelButtonStyle: p.get('cancelButtonStyle').build(), confirmButtonStyle: p.get('confirmButtonStyle').build(), dayPeriodBorderSide: p.get('dayPeriodBorderSide').build(), dayPeriodColor: p.get('dayPeriodColor').build(), dayPeriodShape: p.get('dayPeriodShape').build(), dayPeriodTextColor: p.get('dayPeriodTextColor').build(), dayPeriodTextStyle: p.get('dayPeriodTextStyle').build(), dialBackgroundColor: p.get('dialBackgroundColor').build(), dialHandColor: p.get('dialHandColor').build(), dialTextColor: p.get('dialTextColor').build(), dialTextStyle: p.get('dialTextStyle').build(), elevation: p.get('elevation').build(), entryModeIconColor: p.get('entryModeIconColor').build(), helpTextStyle: p.get('helpTextStyle').build(), hourMinuteColor: p.get('hourMinuteColor').build(), hourMinuteShape: p.get('hourMinuteShape').build(), hourMinuteTextColor: p.get('hourMinuteTextColor').build(), hourMinuteTextStyle: p.get('hourMinuteTextStyle').build(), inputDecorationTheme: p.get('inputDecorationTheme').build(), padding: p.get('padding').build(), shape: p.get('shape').build(), );
matePut('backgroundColor', backgroundColor);
matePut('cancelButtonStyle', cancelButtonStyle);
matePut('confirmButtonStyle', confirmButtonStyle);
matePut('dayPeriodBorderSide', dayPeriodBorderSide);
matePut('dayPeriodColor', dayPeriodColor);
matePut('dayPeriodShape', dayPeriodShape);
matePut('dayPeriodTextColor', dayPeriodTextColor);
matePut('dayPeriodTextStyle', dayPeriodTextStyle);
matePut('dialBackgroundColor', dialBackgroundColor);
matePut('dialHandColor', dialHandColor);
matePut('dialTextColor', dialTextColor);
matePut('dialTextStyle', dialTextStyle);
matePut('elevation', elevation);
matePut('entryModeIconColor', entryModeIconColor);
matePut('helpTextStyle', helpTextStyle);
matePut('hourMinuteColor', hourMinuteColor);
matePut('hourMinuteShape', hourMinuteShape);
matePut('hourMinuteTextColor', hourMinuteTextColor);
matePut('hourMinuteTextStyle', hourMinuteTextStyle);
matePut('inputDecorationTheme', inputDecorationTheme);
matePut('padding', padding);
matePut('shape', shape); }

 }
/// class TimePickerTheme extends InheritedTheme
class TimePickerTheme$Mate extends TimePickerTheme with Mate {/// TimePickerTheme TimePickerTheme({Key? key, required TimePickerThemeData data, required Widget child})
TimePickerTheme$Mate({/// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
Key? key, /// optionalParameters: {required TimePickerThemeData data} , hasDefaultValue:false, defaultValueCode:null
required TimePickerThemeData data, /// optionalParameters: {required Widget child} , hasDefaultValue:false, defaultValueCode:null
required Widget child, }) : super(key: key, data: data, child: child, ) { mateBuilder = (p) => TimePickerTheme$Mate(key: p.get('key').build(), data: p.get('data').build(), child: p.get('child').build(), );
matePut('key', key);
matePut('data', data);
matePut('child', child); }

 }
