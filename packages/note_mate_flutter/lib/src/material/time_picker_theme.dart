// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/time_picker_theme.dart';
import 'package:note/mate.dart';
import 'dart:ui';
import 'package:flutter/src/material/button_style.dart';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/painting/text_style.dart';
import 'dart:core';
import 'package:flutter/src/material/input_decorator.dart';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';

/// class TimePickerThemeData with Diagnosticable
class TimePickerThemeData$Mate extends TimePickerThemeData with Mate {
  /// TimePickerThemeData TimePickerThemeData({Color? backgroundColor, ButtonStyle? cancelButtonStyle, ButtonStyle? confirmButtonStyle, BorderSide? dayPeriodBorderSide, Color? dayPeriodColor, OutlinedBorder? dayPeriodShape, Color? dayPeriodTextColor, TextStyle? dayPeriodTextStyle, Color? dialBackgroundColor, Color? dialHandColor, Color? dialTextColor, TextStyle? dialTextStyle, double? elevation, Color? entryModeIconColor, TextStyle? helpTextStyle, Color? hourMinuteColor, ShapeBorder? hourMinuteShape, Color? hourMinuteTextColor, TextStyle? hourMinuteTextStyle, InputDecorationTheme? inputDecorationTheme, EdgeInsetsGeometry? padding, ShapeBorder? shape})
  TimePickerThemeData$Mate({
    /// optionalParameters: {Color? backgroundColor} , default:none
    Color? backgroundColor,

    /// optionalParameters: {ButtonStyle? cancelButtonStyle} , default:none
    ButtonStyle? cancelButtonStyle,

    /// optionalParameters: {ButtonStyle? confirmButtonStyle} , default:none
    ButtonStyle? confirmButtonStyle,

    /// optionalParameters: {BorderSide? dayPeriodBorderSide} , default:none
    BorderSide? dayPeriodBorderSide,

    /// optionalParameters: {Color? dayPeriodColor} , default:none
    Color? dayPeriodColor,

    /// optionalParameters: {OutlinedBorder? dayPeriodShape} , default:none
    OutlinedBorder? dayPeriodShape,

    /// optionalParameters: {Color? dayPeriodTextColor} , default:none
    Color? dayPeriodTextColor,

    /// optionalParameters: {TextStyle? dayPeriodTextStyle} , default:none
    TextStyle? dayPeriodTextStyle,

    /// optionalParameters: {Color? dialBackgroundColor} , default:none
    Color? dialBackgroundColor,

    /// optionalParameters: {Color? dialHandColor} , default:none
    Color? dialHandColor,

    /// optionalParameters: {Color? dialTextColor} , default:none
    Color? dialTextColor,

    /// optionalParameters: {TextStyle? dialTextStyle} , default:none
    TextStyle? dialTextStyle,

    /// optionalParameters: {double? elevation} , default:none
    double? elevation,

    /// optionalParameters: {Color? entryModeIconColor} , default:none
    Color? entryModeIconColor,

    /// optionalParameters: {TextStyle? helpTextStyle} , default:none
    TextStyle? helpTextStyle,

    /// optionalParameters: {Color? hourMinuteColor} , default:none
    Color? hourMinuteColor,

    /// optionalParameters: {ShapeBorder? hourMinuteShape} , default:none
    ShapeBorder? hourMinuteShape,

    /// optionalParameters: {Color? hourMinuteTextColor} , default:none
    Color? hourMinuteTextColor,

    /// optionalParameters: {TextStyle? hourMinuteTextStyle} , default:none
    TextStyle? hourMinuteTextStyle,

    /// optionalParameters: {InputDecorationTheme? inputDecorationTheme} , default:none
    InputDecorationTheme? inputDecorationTheme,

    /// optionalParameters: {EdgeInsetsGeometry? padding} , default:none
    EdgeInsetsGeometry? padding,

    /// optionalParameters: {ShapeBorder? shape} , default:none
    ShapeBorder? shape,
  }) : super(
          backgroundColor: backgroundColor,
          cancelButtonStyle: cancelButtonStyle,
          confirmButtonStyle: confirmButtonStyle,
          dayPeriodBorderSide: dayPeriodBorderSide,
          dayPeriodColor: dayPeriodColor,
          dayPeriodShape: dayPeriodShape,
          dayPeriodTextColor: dayPeriodTextColor,
          dayPeriodTextStyle: dayPeriodTextStyle,
          dialBackgroundColor: dialBackgroundColor,
          dialHandColor: dialHandColor,
          dialTextColor: dialTextColor,
          dialTextStyle: dialTextStyle,
          elevation: elevation,
          entryModeIconColor: entryModeIconColor,
          helpTextStyle: helpTextStyle,
          hourMinuteColor: hourMinuteColor,
          hourMinuteShape: hourMinuteShape,
          hourMinuteTextColor: hourMinuteTextColor,
          hourMinuteTextStyle: hourMinuteTextStyle,
          inputDecorationTheme: inputDecorationTheme,
          padding: padding,
          shape: shape,
        ) {
    mateBuilderName = 'TimePickerThemeData';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => TimePickerThemeData$Mate(
          backgroundColor: p.get('backgroundColor').build(),
          cancelButtonStyle: p.get('cancelButtonStyle').build(),
          confirmButtonStyle: p.get('confirmButtonStyle').build(),
          dayPeriodBorderSide: p.get('dayPeriodBorderSide').build(),
          dayPeriodColor: p.get('dayPeriodColor').build(),
          dayPeriodShape: p.get('dayPeriodShape').build(),
          dayPeriodTextColor: p.get('dayPeriodTextColor').build(),
          dayPeriodTextStyle: p.get('dayPeriodTextStyle').build(),
          dialBackgroundColor: p.get('dialBackgroundColor').build(),
          dialHandColor: p.get('dialHandColor').build(),
          dialTextColor: p.get('dialTextColor').build(),
          dialTextStyle: p.get('dialTextStyle').build(),
          elevation: p.get('elevation').build(),
          entryModeIconColor: p.get('entryModeIconColor').build(),
          helpTextStyle: p.get('helpTextStyle').build(),
          hourMinuteColor: p.get('hourMinuteColor').build(),
          hourMinuteShape: p.get('hourMinuteShape').build(),
          hourMinuteTextColor: p.get('hourMinuteTextColor').build(),
          hourMinuteTextStyle: p.get('hourMinuteTextStyle').build(),
          inputDecorationTheme: p.get('inputDecorationTheme').build(),
          padding: p.get('padding').build(),
          shape: p.get('shape').build(),
        );
    mateUse(
      'backgroundColor',
      backgroundColor,
      isNamed: true,
    );
    mateUse(
      'cancelButtonStyle',
      cancelButtonStyle,
      isNamed: true,
    );
    mateUse(
      'confirmButtonStyle',
      confirmButtonStyle,
      isNamed: true,
    );
    mateUse(
      'dayPeriodBorderSide',
      dayPeriodBorderSide,
      isNamed: true,
    );
    mateUse(
      'dayPeriodColor',
      dayPeriodColor,
      isNamed: true,
    );
    mateUse(
      'dayPeriodShape',
      dayPeriodShape,
      isNamed: true,
    );
    mateUse(
      'dayPeriodTextColor',
      dayPeriodTextColor,
      isNamed: true,
    );
    mateUse(
      'dayPeriodTextStyle',
      dayPeriodTextStyle,
      isNamed: true,
    );
    mateUse(
      'dialBackgroundColor',
      dialBackgroundColor,
      isNamed: true,
    );
    mateUse(
      'dialHandColor',
      dialHandColor,
      isNamed: true,
    );
    mateUse(
      'dialTextColor',
      dialTextColor,
      isNamed: true,
    );
    mateUse(
      'dialTextStyle',
      dialTextStyle,
      isNamed: true,
    );
    mateUse(
      'elevation',
      elevation,
      isNamed: true,
    );
    mateUse(
      'entryModeIconColor',
      entryModeIconColor,
      isNamed: true,
    );
    mateUse(
      'helpTextStyle',
      helpTextStyle,
      isNamed: true,
    );
    mateUse(
      'hourMinuteColor',
      hourMinuteColor,
      isNamed: true,
    );
    mateUse(
      'hourMinuteShape',
      hourMinuteShape,
      isNamed: true,
    );
    mateUse(
      'hourMinuteTextColor',
      hourMinuteTextColor,
      isNamed: true,
    );
    mateUse(
      'hourMinuteTextStyle',
      hourMinuteTextStyle,
      isNamed: true,
    );
    mateUse(
      'inputDecorationTheme',
      inputDecorationTheme,
      isNamed: true,
    );
    mateUse(
      'padding',
      padding,
      isNamed: true,
    );
    mateUse(
      'shape',
      shape,
      isNamed: true,
    );
  }
}

/// class TimePickerTheme extends InheritedTheme
class TimePickerTheme$Mate extends TimePickerTheme with Mate {
  /// TimePickerTheme TimePickerTheme({Key? key, required TimePickerThemeData data, required Widget child})
  TimePickerTheme$Mate({
    /// optionalParameters: {Key? key} , default:none
    Key? key,

    /// optionalParameters: {required TimePickerThemeData data} , default:none
    required TimePickerThemeData data,

    /// optionalParameters: {required Widget child} , default:none
    required Widget child,
  }) : super(
          key: key,
          data: data,
          child: child,
        ) {
    mateBuilderName = 'TimePickerTheme';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => TimePickerTheme$Mate(
          key: p.get('key').build(),
          data: p.get('data').build(),
          child: p.get('child').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'data',
      data,
      isNamed: true,
    );
    mateUse(
      'child',
      child,
      isNamed: true,
    );
  }
}
