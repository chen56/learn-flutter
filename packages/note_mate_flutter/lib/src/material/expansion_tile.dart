// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/expansion_tile.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/widgets/framework.dart' as _i4;
import 'package:flutter/src/foundation/basic_types.dart' as _i5;
import 'package:flutter/src/painting/edge_insets.dart' as _i6;
import 'package:flutter/src/rendering/flex.dart' as _i7;
import 'package:flutter/src/painting/alignment.dart' as _i8;
import 'dart:ui' as _i9;
import 'package:flutter/src/painting/borders.dart' as _i10;
import 'package:flutter/src/material/list_tile.dart' as _i11;

/// class ExpansionTile extends StatefulWidget
class ExpansionTile$Mate extends _i1.ExpansionTile with _i2.Mate {
  /// ExpansionTile ExpansionTile({Key? key, Widget? leading, required Widget title, Widget? subtitle, void Function(bool)? onExpansionChanged, List<Widget> children = const <Widget>[], Widget? trailing, bool initiallyExpanded = false, bool maintainState = false, EdgeInsetsGeometry? tilePadding, CrossAxisAlignment? expandedCrossAxisAlignment, Alignment? expandedAlignment, EdgeInsetsGeometry? childrenPadding, Color? backgroundColor, Color? collapsedBackgroundColor, Color? textColor, Color? collapsedTextColor, Color? iconColor, Color? collapsedIconColor, ShapeBorder? shape, ShapeBorder? collapsedShape, Clip? clipBehavior, ListTileControlAffinity? controlAffinity, ExpansionTileController? controller})
  ExpansionTile$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {Widget? leading} , default:none
    super.leading,

    /// optionalParameters: {required Widget title} , default:none
    required super.title,

    /// optionalParameters: {Widget? subtitle} , default:none
    super.subtitle,

    /// optionalParameters: {void Function(bool)? onExpansionChanged} , default:none
    super.onExpansionChanged,

    /// optionalParameters: {List<Widget> children = const <Widget>[]} , default:unprocessed=ListLiteralImpl
    super.children,

    /// optionalParameters: {Widget? trailing} , default:none
    super.trailing,

    /// optionalParameters: {bool initiallyExpanded = false} , default:processed=BooleanLiteralImpl
    super.initiallyExpanded,

    /// optionalParameters: {bool maintainState = false} , default:processed=BooleanLiteralImpl
    super.maintainState,

    /// optionalParameters: {EdgeInsetsGeometry? tilePadding} , default:none
    super.tilePadding,

    /// optionalParameters: {CrossAxisAlignment? expandedCrossAxisAlignment} , default:none
    super.expandedCrossAxisAlignment,

    /// optionalParameters: {Alignment? expandedAlignment} , default:none
    super.expandedAlignment,

    /// optionalParameters: {EdgeInsetsGeometry? childrenPadding} , default:none
    super.childrenPadding,

    /// optionalParameters: {Color? backgroundColor} , default:none
    super.backgroundColor,

    /// optionalParameters: {Color? collapsedBackgroundColor} , default:none
    super.collapsedBackgroundColor,

    /// optionalParameters: {Color? textColor} , default:none
    super.textColor,

    /// optionalParameters: {Color? collapsedTextColor} , default:none
    super.collapsedTextColor,

    /// optionalParameters: {Color? iconColor} , default:none
    super.iconColor,

    /// optionalParameters: {Color? collapsedIconColor} , default:none
    super.collapsedIconColor,

    /// optionalParameters: {ShapeBorder? shape} , default:none
    super.shape,

    /// optionalParameters: {ShapeBorder? collapsedShape} , default:none
    super.collapsedShape,

    /// optionalParameters: {Clip? clipBehavior} , default:none
    super.clipBehavior,

    /// optionalParameters: {ListTileControlAffinity? controlAffinity} , default:none
    super.controlAffinity,

    /// optionalParameters: {ExpansionTileController? controller} , default:none
    super.controller,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'leading': _i2.BuilderArg<_i4.Widget?>(
            name: 'leading',
            init: leading,
            isNamed: true,
          ),
          'title': _i2.BuilderArg<_i4.Widget>(
            name: 'title',
            init: title,
            isNamed: true,
          ),
          'subtitle': _i2.BuilderArg<_i4.Widget?>(
            name: 'subtitle',
            init: subtitle,
            isNamed: true,
          ),
          'onExpansionChanged': _i2.BuilderArg<_i5.ValueChanged<bool>?>(
            name: 'onExpansionChanged',
            init: onExpansionChanged,
            isNamed: true,
          ),
          'children': _i2.BuilderArg<List<_i4.Widget>>(
            name: 'children',
            init: children,
            isNamed: true,
          ),
          'trailing': _i2.BuilderArg<_i4.Widget?>(
            name: 'trailing',
            init: trailing,
            isNamed: true,
          ),
          'initiallyExpanded': _i2.BuilderArg<bool>(
            name: 'initiallyExpanded',
            init: initiallyExpanded,
            isNamed: true,
            defaultValue: false,
          ),
          'maintainState': _i2.BuilderArg<bool>(
            name: 'maintainState',
            init: maintainState,
            isNamed: true,
            defaultValue: false,
          ),
          'tilePadding': _i2.BuilderArg<_i6.EdgeInsetsGeometry?>(
            name: 'tilePadding',
            init: tilePadding,
            isNamed: true,
          ),
          'expandedCrossAxisAlignment': _i2.BuilderArg<_i7.CrossAxisAlignment?>(
            name: 'expandedCrossAxisAlignment',
            init: expandedCrossAxisAlignment,
            isNamed: true,
          ),
          'expandedAlignment': _i2.BuilderArg<_i8.Alignment?>(
            name: 'expandedAlignment',
            init: expandedAlignment,
            isNamed: true,
          ),
          'childrenPadding': _i2.BuilderArg<_i6.EdgeInsetsGeometry?>(
            name: 'childrenPadding',
            init: childrenPadding,
            isNamed: true,
          ),
          'backgroundColor': _i2.BuilderArg<_i9.Color?>(
            name: 'backgroundColor',
            init: backgroundColor,
            isNamed: true,
          ),
          'collapsedBackgroundColor': _i2.BuilderArg<_i9.Color?>(
            name: 'collapsedBackgroundColor',
            init: collapsedBackgroundColor,
            isNamed: true,
          ),
          'textColor': _i2.BuilderArg<_i9.Color?>(
            name: 'textColor',
            init: textColor,
            isNamed: true,
          ),
          'collapsedTextColor': _i2.BuilderArg<_i9.Color?>(
            name: 'collapsedTextColor',
            init: collapsedTextColor,
            isNamed: true,
          ),
          'iconColor': _i2.BuilderArg<_i9.Color?>(
            name: 'iconColor',
            init: iconColor,
            isNamed: true,
          ),
          'collapsedIconColor': _i2.BuilderArg<_i9.Color?>(
            name: 'collapsedIconColor',
            init: collapsedIconColor,
            isNamed: true,
          ),
          'shape': _i2.BuilderArg<_i10.ShapeBorder?>(
            name: 'shape',
            init: shape,
            isNamed: true,
          ),
          'collapsedShape': _i2.BuilderArg<_i10.ShapeBorder?>(
            name: 'collapsedShape',
            init: collapsedShape,
            isNamed: true,
          ),
          'clipBehavior': _i2.BuilderArg<_i9.Clip?>(
            name: 'clipBehavior',
            init: clipBehavior,
            isNamed: true,
          ),
          'controlAffinity': _i2.BuilderArg<_i11.ListTileControlAffinity?>(
            name: 'controlAffinity',
            init: controlAffinity,
            isNamed: true,
          ),
          'controller': _i2.BuilderArg<_i1.ExpansionTileController?>(
            name: 'controller',
            init: controller,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'ExpansionTile';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => ExpansionTile$Mate(
          key: p.get('key').build(),
          leading: p.get('leading').build(),
          title: p.get('title').build(),
          subtitle: p.get('subtitle').build(),
          onExpansionChanged: p.get('onExpansionChanged').build(),
          children: p.get('children').build(),
          trailing: p.get('trailing').build(),
          initiallyExpanded: p.get('initiallyExpanded').build(),
          maintainState: p.get('maintainState').build(),
          tilePadding: p.get('tilePadding').build(),
          expandedCrossAxisAlignment: p.get('expandedCrossAxisAlignment').build(),
          expandedAlignment: p.get('expandedAlignment').build(),
          childrenPadding: p.get('childrenPadding').build(),
          backgroundColor: p.get('backgroundColor').build(),
          collapsedBackgroundColor: p.get('collapsedBackgroundColor').build(),
          textColor: p.get('textColor').build(),
          collapsedTextColor: p.get('collapsedTextColor').build(),
          iconColor: p.get('iconColor').build(),
          collapsedIconColor: p.get('collapsedIconColor').build(),
          shape: p.get('shape').build(),
          collapsedShape: p.get('collapsedShape').build(),
          clipBehavior: p.get('clipBehavior').build(),
          controlAffinity: p.get('controlAffinity').build(),
          controller: p.get('controller').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
