// /// Generated by gen_maters.dart, please don't edit! 

import 'package:flutter/src/material/banner.dart';import 'package:flutter/src/foundation/key.dart';import 'package:flutter/src/widgets/framework.dart';import 'package:flutter/src/painting/text_style.dart';import 'dart:core';import 'dart:ui';import 'package:flutter/src/painting/edge_insets.dart';import 'package:flutter/src/widgets/overflow_bar.dart';import 'package:flutter/src/animation/animation.dart';import 'package:note/mate.dart' show Mate;/// class MaterialBanner extends StatefulWidget
class MaterialBanner$Mate extends MaterialBanner with Mate {/// MaterialBanner MaterialBanner({Key? key, required Widget content, TextStyle? contentTextStyle, required List<Widget> actions, double? elevation, Widget? leading, Color? backgroundColor, Color? surfaceTintColor, Color? shadowColor, Color? dividerColor, EdgeInsetsGeometry? padding, EdgeInsetsGeometry? margin, EdgeInsetsGeometry? leadingPadding, bool forceActionsBelow = false, OverflowBarAlignment overflowAlignment = OverflowBarAlignment.end, Animation<double>? animation, void Function()? onVisible})
MaterialBanner$Mate({/// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
Key? key, /// optionalParameters: {required Widget content} , hasDefaultValue:false, defaultValueCode:null
required Widget content, /// optionalParameters: {TextStyle? contentTextStyle} , hasDefaultValue:false, defaultValueCode:null
TextStyle? contentTextStyle, /// optionalParameters: {required List<Widget> actions} , hasDefaultValue:false, defaultValueCode:null
required List<Widget> actions, /// optionalParameters: {double? elevation} , hasDefaultValue:false, defaultValueCode:null
double? elevation, /// optionalParameters: {Widget? leading} , hasDefaultValue:false, defaultValueCode:null
Widget? leading, /// optionalParameters: {Color? backgroundColor} , hasDefaultValue:false, defaultValueCode:null
Color? backgroundColor, /// optionalParameters: {Color? surfaceTintColor} , hasDefaultValue:false, defaultValueCode:null
Color? surfaceTintColor, /// optionalParameters: {Color? shadowColor} , hasDefaultValue:false, defaultValueCode:null
Color? shadowColor, /// optionalParameters: {Color? dividerColor} , hasDefaultValue:false, defaultValueCode:null
Color? dividerColor, /// optionalParameters: {EdgeInsetsGeometry? padding} , hasDefaultValue:false, defaultValueCode:null
EdgeInsetsGeometry? padding, /// optionalParameters: {EdgeInsetsGeometry? margin} , hasDefaultValue:false, defaultValueCode:null
EdgeInsetsGeometry? margin, /// optionalParameters: {EdgeInsetsGeometry? leadingPadding} , hasDefaultValue:false, defaultValueCode:null
EdgeInsetsGeometry? leadingPadding, /// optionalParameters: {bool forceActionsBelow = false} , hasDefaultValue:true, defaultValueCode:false
required bool forceActionsBelow, /// optionalParameters: {OverflowBarAlignment overflowAlignment = OverflowBarAlignment.end} , hasDefaultValue:true, defaultValueCode:OverflowBarAlignment.end
required OverflowBarAlignment overflowAlignment, /// optionalParameters: {Animation<double>? animation} , hasDefaultValue:false, defaultValueCode:null
Animation<double>? animation, /// optionalParameters: {void Function()? onVisible} , hasDefaultValue:false, defaultValueCode:null
VoidCallback? onVisible, }) : super(key: key, content: content, contentTextStyle: contentTextStyle, actions: actions, elevation: elevation, leading: leading, backgroundColor: backgroundColor, surfaceTintColor: surfaceTintColor, shadowColor: shadowColor, dividerColor: dividerColor, padding: padding, margin: margin, leadingPadding: leadingPadding, forceActionsBelow: forceActionsBelow, overflowAlignment: overflowAlignment, animation: animation, onVisible: onVisible, ) { mateBuilder = (p) => MaterialBanner$Mate(key: p.get('key').build(), content: p.get('content').build(), contentTextStyle: p.get('contentTextStyle').build(), actions: p.get('actions').build(), elevation: p.get('elevation').build(), leading: p.get('leading').build(), backgroundColor: p.get('backgroundColor').build(), surfaceTintColor: p.get('surfaceTintColor').build(), shadowColor: p.get('shadowColor').build(), dividerColor: p.get('dividerColor').build(), padding: p.get('padding').build(), margin: p.get('margin').build(), leadingPadding: p.get('leadingPadding').build(), forceActionsBelow: p.get('forceActionsBelow').build(), overflowAlignment: p.get('overflowAlignment').build(), animation: p.get('animation').build(), onVisible: p.get('onVisible').build(), );
matePut('key', key);
matePut('content', content);
matePut('contentTextStyle', contentTextStyle);
matePut('actions', actions);
matePut('elevation', elevation);
matePut('leading', leading);
matePut('backgroundColor', backgroundColor);
matePut('surfaceTintColor', surfaceTintColor);
matePut('shadowColor', shadowColor);
matePut('dividerColor', dividerColor);
matePut('padding', padding);
matePut('margin', margin);
matePut('leadingPadding', leadingPadding);
matePut('forceActionsBelow', forceActionsBelow);
matePut('overflowAlignment', overflowAlignment);
matePut('animation', animation);
matePut('onVisible', onVisible); }

 }
