// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/text_selection_theme.dart';
import 'package:note/mate.dart';
import 'dart:ui';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';

/// class TextSelectionThemeData with Diagnosticable
class TextSelectionThemeData$Mate extends TextSelectionThemeData with Mate {
  /// TextSelectionThemeData TextSelectionThemeData({Color? cursorColor, Color? selectionColor, Color? selectionHandleColor})
  TextSelectionThemeData$Mate({
    /// optionalParameters: {Color? cursorColor} , defaultValue:none
    Color? cursorColor,

    /// optionalParameters: {Color? selectionColor} , defaultValue:none
    Color? selectionColor,

    /// optionalParameters: {Color? selectionHandleColor} , defaultValue:none
    Color? selectionHandleColor,
  }) : super(
          cursorColor: cursorColor,
          selectionColor: selectionColor,
          selectionHandleColor: selectionHandleColor,
        ) {
    mateBuilder = (p) => TextSelectionThemeData$Mate(
          cursorColor: p.get('cursorColor').build(),
          selectionColor: p.get('selectionColor').build(),
          selectionHandleColor: p.get('selectionHandleColor').build(),
        );
    mateDeclare('cursorColor', cursorColor);
    mateDeclare('selectionColor', selectionColor);
    mateDeclare('selectionHandleColor', selectionHandleColor);
  }
}

/// class TextSelectionTheme extends InheritedTheme
class TextSelectionTheme$Mate extends TextSelectionTheme with Mate {
  /// TextSelectionTheme TextSelectionTheme({Key? key, required TextSelectionThemeData data, required Widget child})
  TextSelectionTheme$Mate({
    /// optionalParameters: {Key? key} , defaultValue:none
    Key? key,

    /// optionalParameters: {required TextSelectionThemeData data} , defaultValue:none
    required TextSelectionThemeData data,

    /// optionalParameters: {required Widget child} , defaultValue:none
    required Widget child,
  }) : super(
          key: key,
          data: data,
          child: child,
        ) {
    mateBuilder = (p) => TextSelectionTheme$Mate(
          key: p.get('key').build(),
          data: p.get('data').build(),
          child: p.get('child').build(),
        );
    mateDeclare('key', key);
    mateDeclare('data', data);
    mateDeclare('child', child);
  }
}
