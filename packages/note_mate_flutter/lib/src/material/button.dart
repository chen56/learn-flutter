// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/button.dart' as _i1;
import 'package:note/mate_core.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'dart:ui' as _i4;
import 'package:flutter/src/foundation/basic_types.dart' as _i5;
import 'package:flutter/src/services/mouse_cursor.dart' as _i6;
import 'package:flutter/src/painting/text_style.dart' as _i7;
import 'package:flutter/src/painting/edge_insets.dart' as _i8;
import 'package:flutter/cupertino.dart' as _i9;
import 'package:flutter/src/material/theme_data.dart' as _i10;
import 'package:flutter/material.dart' as _i11;
import 'package:flutter/src/rendering/box.dart' as _i12;
import 'package:flutter/src/painting/borders.dart' as _i13;
import 'package:flutter/src/widgets/focus_manager.dart' as _i14;
import 'package:flutter/src/widgets/framework.dart' as _i15;

/// class RawMaterialButton extends StatefulWidget
class RawMaterialButton$Mate extends _i1.RawMaterialButton with _i2.Mate {
  /// RawMaterialButton RawMaterialButton({Key? key, required void Function()? onPressed, void Function()? onLongPress, void Function(bool)? onHighlightChanged, MouseCursor? mouseCursor, TextStyle? textStyle, Color? fillColor, Color? focusColor, Color? hoverColor, Color? highlightColor, Color? splashColor, double elevation = 2.0, double focusElevation = 4.0, double hoverElevation = 4.0, double highlightElevation = 8.0, double disabledElevation = 0.0, EdgeInsetsGeometry padding = EdgeInsets.zero, VisualDensity visualDensity = VisualDensity.standard, BoxConstraints constraints = const BoxConstraints(minWidth: 88.0, minHeight: 36.0), ShapeBorder shape = const RoundedRectangleBorder(), Duration animationDuration = kThemeChangeDuration, Clip clipBehavior = Clip.none, FocusNode? focusNode, bool autofocus = false, MaterialTapTargetSize? materialTapTargetSize, Widget? child, bool enableFeedback = true})
  RawMaterialButton$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required void Function()? onPressed} , default:none
    required super.onPressed,

    /// optionalParameters: {void Function()? onLongPress} , default:none
    super.onLongPress,

    /// optionalParameters: {void Function(bool)? onHighlightChanged} , default:none
    super.onHighlightChanged,

    /// optionalParameters: {MouseCursor? mouseCursor} , default:none
    super.mouseCursor,

    /// optionalParameters: {TextStyle? textStyle} , default:none
    super.textStyle,

    /// optionalParameters: {Color? fillColor} , default:none
    super.fillColor,

    /// optionalParameters: {Color? focusColor} , default:none
    super.focusColor,

    /// optionalParameters: {Color? hoverColor} , default:none
    super.hoverColor,

    /// optionalParameters: {Color? highlightColor} , default:none
    super.highlightColor,

    /// optionalParameters: {Color? splashColor} , default:none
    super.splashColor,

    /// optionalParameters: {double elevation = 2.0} , default:processed=DoubleLiteralImpl
    super.elevation,

    /// optionalParameters: {double focusElevation = 4.0} , default:processed=DoubleLiteralImpl
    super.focusElevation,

    /// optionalParameters: {double hoverElevation = 4.0} , default:processed=DoubleLiteralImpl
    super.hoverElevation,

    /// optionalParameters: {double highlightElevation = 8.0} , default:processed=DoubleLiteralImpl
    super.highlightElevation,

    /// optionalParameters: {double disabledElevation = 0.0} , default:processed=DoubleLiteralImpl
    super.disabledElevation,

    /// optionalParameters: {EdgeInsetsGeometry padding = EdgeInsets.zero} , default:processed=PrefixedIdentifierImpl
    super.padding,

    /// optionalParameters: {VisualDensity visualDensity = VisualDensity.standard} , default:processed=PrefixedIdentifierImpl
    super.visualDensity,

    /// optionalParameters: {BoxConstraints constraints = const BoxConstraints(minWidth: 88.0, minHeight: 36.0)} , default:unprocessed=InstanceCreationExpressionImpl
    super.constraints,

    /// optionalParameters: {ShapeBorder shape = const RoundedRectangleBorder()} , default:unprocessed=InstanceCreationExpressionImpl
    super.shape,

    /// optionalParameters: {Duration animationDuration = kThemeChangeDuration} , default:unprocessed=SimpleIdentifierImpl
    super.animationDuration,

    /// optionalParameters: {Clip clipBehavior = Clip.none} , default:processed=PrefixedIdentifierImpl
    super.clipBehavior,

    /// optionalParameters: {FocusNode? focusNode} , default:none
    super.focusNode,

    /// optionalParameters: {bool autofocus = false} , default:processed=BooleanLiteralImpl
    super.autofocus,

    /// optionalParameters: {MaterialTapTargetSize? materialTapTargetSize} , default:none
    super.materialTapTargetSize,

    /// optionalParameters: {Widget? child} , default:none
    super.child,

    /// optionalParameters: {bool enableFeedback = true} , default:processed=BooleanLiteralImpl
    super.enableFeedback,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'onPressed': _i2.BuilderArg<_i4.VoidCallback?>(
            name: 'onPressed',
            init: onPressed,
            isNamed: true,
          ),
          'onLongPress': _i2.BuilderArg<_i4.VoidCallback?>(
            name: 'onLongPress',
            init: onLongPress,
            isNamed: true,
          ),
          'onHighlightChanged': _i2.BuilderArg<_i5.ValueChanged<bool>?>(
            name: 'onHighlightChanged',
            init: onHighlightChanged,
            isNamed: true,
          ),
          'mouseCursor': _i2.BuilderArg<_i6.MouseCursor?>(
            name: 'mouseCursor',
            init: mouseCursor,
            isNamed: true,
          ),
          'textStyle': _i2.BuilderArg<_i7.TextStyle?>(
            name: 'textStyle',
            init: textStyle,
            isNamed: true,
          ),
          'fillColor': _i2.BuilderArg<_i4.Color?>(
            name: 'fillColor',
            init: fillColor,
            isNamed: true,
          ),
          'focusColor': _i2.BuilderArg<_i4.Color?>(
            name: 'focusColor',
            init: focusColor,
            isNamed: true,
          ),
          'hoverColor': _i2.BuilderArg<_i4.Color?>(
            name: 'hoverColor',
            init: hoverColor,
            isNamed: true,
          ),
          'highlightColor': _i2.BuilderArg<_i4.Color?>(
            name: 'highlightColor',
            init: highlightColor,
            isNamed: true,
          ),
          'splashColor': _i2.BuilderArg<_i4.Color?>(
            name: 'splashColor',
            init: splashColor,
            isNamed: true,
          ),
          'elevation': _i2.BuilderArg<double>(
            name: 'elevation',
            init: elevation,
            isNamed: true,
            defaultValue: 2.0,
          ),
          'focusElevation': _i2.BuilderArg<double>(
            name: 'focusElevation',
            init: focusElevation,
            isNamed: true,
            defaultValue: 4.0,
          ),
          'hoverElevation': _i2.BuilderArg<double>(
            name: 'hoverElevation',
            init: hoverElevation,
            isNamed: true,
            defaultValue: 4.0,
          ),
          'highlightElevation': _i2.BuilderArg<double>(
            name: 'highlightElevation',
            init: highlightElevation,
            isNamed: true,
            defaultValue: 8.0,
          ),
          'disabledElevation': _i2.BuilderArg<double>(
            name: 'disabledElevation',
            init: disabledElevation,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'padding': _i2.BuilderArg<_i8.EdgeInsetsGeometry>(
            name: 'padding',
            init: padding,
            isNamed: true,
            defaultValue: _i9.EdgeInsets.zero,
          ),
          'visualDensity': _i2.BuilderArg<_i10.VisualDensity>(
            name: 'visualDensity',
            init: visualDensity,
            isNamed: true,
            defaultValue: _i11.VisualDensity.standard,
          ),
          'constraints': _i2.BuilderArg<_i12.BoxConstraints>(
            name: 'constraints',
            init: constraints,
            isNamed: true,
          ),
          'shape': _i2.BuilderArg<_i13.ShapeBorder>(
            name: 'shape',
            init: shape,
            isNamed: true,
          ),
          'animationDuration': _i2.BuilderArg<Duration>(
            name: 'animationDuration',
            init: animationDuration,
            isNamed: true,
          ),
          'clipBehavior': _i2.BuilderArg<_i4.Clip>(
            name: 'clipBehavior',
            init: clipBehavior,
            isNamed: true,
            defaultValue: _i4.Clip.none,
          ),
          'focusNode': _i2.BuilderArg<_i14.FocusNode?>(
            name: 'focusNode',
            init: focusNode,
            isNamed: true,
          ),
          'autofocus': _i2.BuilderArg<bool>(
            name: 'autofocus',
            init: autofocus,
            isNamed: true,
            defaultValue: false,
          ),
          'materialTapTargetSize': _i2.BuilderArg<_i10.MaterialTapTargetSize?>(
            name: 'materialTapTargetSize',
            init: materialTapTargetSize,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i15.Widget?>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
          'enableFeedback': _i2.BuilderArg<bool>(
            name: 'enableFeedback',
            init: enableFeedback,
            isNamed: true,
            defaultValue: true,
          ),
        },
        super() {
    mateBuilderName = 'RawMaterialButton';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => RawMaterialButton$Mate(
          key: p.get('key').build(),
          onPressed: p.get('onPressed').build(),
          onLongPress: p.get('onLongPress').build(),
          onHighlightChanged: p.get('onHighlightChanged').build(),
          mouseCursor: p.get('mouseCursor').build(),
          textStyle: p.get('textStyle').build(),
          fillColor: p.get('fillColor').build(),
          focusColor: p.get('focusColor').build(),
          hoverColor: p.get('hoverColor').build(),
          highlightColor: p.get('highlightColor').build(),
          splashColor: p.get('splashColor').build(),
          elevation: p.get('elevation').build(),
          focusElevation: p.get('focusElevation').build(),
          hoverElevation: p.get('hoverElevation').build(),
          highlightElevation: p.get('highlightElevation').build(),
          disabledElevation: p.get('disabledElevation').build(),
          padding: p.get('padding').build(),
          visualDensity: p.get('visualDensity').build(),
          constraints: p.get('constraints').build(),
          shape: p.get('shape').build(),
          animationDuration: p.get('animationDuration').build(),
          clipBehavior: p.get('clipBehavior').build(),
          focusNode: p.get('focusNode').build(),
          autofocus: p.get('autofocus').build(),
          materialTapTargetSize: p.get('materialTapTargetSize').build(),
          child: p.get('child').build(),
          enableFeedback: p.get('enableFeedback').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
