// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/text_theme.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/painting/text_style.dart';

/// class TextTheme with Diagnosticable
class TextTheme$Mate extends TextTheme with Mate {
  /// TextTheme TextTheme({TextStyle? displayLarge, TextStyle? displayMedium, TextStyle? displaySmall, TextStyle? headlineLarge, TextStyle? headlineMedium, TextStyle? headlineSmall, TextStyle? titleLarge, TextStyle? titleMedium, TextStyle? titleSmall, TextStyle? bodyLarge, TextStyle? bodyMedium, TextStyle? bodySmall, TextStyle? labelLarge, TextStyle? labelMedium, TextStyle? labelSmall, TextStyle? headline1, TextStyle? headline2, TextStyle? headline3, TextStyle? headline4, TextStyle? headline5, TextStyle? headline6, TextStyle? subtitle1, TextStyle? subtitle2, TextStyle? bodyText1, TextStyle? bodyText2, TextStyle? caption, TextStyle? button, TextStyle? overline})
  TextTheme$Mate({
    /// optionalParameters: {TextStyle? displayLarge} , defaultValue:none
    TextStyle? displayLarge,

    /// optionalParameters: {TextStyle? displayMedium} , defaultValue:none
    TextStyle? displayMedium,

    /// optionalParameters: {TextStyle? displaySmall} , defaultValue:none
    TextStyle? displaySmall,

    /// optionalParameters: {TextStyle? headlineLarge} , defaultValue:none
    TextStyle? headlineLarge,

    /// optionalParameters: {TextStyle? headlineMedium} , defaultValue:none
    TextStyle? headlineMedium,

    /// optionalParameters: {TextStyle? headlineSmall} , defaultValue:none
    TextStyle? headlineSmall,

    /// optionalParameters: {TextStyle? titleLarge} , defaultValue:none
    TextStyle? titleLarge,

    /// optionalParameters: {TextStyle? titleMedium} , defaultValue:none
    TextStyle? titleMedium,

    /// optionalParameters: {TextStyle? titleSmall} , defaultValue:none
    TextStyle? titleSmall,

    /// optionalParameters: {TextStyle? bodyLarge} , defaultValue:none
    TextStyle? bodyLarge,

    /// optionalParameters: {TextStyle? bodyMedium} , defaultValue:none
    TextStyle? bodyMedium,

    /// optionalParameters: {TextStyle? bodySmall} , defaultValue:none
    TextStyle? bodySmall,

    /// optionalParameters: {TextStyle? labelLarge} , defaultValue:none
    TextStyle? labelLarge,

    /// optionalParameters: {TextStyle? labelMedium} , defaultValue:none
    TextStyle? labelMedium,

    /// optionalParameters: {TextStyle? labelSmall} , defaultValue:none
    TextStyle? labelSmall,
  }) : super(
          displayLarge: displayLarge,
          displayMedium: displayMedium,
          displaySmall: displaySmall,
          headlineLarge: headlineLarge,
          headlineMedium: headlineMedium,
          headlineSmall: headlineSmall,
          titleLarge: titleLarge,
          titleMedium: titleMedium,
          titleSmall: titleSmall,
          bodyLarge: bodyLarge,
          bodyMedium: bodyMedium,
          bodySmall: bodySmall,
          labelLarge: labelLarge,
          labelMedium: labelMedium,
          labelSmall: labelSmall,
        ) {
    mateCreateName = 'TextTheme';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => TextTheme$Mate(
          displayLarge: p.get('displayLarge').build(),
          displayMedium: p.get('displayMedium').build(),
          displaySmall: p.get('displaySmall').build(),
          headlineLarge: p.get('headlineLarge').build(),
          headlineMedium: p.get('headlineMedium').build(),
          headlineSmall: p.get('headlineSmall').build(),
          titleLarge: p.get('titleLarge').build(),
          titleMedium: p.get('titleMedium').build(),
          titleSmall: p.get('titleSmall').build(),
          bodyLarge: p.get('bodyLarge').build(),
          bodyMedium: p.get('bodyMedium').build(),
          bodySmall: p.get('bodySmall').build(),
          labelLarge: p.get('labelLarge').build(),
          labelMedium: p.get('labelMedium').build(),
          labelSmall: p.get('labelSmall').build(),
        );
    mateUse('displayLarge', displayLarge, isNamed: true);
    mateUse('displayMedium', displayMedium, isNamed: true);
    mateUse('displaySmall', displaySmall, isNamed: true);
    mateUse('headlineLarge', headlineLarge, isNamed: true);
    mateUse('headlineMedium', headlineMedium, isNamed: true);
    mateUse('headlineSmall', headlineSmall, isNamed: true);
    mateUse('titleLarge', titleLarge, isNamed: true);
    mateUse('titleMedium', titleMedium, isNamed: true);
    mateUse('titleSmall', titleSmall, isNamed: true);
    mateUse('bodyLarge', bodyLarge, isNamed: true);
    mateUse('bodyMedium', bodyMedium, isNamed: true);
    mateUse('bodySmall', bodySmall, isNamed: true);
    mateUse('labelLarge', labelLarge, isNamed: true);
    mateUse('labelMedium', labelMedium, isNamed: true);
    mateUse('labelSmall', labelSmall, isNamed: true);
  }
}
