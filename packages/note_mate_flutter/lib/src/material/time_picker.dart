// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/time_picker.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/material/time.dart' as _i4;
import 'package:flutter/material.dart' as _i5;
import 'package:flutter/src/widgets/media_query.dart' as _i6;

/// class TimePickerDialog extends StatefulWidget
class TimePickerDialog$Mate extends _i1.TimePickerDialog with _i2.Mate {
  /// TimePickerDialog TimePickerDialog({Key? key, required TimeOfDay initialTime, String? cancelText, String? confirmText, String? helpText, String? errorInvalidText, String? hourLabelText, String? minuteLabelText, String? restorationId, TimePickerEntryMode initialEntryMode = TimePickerEntryMode.dial, Orientation? orientation, void Function(TimePickerEntryMode)? onEntryModeChanged})
  TimePickerDialog$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {required TimeOfDay initialTime} , default:none
    required _i4.TimeOfDay initialTime,

    /// optionalParameters: {String? cancelText} , default:none
    String? cancelText,

    /// optionalParameters: {String? confirmText} , default:none
    String? confirmText,

    /// optionalParameters: {String? helpText} , default:none
    String? helpText,

    /// optionalParameters: {String? errorInvalidText} , default:none
    String? errorInvalidText,

    /// optionalParameters: {String? hourLabelText} , default:none
    String? hourLabelText,

    /// optionalParameters: {String? minuteLabelText} , default:none
    String? minuteLabelText,

    /// optionalParameters: {String? restorationId} , default:none
    String? restorationId,

    /// optionalParameters: {TimePickerEntryMode initialEntryMode = TimePickerEntryMode.dial} , default:processed=PrefixedIdentifierImpl
    _i1.TimePickerEntryMode initialEntryMode = _i5.TimePickerEntryMode.dial,

    /// optionalParameters: {Orientation? orientation} , default:none
    _i6.Orientation? orientation,

    /// optionalParameters: {void Function(TimePickerEntryMode)? onEntryModeChanged} , default:none
    _i1.EntryModeChangeCallback? onEntryModeChanged,
  }) : super(
          key: key,
          initialTime: initialTime,
          cancelText: cancelText,
          confirmText: confirmText,
          helpText: helpText,
          errorInvalidText: errorInvalidText,
          hourLabelText: hourLabelText,
          minuteLabelText: minuteLabelText,
          restorationId: restorationId,
          initialEntryMode: initialEntryMode,
          orientation: orientation,
          onEntryModeChanged: onEntryModeChanged,
        ) {
    mateBuilderName = 'TimePickerDialog';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => TimePickerDialog$Mate(
          key: p.get('key').build(),
          initialTime: p.get('initialTime').build(),
          cancelText: p.get('cancelText').build(),
          confirmText: p.get('confirmText').build(),
          helpText: p.get('helpText').build(),
          errorInvalidText: p.get('errorInvalidText').build(),
          hourLabelText: p.get('hourLabelText').build(),
          minuteLabelText: p.get('minuteLabelText').build(),
          restorationId: p.get('restorationId').build(),
          initialEntryMode: p.get('initialEntryMode').build(),
          orientation: p.get('orientation').build(),
          onEntryModeChanged: p.get('onEntryModeChanged').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'initialTime',
      initialTime,
      isNamed: true,
    );
    mateUse(
      'cancelText',
      cancelText,
      isNamed: true,
    );
    mateUse(
      'confirmText',
      confirmText,
      isNamed: true,
    );
    mateUse(
      'helpText',
      helpText,
      isNamed: true,
    );
    mateUse(
      'errorInvalidText',
      errorInvalidText,
      isNamed: true,
    );
    mateUse(
      'hourLabelText',
      hourLabelText,
      isNamed: true,
    );
    mateUse(
      'minuteLabelText',
      minuteLabelText,
      isNamed: true,
    );
    mateUse(
      'restorationId',
      restorationId,
      isNamed: true,
    );
    mateUse(
      'initialEntryMode',
      initialEntryMode,
      isNamed: true,
      defaultValue: _i5.TimePickerEntryMode.dial,
    );
    mateUse(
      'orientation',
      orientation,
      isNamed: true,
    );
    mateUse(
      'onEntryModeChanged',
      onEntryModeChanged,
      isNamed: true,
    );
  }
}
