// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/time_picker.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/material/time.dart';
import 'dart:core';
import 'package:flutter/src/widgets/media_query.dart';

/// class TimePickerDialog extends StatefulWidget
class TimePickerDialog$Mate extends TimePickerDialog with Mate {
  /// TimePickerDialog TimePickerDialog({Key? key, required TimeOfDay initialTime, String? cancelText, String? confirmText, String? helpText, String? errorInvalidText, String? hourLabelText, String? minuteLabelText, String? restorationId, TimePickerEntryMode initialEntryMode = TimePickerEntryMode.dial, Orientation? orientation, void Function(TimePickerEntryMode)? onEntryModeChanged})
  TimePickerDialog$Mate({
    /// optionalParameters: {Key? key} , defaultValue:none
    Key? key,

    /// optionalParameters: {required TimeOfDay initialTime} , defaultValue:none
    required TimeOfDay initialTime,

    /// optionalParameters: {String? cancelText} , defaultValue:none
    String? cancelText,

    /// optionalParameters: {String? confirmText} , defaultValue:none
    String? confirmText,

    /// optionalParameters: {String? helpText} , defaultValue:none
    String? helpText,

    /// optionalParameters: {String? errorInvalidText} , defaultValue:none
    String? errorInvalidText,

    /// optionalParameters: {String? hourLabelText} , defaultValue:none
    String? hourLabelText,

    /// optionalParameters: {String? minuteLabelText} , defaultValue:none
    String? minuteLabelText,

    /// optionalParameters: {String? restorationId} , defaultValue:none
    String? restorationId,

    /// optionalParameters: {TimePickerEntryMode initialEntryMode = TimePickerEntryMode.dial} , defaultValue:unprocessed
    required TimePickerEntryMode initialEntryMode,

    /// optionalParameters: {Orientation? orientation} , defaultValue:none
    Orientation? orientation,

    /// optionalParameters: {void Function(TimePickerEntryMode)? onEntryModeChanged} , defaultValue:none
    EntryModeChangeCallback? onEntryModeChanged,
  }) : super(
          key: key,
          initialTime: initialTime,
          cancelText: cancelText,
          confirmText: confirmText,
          helpText: helpText,
          errorInvalidText: errorInvalidText,
          hourLabelText: hourLabelText,
          minuteLabelText: minuteLabelText,
          restorationId: restorationId,
          initialEntryMode: initialEntryMode,
          orientation: orientation,
          onEntryModeChanged: onEntryModeChanged,
        ) {
    mateCreateName = 'TimePickerDialog';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => TimePickerDialog$Mate(
          key: p.get('key').build(),
          initialTime: p.get('initialTime').build(),
          cancelText: p.get('cancelText').build(),
          confirmText: p.get('confirmText').build(),
          helpText: p.get('helpText').build(),
          errorInvalidText: p.get('errorInvalidText').build(),
          hourLabelText: p.get('hourLabelText').build(),
          minuteLabelText: p.get('minuteLabelText').build(),
          restorationId: p.get('restorationId').build(),
          initialEntryMode: p.get('initialEntryMode').build(),
          orientation: p.get('orientation').build(),
          onEntryModeChanged: p.get('onEntryModeChanged').build(),
        );
    mateUse('key', key);
    mateUse('initialTime', initialTime);
    mateUse('cancelText', cancelText);
    mateUse('confirmText', confirmText);
    mateUse('helpText', helpText);
    mateUse('errorInvalidText', errorInvalidText);
    mateUse('hourLabelText', hourLabelText);
    mateUse('minuteLabelText', minuteLabelText);
    mateUse('restorationId', restorationId);
    mateUse('initialEntryMode', initialEntryMode);
    mateUse('orientation', orientation);
    mateUse('onEntryModeChanged', onEntryModeChanged);
  }
}
