// /// Generated by gen_maters.dart, please don't edit! 

import 'package:flutter/src/material/radio_theme.dart';import 'package:flutter/src/material/material_state.dart';import 'package:flutter/src/services/mouse_cursor.dart';import 'dart:ui';import 'dart:core';import 'package:flutter/src/material/theme_data.dart';import 'package:flutter/src/foundation/key.dart';import 'package:flutter/src/widgets/framework.dart';import 'package:note/mate.dart' show Mate;/// class RadioThemeData with Diagnosticable
class RadioThemeData$Mate extends RadioThemeData with Mate {/// RadioThemeData RadioThemeData({MaterialStateProperty<MouseCursor?>? mouseCursor, MaterialStateProperty<Color?>? fillColor, MaterialStateProperty<Color?>? overlayColor, double? splashRadius, MaterialTapTargetSize? materialTapTargetSize, VisualDensity? visualDensity})
RadioThemeData$Mate({/// optionalParameters: {MaterialStateProperty<MouseCursor?>? mouseCursor} , hasDefaultValue:false, defaultValueCode:null
MaterialStateProperty<MouseCursor?>? mouseCursor, /// optionalParameters: {MaterialStateProperty<Color?>? fillColor} , hasDefaultValue:false, defaultValueCode:null
MaterialStateProperty<Color?>? fillColor, /// optionalParameters: {MaterialStateProperty<Color?>? overlayColor} , hasDefaultValue:false, defaultValueCode:null
MaterialStateProperty<Color?>? overlayColor, /// optionalParameters: {double? splashRadius} , hasDefaultValue:false, defaultValueCode:null
double? splashRadius, /// optionalParameters: {MaterialTapTargetSize? materialTapTargetSize} , hasDefaultValue:false, defaultValueCode:null
MaterialTapTargetSize? materialTapTargetSize, /// optionalParameters: {VisualDensity? visualDensity} , hasDefaultValue:false, defaultValueCode:null
VisualDensity? visualDensity, }) : super(mouseCursor: mouseCursor, fillColor: fillColor, overlayColor: overlayColor, splashRadius: splashRadius, materialTapTargetSize: materialTapTargetSize, visualDensity: visualDensity, ) { mateBuilder = (p) => RadioThemeData$Mate(mouseCursor: p.get('mouseCursor').build(), fillColor: p.get('fillColor').build(), overlayColor: p.get('overlayColor').build(), splashRadius: p.get('splashRadius').build(), materialTapTargetSize: p.get('materialTapTargetSize').build(), visualDensity: p.get('visualDensity').build(), );
matePut('mouseCursor', mouseCursor);
matePut('fillColor', fillColor);
matePut('overlayColor', overlayColor);
matePut('splashRadius', splashRadius);
matePut('materialTapTargetSize', materialTapTargetSize);
matePut('visualDensity', visualDensity); }

 }
/// class RadioTheme extends InheritedWidget
class RadioTheme$Mate extends RadioTheme with Mate {/// RadioTheme RadioTheme({Key? key, required RadioThemeData data, required Widget child})
RadioTheme$Mate({/// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
Key? key, /// optionalParameters: {required RadioThemeData data} , hasDefaultValue:false, defaultValueCode:null
required RadioThemeData data, /// optionalParameters: {required Widget child} , hasDefaultValue:false, defaultValueCode:null
required Widget child, }) : super(key: key, data: data, child: child, ) { mateBuilder = (p) => RadioTheme$Mate(key: p.get('key').build(), data: p.get('data').build(), child: p.get('child').build(), );
matePut('key', key);
matePut('data', data);
matePut('child', child); }

 }
