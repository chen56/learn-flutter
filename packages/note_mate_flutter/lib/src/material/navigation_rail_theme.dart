// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/navigation_rail_theme.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'dart:ui' as _i3;
import 'package:flutter/src/painting/text_style.dart' as _i4;
import 'package:flutter/src/widgets/icon_theme_data.dart' as _i5;
import 'package:flutter/src/material/navigation_rail.dart' as _i6;
import 'package:flutter/src/painting/borders.dart' as _i7;
import 'package:flutter/src/foundation/key.dart' as _i8;
import 'package:flutter/src/widgets/framework.dart' as _i9;

/// class NavigationRailThemeData with Diagnosticable
class NavigationRailThemeData$Mate extends _i1.NavigationRailThemeData with _i2.Mate {
  /// NavigationRailThemeData NavigationRailThemeData({Color? backgroundColor, double? elevation, TextStyle? unselectedLabelTextStyle, TextStyle? selectedLabelTextStyle, IconThemeData? unselectedIconTheme, IconThemeData? selectedIconTheme, double? groupAlignment, NavigationRailLabelType? labelType, bool? useIndicator, Color? indicatorColor, ShapeBorder? indicatorShape, double? minWidth, double? minExtendedWidth})
  NavigationRailThemeData$Mate({
    /// optionalParameters: {Color? backgroundColor} , default:none
    super.backgroundColor,

    /// optionalParameters: {double? elevation} , default:none
    super.elevation,

    /// optionalParameters: {TextStyle? unselectedLabelTextStyle} , default:none
    super.unselectedLabelTextStyle,

    /// optionalParameters: {TextStyle? selectedLabelTextStyle} , default:none
    super.selectedLabelTextStyle,

    /// optionalParameters: {IconThemeData? unselectedIconTheme} , default:none
    super.unselectedIconTheme,

    /// optionalParameters: {IconThemeData? selectedIconTheme} , default:none
    super.selectedIconTheme,

    /// optionalParameters: {double? groupAlignment} , default:none
    super.groupAlignment,

    /// optionalParameters: {NavigationRailLabelType? labelType} , default:none
    super.labelType,

    /// optionalParameters: {bool? useIndicator} , default:none
    super.useIndicator,

    /// optionalParameters: {Color? indicatorColor} , default:none
    super.indicatorColor,

    /// optionalParameters: {ShapeBorder? indicatorShape} , default:none
    super.indicatorShape,

    /// optionalParameters: {double? minWidth} , default:none
    super.minWidth,

    /// optionalParameters: {double? minExtendedWidth} , default:none
    super.minExtendedWidth,
  })  : mateParams = {
          'backgroundColor': _i2.BuilderArg<_i3.Color?>(
            name: 'backgroundColor',
            init: backgroundColor,
            isNamed: true,
          ),
          'elevation': _i2.BuilderArg<double?>(
            name: 'elevation',
            init: elevation,
            isNamed: true,
          ),
          'unselectedLabelTextStyle': _i2.BuilderArg<_i4.TextStyle?>(
            name: 'unselectedLabelTextStyle',
            init: unselectedLabelTextStyle,
            isNamed: true,
          ),
          'selectedLabelTextStyle': _i2.BuilderArg<_i4.TextStyle?>(
            name: 'selectedLabelTextStyle',
            init: selectedLabelTextStyle,
            isNamed: true,
          ),
          'unselectedIconTheme': _i2.BuilderArg<_i5.IconThemeData?>(
            name: 'unselectedIconTheme',
            init: unselectedIconTheme,
            isNamed: true,
          ),
          'selectedIconTheme': _i2.BuilderArg<_i5.IconThemeData?>(
            name: 'selectedIconTheme',
            init: selectedIconTheme,
            isNamed: true,
          ),
          'groupAlignment': _i2.BuilderArg<double?>(
            name: 'groupAlignment',
            init: groupAlignment,
            isNamed: true,
          ),
          'labelType': _i2.BuilderArg<_i6.NavigationRailLabelType?>(
            name: 'labelType',
            init: labelType,
            isNamed: true,
          ),
          'useIndicator': _i2.BuilderArg<bool?>(
            name: 'useIndicator',
            init: useIndicator,
            isNamed: true,
          ),
          'indicatorColor': _i2.BuilderArg<_i3.Color?>(
            name: 'indicatorColor',
            init: indicatorColor,
            isNamed: true,
          ),
          'indicatorShape': _i2.BuilderArg<_i7.ShapeBorder?>(
            name: 'indicatorShape',
            init: indicatorShape,
            isNamed: true,
          ),
          'minWidth': _i2.BuilderArg<double?>(
            name: 'minWidth',
            init: minWidth,
            isNamed: true,
          ),
          'minExtendedWidth': _i2.BuilderArg<double?>(
            name: 'minExtendedWidth',
            init: minExtendedWidth,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'NavigationRailThemeData';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => NavigationRailThemeData$Mate(
          backgroundColor: p.get('backgroundColor').build(),
          elevation: p.get('elevation').build(),
          unselectedLabelTextStyle: p.get('unselectedLabelTextStyle').build(),
          selectedLabelTextStyle: p.get('selectedLabelTextStyle').build(),
          unselectedIconTheme: p.get('unselectedIconTheme').build(),
          selectedIconTheme: p.get('selectedIconTheme').build(),
          groupAlignment: p.get('groupAlignment').build(),
          labelType: p.get('labelType').build(),
          useIndicator: p.get('useIndicator').build(),
          indicatorColor: p.get('indicatorColor').build(),
          indicatorShape: p.get('indicatorShape').build(),
          minWidth: p.get('minWidth').build(),
          minExtendedWidth: p.get('minExtendedWidth').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class NavigationRailTheme extends InheritedTheme
class NavigationRailTheme$Mate extends _i1.NavigationRailTheme with _i2.Mate {
  /// NavigationRailTheme NavigationRailTheme({Key? key, required NavigationRailThemeData data, required Widget child})
  NavigationRailTheme$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required NavigationRailThemeData data} , default:none
    required super.data,

    /// optionalParameters: {required Widget child} , default:none
    required super.child,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i8.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'data': _i2.BuilderArg<_i1.NavigationRailThemeData>(
            name: 'data',
            init: data,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i9.Widget>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'NavigationRailTheme';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => NavigationRailTheme$Mate(
          key: p.get('key').build(),
          data: p.get('data').build(),
          child: p.get('child').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
