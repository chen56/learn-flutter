// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/navigation_drawer.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'dart:core';
import 'package:flutter/src/widgets/framework.dart';
import 'dart:ui';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/foundation/basic_types.dart';

/// class NavigationDrawer extends StatelessWidget
class NavigationDrawer$Mate extends NavigationDrawer with Mate {
  /// NavigationDrawer NavigationDrawer({Key? key, required List<Widget> children, Color? backgroundColor, Color? shadowColor, Color? surfaceTintColor, double? elevation, Color? indicatorColor, ShapeBorder? indicatorShape, void Function(int)? onDestinationSelected, int? selectedIndex = 0})
  NavigationDrawer$Mate({
    /// optionalParameters: {Key? key} , default:none
    Key? key,

    /// optionalParameters: {required List<Widget> children} , default:none
    required List<Widget> children,

    /// optionalParameters: {Color? backgroundColor} , default:none
    Color? backgroundColor,

    /// optionalParameters: {Color? shadowColor} , default:none
    Color? shadowColor,

    /// optionalParameters: {Color? surfaceTintColor} , default:none
    Color? surfaceTintColor,

    /// optionalParameters: {double? elevation} , default:none
    double? elevation,

    /// optionalParameters: {Color? indicatorColor} , default:none
    Color? indicatorColor,

    /// optionalParameters: {ShapeBorder? indicatorShape} , default:none
    ShapeBorder? indicatorShape,

    /// optionalParameters: {void Function(int)? onDestinationSelected} , default:none
    ValueChanged<int>? onDestinationSelected,

    /// optionalParameters: {int? selectedIndex = 0} , default:processed=IntegerLiteralImpl
    int? selectedIndex = 0,
  }) : super(
          key: key,
          children: children,
          backgroundColor: backgroundColor,
          shadowColor: shadowColor,
          surfaceTintColor: surfaceTintColor,
          elevation: elevation,
          indicatorColor: indicatorColor,
          indicatorShape: indicatorShape,
          onDestinationSelected: onDestinationSelected,
          selectedIndex: selectedIndex,
        ) {
    mateCreateName = 'NavigationDrawer';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => NavigationDrawer$Mate(
          key: p.get('key').build(),
          children: p.get('children').build(),
          backgroundColor: p.get('backgroundColor').build(),
          shadowColor: p.get('shadowColor').build(),
          surfaceTintColor: p.get('surfaceTintColor').build(),
          elevation: p.get('elevation').build(),
          indicatorColor: p.get('indicatorColor').build(),
          indicatorShape: p.get('indicatorShape').build(),
          onDestinationSelected: p.get('onDestinationSelected').build(),
          selectedIndex: p.get('selectedIndex').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUseList(
      'children',
      children,
      isNamed: true,
    );
    mateUse(
      'backgroundColor',
      backgroundColor,
      isNamed: true,
    );
    mateUse(
      'shadowColor',
      shadowColor,
      isNamed: true,
    );
    mateUse(
      'surfaceTintColor',
      surfaceTintColor,
      isNamed: true,
    );
    mateUse(
      'elevation',
      elevation,
      isNamed: true,
    );
    mateUse(
      'indicatorColor',
      indicatorColor,
      isNamed: true,
    );
    mateUse(
      'indicatorShape',
      indicatorShape,
      isNamed: true,
    );
    mateUse(
      'onDestinationSelected',
      onDestinationSelected,
      isNamed: true,
    );
    mateUse(
      'selectedIndex',
      selectedIndex,
      isNamed: true,
      defaultValue: 0,
    );
  }
}

/// class NavigationDrawerDestination extends StatelessWidget
class NavigationDrawerDestination$Mate extends NavigationDrawerDestination with Mate {
  /// NavigationDrawerDestination NavigationDrawerDestination({Key? key, Color? backgroundColor, required Widget icon, Widget? selectedIcon, required Widget label})
  NavigationDrawerDestination$Mate({
    /// optionalParameters: {Key? key} , default:none
    Key? key,

    /// optionalParameters: {Color? backgroundColor} , default:none
    Color? backgroundColor,

    /// optionalParameters: {required Widget icon} , default:none
    required Widget icon,

    /// optionalParameters: {Widget? selectedIcon} , default:none
    Widget? selectedIcon,

    /// optionalParameters: {required Widget label} , default:none
    required Widget label,
  }) : super(
          key: key,
          backgroundColor: backgroundColor,
          icon: icon,
          selectedIcon: selectedIcon,
          label: label,
        ) {
    mateCreateName = 'NavigationDrawerDestination';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => NavigationDrawerDestination$Mate(
          key: p.get('key').build(),
          backgroundColor: p.get('backgroundColor').build(),
          icon: p.get('icon').build(),
          selectedIcon: p.get('selectedIcon').build(),
          label: p.get('label').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'backgroundColor',
      backgroundColor,
      isNamed: true,
    );
    mateUse(
      'icon',
      icon,
      isNamed: true,
    );
    mateUse(
      'selectedIcon',
      selectedIcon,
      isNamed: true,
    );
    mateUse(
      'label',
      label,
      isNamed: true,
    );
  }
}
