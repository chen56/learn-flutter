// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/button_bar.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/rendering/flex.dart';
import 'package:flutter/src/material/button_theme.dart';
import 'dart:core';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/painting/basic_types.dart';
import 'package:flutter/src/widgets/framework.dart';

/// class ButtonBar extends StatelessWidget
class ButtonBar$Mate extends ButtonBar with Mate {
  /// ButtonBar ButtonBar({Key? key, MainAxisAlignment? alignment, MainAxisSize? mainAxisSize, ButtonTextTheme? buttonTextTheme, double? buttonMinWidth, double? buttonHeight, EdgeInsetsGeometry? buttonPadding, bool? buttonAlignedDropdown, ButtonBarLayoutBehavior? layoutBehavior, VerticalDirection? overflowDirection, double? overflowButtonSpacing, List<Widget> children = const <Widget>[]})
  ButtonBar$Mate({
    /// optionalParameters: {Key? key} , defaultValue:none
    Key? key,

    /// optionalParameters: {MainAxisAlignment? alignment} , defaultValue:none
    MainAxisAlignment? alignment,

    /// optionalParameters: {MainAxisSize? mainAxisSize} , defaultValue:none
    MainAxisSize? mainAxisSize,

    /// optionalParameters: {ButtonTextTheme? buttonTextTheme} , defaultValue:none
    ButtonTextTheme? buttonTextTheme,

    /// optionalParameters: {double? buttonMinWidth} , defaultValue:none
    double? buttonMinWidth,

    /// optionalParameters: {double? buttonHeight} , defaultValue:none
    double? buttonHeight,

    /// optionalParameters: {EdgeInsetsGeometry? buttonPadding} , defaultValue:none
    EdgeInsetsGeometry? buttonPadding,

    /// optionalParameters: {bool? buttonAlignedDropdown} , defaultValue:none
    bool? buttonAlignedDropdown,

    /// optionalParameters: {ButtonBarLayoutBehavior? layoutBehavior} , defaultValue:none
    ButtonBarLayoutBehavior? layoutBehavior,

    /// optionalParameters: {VerticalDirection? overflowDirection} , defaultValue:none
    VerticalDirection? overflowDirection,

    /// optionalParameters: {double? overflowButtonSpacing} , defaultValue:none
    double? overflowButtonSpacing,

    /// optionalParameters: {List<Widget> children = const <Widget>[]} , defaultValue:unprocessed
    required List<Widget> children,
  }) : super(
          key: key,
          alignment: alignment,
          mainAxisSize: mainAxisSize,
          buttonTextTheme: buttonTextTheme,
          buttonMinWidth: buttonMinWidth,
          buttonHeight: buttonHeight,
          buttonPadding: buttonPadding,
          buttonAlignedDropdown: buttonAlignedDropdown,
          layoutBehavior: layoutBehavior,
          overflowDirection: overflowDirection,
          overflowButtonSpacing: overflowButtonSpacing,
          children: children,
        ) {
    mateCreateName = 'ButtonBar';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => ButtonBar$Mate(
          key: p.get('key').build(),
          alignment: p.get('alignment').build(),
          mainAxisSize: p.get('mainAxisSize').build(),
          buttonTextTheme: p.get('buttonTextTheme').build(),
          buttonMinWidth: p.get('buttonMinWidth').build(),
          buttonHeight: p.get('buttonHeight').build(),
          buttonPadding: p.get('buttonPadding').build(),
          buttonAlignedDropdown: p.get('buttonAlignedDropdown').build(),
          layoutBehavior: p.get('layoutBehavior').build(),
          overflowDirection: p.get('overflowDirection').build(),
          overflowButtonSpacing: p.get('overflowButtonSpacing').build(),
          children: p.get('children').build(),
        );
    mateUse('key', key);
    mateUse('alignment', alignment);
    mateUse('mainAxisSize', mainAxisSize);
    mateUse('buttonTextTheme', buttonTextTheme);
    mateUse('buttonMinWidth', buttonMinWidth);
    mateUse('buttonHeight', buttonHeight);
    mateUse('buttonPadding', buttonPadding);
    mateUse('buttonAlignedDropdown', buttonAlignedDropdown);
    mateUse('layoutBehavior', layoutBehavior);
    mateUse('overflowDirection', overflowDirection);
    mateUse('overflowButtonSpacing', overflowButtonSpacing);
    mateUse('children', children);
  }
}
