// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/button_style.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/material/material_state.dart' as _i3;
import 'package:flutter/src/painting/text_style.dart' as _i4;
import 'dart:ui' as _i5;
import 'package:flutter/src/painting/edge_insets.dart' as _i6;
import 'package:flutter/src/painting/borders.dart' as _i7;
import 'package:flutter/src/services/mouse_cursor.dart' as _i8;
import 'package:flutter/src/material/theme_data.dart' as _i9;
import 'package:flutter/src/painting/alignment.dart' as _i10;
import 'package:flutter/src/material/ink_well.dart' as _i11;

/// class ButtonStyle with Diagnosticable
class ButtonStyle$Mate extends _i1.ButtonStyle with _i2.Mate {
  /// ButtonStyle ButtonStyle({MaterialStateProperty<TextStyle?>? textStyle, MaterialStateProperty<Color?>? backgroundColor, MaterialStateProperty<Color?>? foregroundColor, MaterialStateProperty<Color?>? overlayColor, MaterialStateProperty<Color?>? shadowColor, MaterialStateProperty<Color?>? surfaceTintColor, MaterialStateProperty<double?>? elevation, MaterialStateProperty<EdgeInsetsGeometry?>? padding, MaterialStateProperty<Size?>? minimumSize, MaterialStateProperty<Size?>? fixedSize, MaterialStateProperty<Size?>? maximumSize, MaterialStateProperty<Color?>? iconColor, MaterialStateProperty<double?>? iconSize, MaterialStateProperty<BorderSide?>? side, MaterialStateProperty<OutlinedBorder?>? shape, MaterialStateProperty<MouseCursor?>? mouseCursor, VisualDensity? visualDensity, MaterialTapTargetSize? tapTargetSize, Duration? animationDuration, bool? enableFeedback, AlignmentGeometry? alignment, InteractiveInkFeatureFactory? splashFactory})
  ButtonStyle$Mate({
    /// optionalParameters: {MaterialStateProperty<TextStyle?>? textStyle} , default:none
    super.textStyle,

    /// optionalParameters: {MaterialStateProperty<Color?>? backgroundColor} , default:none
    super.backgroundColor,

    /// optionalParameters: {MaterialStateProperty<Color?>? foregroundColor} , default:none
    super.foregroundColor,

    /// optionalParameters: {MaterialStateProperty<Color?>? overlayColor} , default:none
    super.overlayColor,

    /// optionalParameters: {MaterialStateProperty<Color?>? shadowColor} , default:none
    super.shadowColor,

    /// optionalParameters: {MaterialStateProperty<Color?>? surfaceTintColor} , default:none
    super.surfaceTintColor,

    /// optionalParameters: {MaterialStateProperty<double?>? elevation} , default:none
    super.elevation,

    /// optionalParameters: {MaterialStateProperty<EdgeInsetsGeometry?>? padding} , default:none
    super.padding,

    /// optionalParameters: {MaterialStateProperty<Size?>? minimumSize} , default:none
    super.minimumSize,

    /// optionalParameters: {MaterialStateProperty<Size?>? fixedSize} , default:none
    super.fixedSize,

    /// optionalParameters: {MaterialStateProperty<Size?>? maximumSize} , default:none
    super.maximumSize,

    /// optionalParameters: {MaterialStateProperty<Color?>? iconColor} , default:none
    super.iconColor,

    /// optionalParameters: {MaterialStateProperty<double?>? iconSize} , default:none
    super.iconSize,

    /// optionalParameters: {MaterialStateProperty<BorderSide?>? side} , default:none
    super.side,

    /// optionalParameters: {MaterialStateProperty<OutlinedBorder?>? shape} , default:none
    super.shape,

    /// optionalParameters: {MaterialStateProperty<MouseCursor?>? mouseCursor} , default:none
    super.mouseCursor,

    /// optionalParameters: {VisualDensity? visualDensity} , default:none
    super.visualDensity,

    /// optionalParameters: {MaterialTapTargetSize? tapTargetSize} , default:none
    super.tapTargetSize,

    /// optionalParameters: {Duration? animationDuration} , default:none
    super.animationDuration,

    /// optionalParameters: {bool? enableFeedback} , default:none
    super.enableFeedback,

    /// optionalParameters: {AlignmentGeometry? alignment} , default:none
    super.alignment,

    /// optionalParameters: {InteractiveInkFeatureFactory? splashFactory} , default:none
    super.splashFactory,
  })  : mateParams = {
          'textStyle': _i2.BuilderArg<_i3.MaterialStateProperty<_i4.TextStyle?>?>(
            name: 'textStyle',
            init: textStyle,
            isNamed: true,
          ),
          'backgroundColor': _i2.BuilderArg<_i3.MaterialStateProperty<_i5.Color?>?>(
            name: 'backgroundColor',
            init: backgroundColor,
            isNamed: true,
          ),
          'foregroundColor': _i2.BuilderArg<_i3.MaterialStateProperty<_i5.Color?>?>(
            name: 'foregroundColor',
            init: foregroundColor,
            isNamed: true,
          ),
          'overlayColor': _i2.BuilderArg<_i3.MaterialStateProperty<_i5.Color?>?>(
            name: 'overlayColor',
            init: overlayColor,
            isNamed: true,
          ),
          'shadowColor': _i2.BuilderArg<_i3.MaterialStateProperty<_i5.Color?>?>(
            name: 'shadowColor',
            init: shadowColor,
            isNamed: true,
          ),
          'surfaceTintColor': _i2.BuilderArg<_i3.MaterialStateProperty<_i5.Color?>?>(
            name: 'surfaceTintColor',
            init: surfaceTintColor,
            isNamed: true,
          ),
          'elevation': _i2.BuilderArg<_i3.MaterialStateProperty<double?>?>(
            name: 'elevation',
            init: elevation,
            isNamed: true,
          ),
          'padding': _i2.BuilderArg<_i3.MaterialStateProperty<_i6.EdgeInsetsGeometry?>?>(
            name: 'padding',
            init: padding,
            isNamed: true,
          ),
          'minimumSize': _i2.BuilderArg<_i3.MaterialStateProperty<_i5.Size?>?>(
            name: 'minimumSize',
            init: minimumSize,
            isNamed: true,
          ),
          'fixedSize': _i2.BuilderArg<_i3.MaterialStateProperty<_i5.Size?>?>(
            name: 'fixedSize',
            init: fixedSize,
            isNamed: true,
          ),
          'maximumSize': _i2.BuilderArg<_i3.MaterialStateProperty<_i5.Size?>?>(
            name: 'maximumSize',
            init: maximumSize,
            isNamed: true,
          ),
          'iconColor': _i2.BuilderArg<_i3.MaterialStateProperty<_i5.Color?>?>(
            name: 'iconColor',
            init: iconColor,
            isNamed: true,
          ),
          'iconSize': _i2.BuilderArg<_i3.MaterialStateProperty<double?>?>(
            name: 'iconSize',
            init: iconSize,
            isNamed: true,
          ),
          'side': _i2.BuilderArg<_i3.MaterialStateProperty<_i7.BorderSide?>?>(
            name: 'side',
            init: side,
            isNamed: true,
          ),
          'shape': _i2.BuilderArg<_i3.MaterialStateProperty<_i7.OutlinedBorder?>?>(
            name: 'shape',
            init: shape,
            isNamed: true,
          ),
          'mouseCursor': _i2.BuilderArg<_i3.MaterialStateProperty<_i8.MouseCursor?>?>(
            name: 'mouseCursor',
            init: mouseCursor,
            isNamed: true,
          ),
          'visualDensity': _i2.BuilderArg<_i9.VisualDensity?>(
            name: 'visualDensity',
            init: visualDensity,
            isNamed: true,
          ),
          'tapTargetSize': _i2.BuilderArg<_i9.MaterialTapTargetSize?>(
            name: 'tapTargetSize',
            init: tapTargetSize,
            isNamed: true,
          ),
          'animationDuration': _i2.BuilderArg<Duration?>(
            name: 'animationDuration',
            init: animationDuration,
            isNamed: true,
          ),
          'enableFeedback': _i2.BuilderArg<bool?>(
            name: 'enableFeedback',
            init: enableFeedback,
            isNamed: true,
          ),
          'alignment': _i2.BuilderArg<_i10.AlignmentGeometry?>(
            name: 'alignment',
            init: alignment,
            isNamed: true,
          ),
          'splashFactory': _i2.BuilderArg<_i11.InteractiveInkFeatureFactory?>(
            name: 'splashFactory',
            init: splashFactory,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'ButtonStyle';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => ButtonStyle$Mate(
          textStyle: p.get('textStyle').build(),
          backgroundColor: p.get('backgroundColor').build(),
          foregroundColor: p.get('foregroundColor').build(),
          overlayColor: p.get('overlayColor').build(),
          shadowColor: p.get('shadowColor').build(),
          surfaceTintColor: p.get('surfaceTintColor').build(),
          elevation: p.get('elevation').build(),
          padding: p.get('padding').build(),
          minimumSize: p.get('minimumSize').build(),
          fixedSize: p.get('fixedSize').build(),
          maximumSize: p.get('maximumSize').build(),
          iconColor: p.get('iconColor').build(),
          iconSize: p.get('iconSize').build(),
          side: p.get('side').build(),
          shape: p.get('shape').build(),
          mouseCursor: p.get('mouseCursor').build(),
          visualDensity: p.get('visualDensity').build(),
          tapTargetSize: p.get('tapTargetSize').build(),
          animationDuration: p.get('animationDuration').build(),
          enableFeedback: p.get('enableFeedback').build(),
          alignment: p.get('alignment').build(),
          splashFactory: p.get('splashFactory').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
