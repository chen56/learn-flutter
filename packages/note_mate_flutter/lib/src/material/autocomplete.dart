// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/autocomplete.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/widgets/autocomplete.dart' as _i4;
import 'package:flutter/cupertino.dart' as _i5;
import 'package:flutter/src/services/text_input.dart' as _i6;

/// class Autocomplete<T extends Object> extends StatelessWidget
class Autocomplete$Mate<T extends Object> extends _i1.Autocomplete<T> with _i2.Mate {
  /// Autocomplete<T> Autocomplete({Key? key, required FutureOr<Iterable<T>> Function(TextEditingValue) optionsBuilder, String Function(T) displayStringForOption = RawAutocomplete.defaultStringForOption, Widget Function(BuildContext, TextEditingController, FocusNode, void Function()) fieldViewBuilder = _defaultFieldViewBuilder, void Function(T)? onSelected, double optionsMaxHeight = 200.0, Widget Function(BuildContext, void Function(T), Iterable<T>)? optionsViewBuilder, TextEditingValue? initialValue})
  Autocomplete$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required FutureOr<Iterable<T>> Function(TextEditingValue) optionsBuilder} , default:none
    required super.optionsBuilder,

    /// optionalParameters: {String Function(T) displayStringForOption = RawAutocomplete.defaultStringForOption} , default:processed=PrefixedIdentifierImpl
    super.displayStringForOption,

    /// optionalParameters: {Widget Function(BuildContext, TextEditingController, FocusNode, void Function()) fieldViewBuilder = _defaultFieldViewBuilder} , default:unprocessed=SimpleIdentifierImpl
    super.fieldViewBuilder,

    /// optionalParameters: {void Function(T)? onSelected} , default:none
    super.onSelected,

    /// optionalParameters: {double optionsMaxHeight = 200.0} , default:processed=DoubleLiteralImpl
    super.optionsMaxHeight,

    /// optionalParameters: {Widget Function(BuildContext, void Function(T), Iterable<T>)? optionsViewBuilder} , default:none
    super.optionsViewBuilder,

    /// optionalParameters: {TextEditingValue? initialValue} , default:none
    super.initialValue,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'optionsBuilder': _i2.BuilderArg<_i4.AutocompleteOptionsBuilder<T>>(
            name: 'optionsBuilder',
            init: optionsBuilder,
            isNamed: true,
          ),
          'displayStringForOption': _i2.BuilderArg<_i4.AutocompleteOptionToString<T>>(
            name: 'displayStringForOption',
            init: displayStringForOption,
            isNamed: true,
            defaultValue: _i5.RawAutocomplete.defaultStringForOption,
          ),
          'fieldViewBuilder': _i2.BuilderArg<_i4.AutocompleteFieldViewBuilder>(
            name: 'fieldViewBuilder',
            init: fieldViewBuilder,
            isNamed: true,
          ),
          'onSelected': _i2.BuilderArg<_i4.AutocompleteOnSelected<T>?>(
            name: 'onSelected',
            init: onSelected,
            isNamed: true,
          ),
          'optionsMaxHeight': _i2.BuilderArg<double>(
            name: 'optionsMaxHeight',
            init: optionsMaxHeight,
            isNamed: true,
            defaultValue: 200.0,
          ),
          'optionsViewBuilder': _i2.BuilderArg<_i4.AutocompleteOptionsViewBuilder<T>?>(
            name: 'optionsViewBuilder',
            init: optionsViewBuilder,
            isNamed: true,
          ),
          'initialValue': _i2.BuilderArg<_i6.TextEditingValue?>(
            name: 'initialValue',
            init: initialValue,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'Autocomplete';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => Autocomplete$Mate<T>(
          key: p.get('key').build(),
          optionsBuilder: p.get('optionsBuilder').build(),
          displayStringForOption: p.get('displayStringForOption').build(),
          fieldViewBuilder: p.get('fieldViewBuilder').build(),
          onSelected: p.get('onSelected').build(),
          optionsMaxHeight: p.get('optionsMaxHeight').build(),
          optionsViewBuilder: p.get('optionsViewBuilder').build(),
          initialValue: p.get('initialValue').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
