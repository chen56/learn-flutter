// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/menu_button_theme.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/material/button_style.dart' as _i3;
import 'package:flutter/src/foundation/key.dart' as _i4;
import 'package:flutter/src/widgets/framework.dart' as _i5;

/// class MenuButtonThemeData with Diagnosticable
class MenuButtonThemeData$Mate extends _i1.MenuButtonThemeData with _i2.Mate {
  /// MenuButtonThemeData MenuButtonThemeData({ButtonStyle? style})
  MenuButtonThemeData$Mate(
      {
      /// optionalParameters: {ButtonStyle? style} , default:none
      _i3.ButtonStyle? style})
      : super(style: style) {
    mateBuilderName = 'MenuButtonThemeData';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => MenuButtonThemeData$Mate(style: p.get('style').build());
    mateUse(
      'style',
      style,
      isNamed: true,
    );
  }
}

/// class MenuButtonTheme extends InheritedTheme
class MenuButtonTheme$Mate extends _i1.MenuButtonTheme with _i2.Mate {
  /// MenuButtonTheme MenuButtonTheme({Key? key, required MenuButtonThemeData data, required Widget child})
  MenuButtonTheme$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i4.Key? key,

    /// optionalParameters: {required MenuButtonThemeData data} , default:none
    required _i1.MenuButtonThemeData data,

    /// optionalParameters: {required Widget child} , default:none
    required _i5.Widget child,
  }) : super(
          key: key,
          data: data,
          child: child,
        ) {
    mateBuilderName = 'MenuButtonTheme';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => MenuButtonTheme$Mate(
          key: p.get('key').build(),
          data: p.get('data').build(),
          child: p.get('child').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'data',
      data,
      isNamed: true,
    );
    mateUse(
      'child',
      child,
      isNamed: true,
    );
  }
}
