// /// Generated by gen_maters.dart, please don't edit! 

import 'package:flutter/src/material/data_table_theme.dart';import 'package:flutter/src/painting/decoration.dart';import 'package:flutter/src/material/material_state.dart';import 'dart:ui';import 'dart:core';import 'package:flutter/src/painting/text_style.dart';import 'package:flutter/src/foundation/key.dart';import 'package:flutter/src/widgets/framework.dart';import 'package:note/mate.dart' show Mate;/// class DataTableThemeData with Diagnosticable
class DataTableThemeData$Mate extends DataTableThemeData with Mate {/// DataTableThemeData DataTableThemeData({Decoration? decoration, MaterialStateProperty<Color?>? dataRowColor, double? dataRowHeight, double? dataRowMinHeight, double? dataRowMaxHeight, TextStyle? dataTextStyle, MaterialStateProperty<Color?>? headingRowColor, double? headingRowHeight, TextStyle? headingTextStyle, double? horizontalMargin, double? columnSpacing, double? dividerThickness, double? checkboxHorizontalMargin})
DataTableThemeData$Mate({/// optionalParameters: {Decoration? decoration} , hasDefaultValue:false, defaultValueCode:null
Decoration? decoration, /// optionalParameters: {MaterialStateProperty<Color?>? dataRowColor} , hasDefaultValue:false, defaultValueCode:null
MaterialStateProperty<Color?>? dataRowColor, /// optionalParameters: {double? dataRowMinHeight} , hasDefaultValue:false, defaultValueCode:null
double? dataRowMinHeight, /// optionalParameters: {double? dataRowMaxHeight} , hasDefaultValue:false, defaultValueCode:null
double? dataRowMaxHeight, /// optionalParameters: {TextStyle? dataTextStyle} , hasDefaultValue:false, defaultValueCode:null
TextStyle? dataTextStyle, /// optionalParameters: {MaterialStateProperty<Color?>? headingRowColor} , hasDefaultValue:false, defaultValueCode:null
MaterialStateProperty<Color?>? headingRowColor, /// optionalParameters: {double? headingRowHeight} , hasDefaultValue:false, defaultValueCode:null
double? headingRowHeight, /// optionalParameters: {TextStyle? headingTextStyle} , hasDefaultValue:false, defaultValueCode:null
TextStyle? headingTextStyle, /// optionalParameters: {double? horizontalMargin} , hasDefaultValue:false, defaultValueCode:null
double? horizontalMargin, /// optionalParameters: {double? columnSpacing} , hasDefaultValue:false, defaultValueCode:null
double? columnSpacing, /// optionalParameters: {double? dividerThickness} , hasDefaultValue:false, defaultValueCode:null
double? dividerThickness, /// optionalParameters: {double? checkboxHorizontalMargin} , hasDefaultValue:false, defaultValueCode:null
double? checkboxHorizontalMargin, }) : super(decoration: decoration, dataRowColor: dataRowColor, dataRowMinHeight: dataRowMinHeight, dataRowMaxHeight: dataRowMaxHeight, dataTextStyle: dataTextStyle, headingRowColor: headingRowColor, headingRowHeight: headingRowHeight, headingTextStyle: headingTextStyle, horizontalMargin: horizontalMargin, columnSpacing: columnSpacing, dividerThickness: dividerThickness, checkboxHorizontalMargin: checkboxHorizontalMargin, ) { mateBuilder = (p) => DataTableThemeData$Mate(decoration: p.get('decoration').build(), dataRowColor: p.get('dataRowColor').build(), dataRowMinHeight: p.get('dataRowMinHeight').build(), dataRowMaxHeight: p.get('dataRowMaxHeight').build(), dataTextStyle: p.get('dataTextStyle').build(), headingRowColor: p.get('headingRowColor').build(), headingRowHeight: p.get('headingRowHeight').build(), headingTextStyle: p.get('headingTextStyle').build(), horizontalMargin: p.get('horizontalMargin').build(), columnSpacing: p.get('columnSpacing').build(), dividerThickness: p.get('dividerThickness').build(), checkboxHorizontalMargin: p.get('checkboxHorizontalMargin').build(), );
matePut('decoration', decoration);
matePut('dataRowColor', dataRowColor);
matePut('dataRowMinHeight', dataRowMinHeight);
matePut('dataRowMaxHeight', dataRowMaxHeight);
matePut('dataTextStyle', dataTextStyle);
matePut('headingRowColor', headingRowColor);
matePut('headingRowHeight', headingRowHeight);
matePut('headingTextStyle', headingTextStyle);
matePut('horizontalMargin', horizontalMargin);
matePut('columnSpacing', columnSpacing);
matePut('dividerThickness', dividerThickness);
matePut('checkboxHorizontalMargin', checkboxHorizontalMargin); }

 }
/// class DataTableTheme extends InheritedWidget
class DataTableTheme$Mate extends DataTableTheme with Mate {/// DataTableTheme DataTableTheme({Key? key, required DataTableThemeData data, required Widget child})
DataTableTheme$Mate({/// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
Key? key, /// optionalParameters: {required DataTableThemeData data} , hasDefaultValue:false, defaultValueCode:null
required DataTableThemeData data, /// optionalParameters: {required Widget child} , hasDefaultValue:false, defaultValueCode:null
required Widget child, }) : super(key: key, data: data, child: child, ) { mateBuilder = (p) => DataTableTheme$Mate(key: p.get('key').build(), data: p.get('data').build(), child: p.get('child').build(), );
matePut('key', key);
matePut('data', data);
matePut('child', child); }

 }
