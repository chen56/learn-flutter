// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/badge.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'dart:ui' as _i4;
import 'package:flutter/src/painting/text_style.dart' as _i5;
import 'package:flutter/src/painting/edge_insets.dart' as _i6;
import 'package:flutter/src/painting/alignment.dart' as _i7;
import 'package:flutter/src/widgets/framework.dart' as _i8;

/// class Badge extends StatelessWidget
class Badge$Mate extends _i1.Badge with _i2.Mate {
  /// Badge Badge({Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsetsGeometry? padding, AlignmentGeometry? alignment, Offset? offset, Widget? label, bool isLabelVisible = true, Widget? child})
  Badge$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {Color? backgroundColor} , default:none
    _i4.Color? backgroundColor,

    /// optionalParameters: {Color? textColor} , default:none
    _i4.Color? textColor,

    /// optionalParameters: {double? smallSize} , default:none
    double? smallSize,

    /// optionalParameters: {double? largeSize} , default:none
    double? largeSize,

    /// optionalParameters: {TextStyle? textStyle} , default:none
    _i5.TextStyle? textStyle,

    /// optionalParameters: {EdgeInsetsGeometry? padding} , default:none
    _i6.EdgeInsetsGeometry? padding,

    /// optionalParameters: {AlignmentGeometry? alignment} , default:none
    _i7.AlignmentGeometry? alignment,

    /// optionalParameters: {Offset? offset} , default:none
    _i4.Offset? offset,

    /// optionalParameters: {Widget? label} , default:none
    _i8.Widget? label,

    /// optionalParameters: {bool isLabelVisible = true} , default:processed=BooleanLiteralImpl
    bool isLabelVisible = true,

    /// optionalParameters: {Widget? child} , default:none
    _i8.Widget? child,
  }) : super(
          key: key,
          backgroundColor: backgroundColor,
          textColor: textColor,
          smallSize: smallSize,
          largeSize: largeSize,
          textStyle: textStyle,
          padding: padding,
          alignment: alignment,
          offset: offset,
          label: label,
          isLabelVisible: isLabelVisible,
          child: child,
        ) {
    mateBuilderName = 'Badge';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => Badge$Mate(
          key: p.get('key').build(),
          backgroundColor: p.get('backgroundColor').build(),
          textColor: p.get('textColor').build(),
          smallSize: p.get('smallSize').build(),
          largeSize: p.get('largeSize').build(),
          textStyle: p.get('textStyle').build(),
          padding: p.get('padding').build(),
          alignment: p.get('alignment').build(),
          offset: p.get('offset').build(),
          label: p.get('label').build(),
          isLabelVisible: p.get('isLabelVisible').build(),
          child: p.get('child').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'backgroundColor',
      backgroundColor,
      isNamed: true,
    );
    mateUse(
      'textColor',
      textColor,
      isNamed: true,
    );
    mateUse(
      'smallSize',
      smallSize,
      isNamed: true,
    );
    mateUse(
      'largeSize',
      largeSize,
      isNamed: true,
    );
    mateUse(
      'textStyle',
      textStyle,
      isNamed: true,
    );
    mateUse(
      'padding',
      padding,
      isNamed: true,
    );
    mateUse(
      'alignment',
      alignment,
      isNamed: true,
    );
    mateUse(
      'offset',
      offset,
      isNamed: true,
    );
    mateUse(
      'label',
      label,
      isNamed: true,
    );
    mateUse(
      'isLabelVisible',
      isLabelVisible,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'child',
      child,
      isNamed: true,
    );
  }

  /// Badge Badge.count({Key? key, Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsetsGeometry? padding, AlignmentGeometry? alignment, Offset? offset, required int count, bool isLabelVisible = true, Widget? child})
  Badge$Mate.count({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {Color? backgroundColor} , default:none
    _i4.Color? backgroundColor,

    /// optionalParameters: {Color? textColor} , default:none
    _i4.Color? textColor,

    /// optionalParameters: {double? smallSize} , default:none
    double? smallSize,

    /// optionalParameters: {double? largeSize} , default:none
    double? largeSize,

    /// optionalParameters: {TextStyle? textStyle} , default:none
    _i5.TextStyle? textStyle,

    /// optionalParameters: {EdgeInsetsGeometry? padding} , default:none
    _i6.EdgeInsetsGeometry? padding,

    /// optionalParameters: {AlignmentGeometry? alignment} , default:none
    _i7.AlignmentGeometry? alignment,

    /// optionalParameters: {Offset? offset} , default:none
    _i4.Offset? offset,

    /// optionalParameters: {required int count} , default:none
    required int count,

    /// optionalParameters: {bool isLabelVisible = true} , default:processed=BooleanLiteralImpl
    bool isLabelVisible = true,

    /// optionalParameters: {Widget? child} , default:none
    _i8.Widget? child,
  }) : super.count(
          key: key,
          backgroundColor: backgroundColor,
          textColor: textColor,
          smallSize: smallSize,
          largeSize: largeSize,
          textStyle: textStyle,
          padding: padding,
          alignment: alignment,
          offset: offset,
          count: count,
          isLabelVisible: isLabelVisible,
          child: child,
        ) {
    mateBuilderName = 'Badge.count';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => Badge$Mate.count(
          key: p.get('key').build(),
          backgroundColor: p.get('backgroundColor').build(),
          textColor: p.get('textColor').build(),
          smallSize: p.get('smallSize').build(),
          largeSize: p.get('largeSize').build(),
          textStyle: p.get('textStyle').build(),
          padding: p.get('padding').build(),
          alignment: p.get('alignment').build(),
          offset: p.get('offset').build(),
          count: p.get('count').build(),
          isLabelVisible: p.get('isLabelVisible').build(),
          child: p.get('child').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'backgroundColor',
      backgroundColor,
      isNamed: true,
    );
    mateUse(
      'textColor',
      textColor,
      isNamed: true,
    );
    mateUse(
      'smallSize',
      smallSize,
      isNamed: true,
    );
    mateUse(
      'largeSize',
      largeSize,
      isNamed: true,
    );
    mateUse(
      'textStyle',
      textStyle,
      isNamed: true,
    );
    mateUse(
      'padding',
      padding,
      isNamed: true,
    );
    mateUse(
      'alignment',
      alignment,
      isNamed: true,
    );
    mateUse(
      'offset',
      offset,
      isNamed: true,
    );
    mateUse(
      'count',
      count,
      isNamed: true,
    );
    mateUse(
      'isLabelVisible',
      isLabelVisible,
      isNamed: true,
      defaultValue: true,
    );
    mateUse(
      'child',
      child,
      isNamed: true,
    );
  }
}
