// /// Generated by gen_maters.dart, please don't edit! 

import 'package:flutter/src/material/expansion_tile_theme.dart';import 'dart:ui';import 'package:flutter/src/painting/edge_insets.dart';import 'package:flutter/src/painting/alignment.dart';import 'package:flutter/src/painting/borders.dart';import 'package:flutter/src/foundation/key.dart';import 'package:flutter/src/widgets/framework.dart';import 'package:note/mate.dart' show Mate;/// class ExpansionTileThemeData with Diagnosticable
class ExpansionTileThemeData$Mate extends ExpansionTileThemeData with Mate {/// ExpansionTileThemeData ExpansionTileThemeData({Color? backgroundColor, Color? collapsedBackgroundColor, EdgeInsetsGeometry? tilePadding, AlignmentGeometry? expandedAlignment, EdgeInsetsGeometry? childrenPadding, Color? iconColor, Color? collapsedIconColor, Color? textColor, Color? collapsedTextColor, ShapeBorder? shape, ShapeBorder? collapsedShape, Clip? clipBehavior})
ExpansionTileThemeData$Mate({/// optionalParameters: {Color? backgroundColor} , hasDefaultValue:false, defaultValueCode:null
Color? backgroundColor, /// optionalParameters: {Color? collapsedBackgroundColor} , hasDefaultValue:false, defaultValueCode:null
Color? collapsedBackgroundColor, /// optionalParameters: {EdgeInsetsGeometry? tilePadding} , hasDefaultValue:false, defaultValueCode:null
EdgeInsetsGeometry? tilePadding, /// optionalParameters: {AlignmentGeometry? expandedAlignment} , hasDefaultValue:false, defaultValueCode:null
AlignmentGeometry? expandedAlignment, /// optionalParameters: {EdgeInsetsGeometry? childrenPadding} , hasDefaultValue:false, defaultValueCode:null
EdgeInsetsGeometry? childrenPadding, /// optionalParameters: {Color? iconColor} , hasDefaultValue:false, defaultValueCode:null
Color? iconColor, /// optionalParameters: {Color? collapsedIconColor} , hasDefaultValue:false, defaultValueCode:null
Color? collapsedIconColor, /// optionalParameters: {Color? textColor} , hasDefaultValue:false, defaultValueCode:null
Color? textColor, /// optionalParameters: {Color? collapsedTextColor} , hasDefaultValue:false, defaultValueCode:null
Color? collapsedTextColor, /// optionalParameters: {ShapeBorder? shape} , hasDefaultValue:false, defaultValueCode:null
ShapeBorder? shape, /// optionalParameters: {ShapeBorder? collapsedShape} , hasDefaultValue:false, defaultValueCode:null
ShapeBorder? collapsedShape, /// optionalParameters: {Clip? clipBehavior} , hasDefaultValue:false, defaultValueCode:null
Clip? clipBehavior, }) : super(backgroundColor: backgroundColor, collapsedBackgroundColor: collapsedBackgroundColor, tilePadding: tilePadding, expandedAlignment: expandedAlignment, childrenPadding: childrenPadding, iconColor: iconColor, collapsedIconColor: collapsedIconColor, textColor: textColor, collapsedTextColor: collapsedTextColor, shape: shape, collapsedShape: collapsedShape, clipBehavior: clipBehavior, ) { mateBuilder = (p) => ExpansionTileThemeData$Mate(backgroundColor: p.get('backgroundColor').build(), collapsedBackgroundColor: p.get('collapsedBackgroundColor').build(), tilePadding: p.get('tilePadding').build(), expandedAlignment: p.get('expandedAlignment').build(), childrenPadding: p.get('childrenPadding').build(), iconColor: p.get('iconColor').build(), collapsedIconColor: p.get('collapsedIconColor').build(), textColor: p.get('textColor').build(), collapsedTextColor: p.get('collapsedTextColor').build(), shape: p.get('shape').build(), collapsedShape: p.get('collapsedShape').build(), clipBehavior: p.get('clipBehavior').build(), );
matePut('backgroundColor', backgroundColor);
matePut('collapsedBackgroundColor', collapsedBackgroundColor);
matePut('tilePadding', tilePadding);
matePut('expandedAlignment', expandedAlignment);
matePut('childrenPadding', childrenPadding);
matePut('iconColor', iconColor);
matePut('collapsedIconColor', collapsedIconColor);
matePut('textColor', textColor);
matePut('collapsedTextColor', collapsedTextColor);
matePut('shape', shape);
matePut('collapsedShape', collapsedShape);
matePut('clipBehavior', clipBehavior); }

 }
/// class ExpansionTileTheme extends InheritedTheme
class ExpansionTileTheme$Mate extends ExpansionTileTheme with Mate {/// ExpansionTileTheme ExpansionTileTheme({Key? key, required ExpansionTileThemeData data, required Widget child})
ExpansionTileTheme$Mate({/// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
Key? key, /// optionalParameters: {required ExpansionTileThemeData data} , hasDefaultValue:false, defaultValueCode:null
required ExpansionTileThemeData data, /// optionalParameters: {required Widget child} , hasDefaultValue:false, defaultValueCode:null
required Widget child, }) : super(key: key, data: data, child: child, ) { mateBuilder = (p) => ExpansionTileTheme$Mate(key: p.get('key').build(), data: p.get('data').build(), child: p.get('child').build(), );
matePut('key', key);
matePut('data', data);
matePut('child', child); }

 }
