// /// Generated by gen_maters.dart, please don't edit! 

import 'package:flutter/src/material/snack_bar_theme.dart';import 'dart:ui';import 'package:flutter/src/painting/text_style.dart';import 'dart:core';import 'package:flutter/src/painting/borders.dart';import 'package:flutter/src/painting/edge_insets.dart';import 'package:note/mate.dart' show Mate;/// class SnackBarThemeData with Diagnosticable
class SnackBarThemeData$Mate extends SnackBarThemeData with Mate {/// SnackBarThemeData SnackBarThemeData({Color? backgroundColor, Color? actionTextColor, Color? disabledActionTextColor, TextStyle? contentTextStyle, double? elevation, ShapeBorder? shape, SnackBarBehavior? behavior, double? width, EdgeInsets? insetPadding, bool? showCloseIcon, Color? closeIconColor, double? actionOverflowThreshold})
SnackBarThemeData$Mate({/// optionalParameters: {Color? backgroundColor} , hasDefaultValue:false, defaultValueCode:null
Color? backgroundColor, /// optionalParameters: {Color? actionTextColor} , hasDefaultValue:false, defaultValueCode:null
Color? actionTextColor, /// optionalParameters: {Color? disabledActionTextColor} , hasDefaultValue:false, defaultValueCode:null
Color? disabledActionTextColor, /// optionalParameters: {TextStyle? contentTextStyle} , hasDefaultValue:false, defaultValueCode:null
TextStyle? contentTextStyle, /// optionalParameters: {double? elevation} , hasDefaultValue:false, defaultValueCode:null
double? elevation, /// optionalParameters: {ShapeBorder? shape} , hasDefaultValue:false, defaultValueCode:null
ShapeBorder? shape, /// optionalParameters: {SnackBarBehavior? behavior} , hasDefaultValue:false, defaultValueCode:null
SnackBarBehavior? behavior, /// optionalParameters: {double? width} , hasDefaultValue:false, defaultValueCode:null
double? width, /// optionalParameters: {EdgeInsets? insetPadding} , hasDefaultValue:false, defaultValueCode:null
EdgeInsets? insetPadding, /// optionalParameters: {bool? showCloseIcon} , hasDefaultValue:false, defaultValueCode:null
bool? showCloseIcon, /// optionalParameters: {Color? closeIconColor} , hasDefaultValue:false, defaultValueCode:null
Color? closeIconColor, /// optionalParameters: {double? actionOverflowThreshold} , hasDefaultValue:false, defaultValueCode:null
double? actionOverflowThreshold, }) : super(backgroundColor: backgroundColor, actionTextColor: actionTextColor, disabledActionTextColor: disabledActionTextColor, contentTextStyle: contentTextStyle, elevation: elevation, shape: shape, behavior: behavior, width: width, insetPadding: insetPadding, showCloseIcon: showCloseIcon, closeIconColor: closeIconColor, actionOverflowThreshold: actionOverflowThreshold, ) { mateBuilder = (p) => SnackBarThemeData$Mate(backgroundColor: p.get('backgroundColor').build(), actionTextColor: p.get('actionTextColor').build(), disabledActionTextColor: p.get('disabledActionTextColor').build(), contentTextStyle: p.get('contentTextStyle').build(), elevation: p.get('elevation').build(), shape: p.get('shape').build(), behavior: p.get('behavior').build(), width: p.get('width').build(), insetPadding: p.get('insetPadding').build(), showCloseIcon: p.get('showCloseIcon').build(), closeIconColor: p.get('closeIconColor').build(), actionOverflowThreshold: p.get('actionOverflowThreshold').build(), );
matePut('backgroundColor', backgroundColor);
matePut('actionTextColor', actionTextColor);
matePut('disabledActionTextColor', disabledActionTextColor);
matePut('contentTextStyle', contentTextStyle);
matePut('elevation', elevation);
matePut('shape', shape);
matePut('behavior', behavior);
matePut('width', width);
matePut('insetPadding', insetPadding);
matePut('showCloseIcon', showCloseIcon);
matePut('closeIconColor', closeIconColor);
matePut('actionOverflowThreshold', actionOverflowThreshold); }

 }
