// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/snack_bar_theme.dart';
import 'package:note/mate.dart';
import 'dart:ui';
import 'package:flutter/src/painting/text_style.dart';
import 'dart:core';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/painting/edge_insets.dart';

/// class SnackBarThemeData with Diagnosticable
class SnackBarThemeData$Mate extends SnackBarThemeData with Mate {
  /// SnackBarThemeData SnackBarThemeData({Color? backgroundColor, Color? actionTextColor, Color? disabledActionTextColor, TextStyle? contentTextStyle, double? elevation, ShapeBorder? shape, SnackBarBehavior? behavior, double? width, EdgeInsets? insetPadding, bool? showCloseIcon, Color? closeIconColor, double? actionOverflowThreshold})
  SnackBarThemeData$Mate({
    /// optionalParameters: {Color? backgroundColor} , defaultValue:none
    Color? backgroundColor,

    /// optionalParameters: {Color? actionTextColor} , defaultValue:none
    Color? actionTextColor,

    /// optionalParameters: {Color? disabledActionTextColor} , defaultValue:none
    Color? disabledActionTextColor,

    /// optionalParameters: {TextStyle? contentTextStyle} , defaultValue:none
    TextStyle? contentTextStyle,

    /// optionalParameters: {double? elevation} , defaultValue:none
    double? elevation,

    /// optionalParameters: {ShapeBorder? shape} , defaultValue:none
    ShapeBorder? shape,

    /// optionalParameters: {SnackBarBehavior? behavior} , defaultValue:none
    SnackBarBehavior? behavior,

    /// optionalParameters: {double? width} , defaultValue:none
    double? width,

    /// optionalParameters: {EdgeInsets? insetPadding} , defaultValue:none
    EdgeInsets? insetPadding,

    /// optionalParameters: {bool? showCloseIcon} , defaultValue:none
    bool? showCloseIcon,

    /// optionalParameters: {Color? closeIconColor} , defaultValue:none
    Color? closeIconColor,

    /// optionalParameters: {double? actionOverflowThreshold} , defaultValue:none
    double? actionOverflowThreshold,
  }) : super(
          backgroundColor: backgroundColor,
          actionTextColor: actionTextColor,
          disabledActionTextColor: disabledActionTextColor,
          contentTextStyle: contentTextStyle,
          elevation: elevation,
          shape: shape,
          behavior: behavior,
          width: width,
          insetPadding: insetPadding,
          showCloseIcon: showCloseIcon,
          closeIconColor: closeIconColor,
          actionOverflowThreshold: actionOverflowThreshold,
        ) {
    mateCreateName = 'SnackBarThemeData';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => SnackBarThemeData$Mate(
          backgroundColor: p.get('backgroundColor').build(),
          actionTextColor: p.get('actionTextColor').build(),
          disabledActionTextColor: p.get('disabledActionTextColor').build(),
          contentTextStyle: p.get('contentTextStyle').build(),
          elevation: p.get('elevation').build(),
          shape: p.get('shape').build(),
          behavior: p.get('behavior').build(),
          width: p.get('width').build(),
          insetPadding: p.get('insetPadding').build(),
          showCloseIcon: p.get('showCloseIcon').build(),
          closeIconColor: p.get('closeIconColor').build(),
          actionOverflowThreshold: p.get('actionOverflowThreshold').build(),
        );
    mateUse('backgroundColor', backgroundColor, isNamed: true);
    mateUse('actionTextColor', actionTextColor, isNamed: true);
    mateUse('disabledActionTextColor', disabledActionTextColor, isNamed: true);
    mateUse('contentTextStyle', contentTextStyle, isNamed: true);
    mateUse('elevation', elevation, isNamed: true);
    mateUse('shape', shape, isNamed: true);
    mateUse('behavior', behavior, isNamed: true);
    mateUse('width', width, isNamed: true);
    mateUse('insetPadding', insetPadding, isNamed: true);
    mateUse('showCloseIcon', showCloseIcon, isNamed: true);
    mateUse('closeIconColor', closeIconColor, isNamed: true);
    mateUse('actionOverflowThreshold', actionOverflowThreshold, isNamed: true);
  }
}
