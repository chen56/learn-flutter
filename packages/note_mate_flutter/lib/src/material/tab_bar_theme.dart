// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/tab_bar_theme.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/painting/decoration.dart';
import 'dart:ui';
import 'package:flutter/src/material/tabs.dart';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/painting/text_style.dart';
import 'package:flutter/src/material/material_state.dart';
import 'package:flutter/src/material/ink_well.dart';
import 'package:flutter/src/services/mouse_cursor.dart';

/// class TabBarTheme with Diagnosticable
class TabBarTheme$Mate extends TabBarTheme with Mate {
  /// TabBarTheme TabBarTheme({Decoration? indicator, Color? indicatorColor, TabBarIndicatorSize? indicatorSize, Color? dividerColor, Color? labelColor, EdgeInsetsGeometry? labelPadding, TextStyle? labelStyle, Color? unselectedLabelColor, TextStyle? unselectedLabelStyle, MaterialStateProperty<Color?>? overlayColor, InteractiveInkFeatureFactory? splashFactory, MaterialStateProperty<MouseCursor?>? mouseCursor})
  TabBarTheme$Mate({
    /// optionalParameters: {Decoration? indicator} , defaultValue:none
    Decoration? indicator,

    /// optionalParameters: {Color? indicatorColor} , defaultValue:none
    Color? indicatorColor,

    /// optionalParameters: {TabBarIndicatorSize? indicatorSize} , defaultValue:none
    TabBarIndicatorSize? indicatorSize,

    /// optionalParameters: {Color? dividerColor} , defaultValue:none
    Color? dividerColor,

    /// optionalParameters: {Color? labelColor} , defaultValue:none
    Color? labelColor,

    /// optionalParameters: {EdgeInsetsGeometry? labelPadding} , defaultValue:none
    EdgeInsetsGeometry? labelPadding,

    /// optionalParameters: {TextStyle? labelStyle} , defaultValue:none
    TextStyle? labelStyle,

    /// optionalParameters: {Color? unselectedLabelColor} , defaultValue:none
    Color? unselectedLabelColor,

    /// optionalParameters: {TextStyle? unselectedLabelStyle} , defaultValue:none
    TextStyle? unselectedLabelStyle,

    /// optionalParameters: {MaterialStateProperty<Color?>? overlayColor} , defaultValue:none
    MaterialStateProperty<Color?>? overlayColor,

    /// optionalParameters: {InteractiveInkFeatureFactory? splashFactory} , defaultValue:none
    InteractiveInkFeatureFactory? splashFactory,

    /// optionalParameters: {MaterialStateProperty<MouseCursor?>? mouseCursor} , defaultValue:none
    MaterialStateProperty<MouseCursor?>? mouseCursor,
  }) : super(
          indicator: indicator,
          indicatorColor: indicatorColor,
          indicatorSize: indicatorSize,
          dividerColor: dividerColor,
          labelColor: labelColor,
          labelPadding: labelPadding,
          labelStyle: labelStyle,
          unselectedLabelColor: unselectedLabelColor,
          unselectedLabelStyle: unselectedLabelStyle,
          overlayColor: overlayColor,
          splashFactory: splashFactory,
          mouseCursor: mouseCursor,
        ) {
    mateCreateName = 'TabBarTheme';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => TabBarTheme$Mate(
          indicator: p.get('indicator').build(),
          indicatorColor: p.get('indicatorColor').build(),
          indicatorSize: p.get('indicatorSize').build(),
          dividerColor: p.get('dividerColor').build(),
          labelColor: p.get('labelColor').build(),
          labelPadding: p.get('labelPadding').build(),
          labelStyle: p.get('labelStyle').build(),
          unselectedLabelColor: p.get('unselectedLabelColor').build(),
          unselectedLabelStyle: p.get('unselectedLabelStyle').build(),
          overlayColor: p.get('overlayColor').build(),
          splashFactory: p.get('splashFactory').build(),
          mouseCursor: p.get('mouseCursor').build(),
        );
    mateUse('indicator', indicator);
    mateUse('indicatorColor', indicatorColor);
    mateUse('indicatorSize', indicatorSize);
    mateUse('dividerColor', dividerColor);
    mateUse('labelColor', labelColor);
    mateUse('labelPadding', labelPadding);
    mateUse('labelStyle', labelStyle);
    mateUse('unselectedLabelColor', unselectedLabelColor);
    mateUse('unselectedLabelStyle', unselectedLabelStyle);
    mateUse('overlayColor', overlayColor);
    mateUse('splashFactory', splashFactory);
    mateUse('mouseCursor', mouseCursor);
  }
}
