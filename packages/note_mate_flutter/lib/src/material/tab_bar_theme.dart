// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/tab_bar_theme.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/painting/decoration.dart' as _i3;
import 'dart:ui' as _i4;
import 'package:flutter/src/material/tabs.dart' as _i5;
import 'package:flutter/src/painting/edge_insets.dart' as _i6;
import 'package:flutter/src/painting/text_style.dart' as _i7;
import 'package:flutter/src/material/material_state.dart' as _i8;
import 'package:flutter/src/material/ink_well.dart' as _i9;
import 'package:flutter/src/services/mouse_cursor.dart' as _i10;

/// class TabBarTheme with Diagnosticable
class TabBarTheme$Mate extends _i1.TabBarTheme with _i2.Mate {
  /// TabBarTheme TabBarTheme({Decoration? indicator, Color? indicatorColor, TabBarIndicatorSize? indicatorSize, Color? dividerColor, Color? labelColor, EdgeInsetsGeometry? labelPadding, TextStyle? labelStyle, Color? unselectedLabelColor, TextStyle? unselectedLabelStyle, MaterialStateProperty<Color?>? overlayColor, InteractiveInkFeatureFactory? splashFactory, MaterialStateProperty<MouseCursor?>? mouseCursor})
  TabBarTheme$Mate({
    /// optionalParameters: {Decoration? indicator} , default:none
    _i3.Decoration? indicator,

    /// optionalParameters: {Color? indicatorColor} , default:none
    _i4.Color? indicatorColor,

    /// optionalParameters: {TabBarIndicatorSize? indicatorSize} , default:none
    _i5.TabBarIndicatorSize? indicatorSize,

    /// optionalParameters: {Color? dividerColor} , default:none
    _i4.Color? dividerColor,

    /// optionalParameters: {Color? labelColor} , default:none
    _i4.Color? labelColor,

    /// optionalParameters: {EdgeInsetsGeometry? labelPadding} , default:none
    _i6.EdgeInsetsGeometry? labelPadding,

    /// optionalParameters: {TextStyle? labelStyle} , default:none
    _i7.TextStyle? labelStyle,

    /// optionalParameters: {Color? unselectedLabelColor} , default:none
    _i4.Color? unselectedLabelColor,

    /// optionalParameters: {TextStyle? unselectedLabelStyle} , default:none
    _i7.TextStyle? unselectedLabelStyle,

    /// optionalParameters: {MaterialStateProperty<Color?>? overlayColor} , default:none
    _i8.MaterialStateProperty<_i4.Color?>? overlayColor,

    /// optionalParameters: {InteractiveInkFeatureFactory? splashFactory} , default:none
    _i9.InteractiveInkFeatureFactory? splashFactory,

    /// optionalParameters: {MaterialStateProperty<MouseCursor?>? mouseCursor} , default:none
    _i8.MaterialStateProperty<_i10.MouseCursor?>? mouseCursor,
  }) : super(
          indicator: indicator,
          indicatorColor: indicatorColor,
          indicatorSize: indicatorSize,
          dividerColor: dividerColor,
          labelColor: labelColor,
          labelPadding: labelPadding,
          labelStyle: labelStyle,
          unselectedLabelColor: unselectedLabelColor,
          unselectedLabelStyle: unselectedLabelStyle,
          overlayColor: overlayColor,
          splashFactory: splashFactory,
          mouseCursor: mouseCursor,
        ) {
    mateBuilderName = 'TabBarTheme';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => TabBarTheme$Mate(
          indicator: p.get('indicator').build(),
          indicatorColor: p.get('indicatorColor').build(),
          indicatorSize: p.get('indicatorSize').build(),
          dividerColor: p.get('dividerColor').build(),
          labelColor: p.get('labelColor').build(),
          labelPadding: p.get('labelPadding').build(),
          labelStyle: p.get('labelStyle').build(),
          unselectedLabelColor: p.get('unselectedLabelColor').build(),
          unselectedLabelStyle: p.get('unselectedLabelStyle').build(),
          overlayColor: p.get('overlayColor').build(),
          splashFactory: p.get('splashFactory').build(),
          mouseCursor: p.get('mouseCursor').build(),
        );
    mateUse(
      'indicator',
      indicator,
      isNamed: true,
    );
    mateUse(
      'indicatorColor',
      indicatorColor,
      isNamed: true,
    );
    mateUse(
      'indicatorSize',
      indicatorSize,
      isNamed: true,
    );
    mateUse(
      'dividerColor',
      dividerColor,
      isNamed: true,
    );
    mateUse(
      'labelColor',
      labelColor,
      isNamed: true,
    );
    mateUse(
      'labelPadding',
      labelPadding,
      isNamed: true,
    );
    mateUse(
      'labelStyle',
      labelStyle,
      isNamed: true,
    );
    mateUse(
      'unselectedLabelColor',
      unselectedLabelColor,
      isNamed: true,
    );
    mateUse(
      'unselectedLabelStyle',
      unselectedLabelStyle,
      isNamed: true,
    );
    mateUse(
      'overlayColor',
      overlayColor,
      isNamed: true,
    );
    mateUse(
      'splashFactory',
      splashFactory,
      isNamed: true,
    );
    mateUse(
      'mouseCursor',
      mouseCursor,
      isNamed: true,
    );
  }
}
