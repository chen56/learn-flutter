// /// Generated by gen_maters.dart, please don't edit! 

import 'package:flutter/src/material/tab_bar_theme.dart';import 'package:flutter/src/painting/decoration.dart';import 'dart:ui';import 'package:flutter/src/material/tabs.dart';import 'package:flutter/src/painting/edge_insets.dart';import 'package:flutter/src/painting/text_style.dart';import 'package:flutter/src/material/material_state.dart';import 'package:flutter/src/material/ink_well.dart';import 'package:flutter/src/services/mouse_cursor.dart';import 'package:note/mate.dart' show Mate;/// class TabBarTheme with Diagnosticable
class TabBarTheme$Mate extends TabBarTheme with Mate {/// TabBarTheme TabBarTheme({Decoration? indicator, Color? indicatorColor, TabBarIndicatorSize? indicatorSize, Color? dividerColor, Color? labelColor, EdgeInsetsGeometry? labelPadding, TextStyle? labelStyle, Color? unselectedLabelColor, TextStyle? unselectedLabelStyle, MaterialStateProperty<Color?>? overlayColor, InteractiveInkFeatureFactory? splashFactory, MaterialStateProperty<MouseCursor?>? mouseCursor})
TabBarTheme$Mate({/// optionalParameters: {Decoration? indicator} , hasDefaultValue:false, defaultValueCode:null
Decoration? indicator, /// optionalParameters: {Color? indicatorColor} , hasDefaultValue:false, defaultValueCode:null
Color? indicatorColor, /// optionalParameters: {TabBarIndicatorSize? indicatorSize} , hasDefaultValue:false, defaultValueCode:null
TabBarIndicatorSize? indicatorSize, /// optionalParameters: {Color? dividerColor} , hasDefaultValue:false, defaultValueCode:null
Color? dividerColor, /// optionalParameters: {Color? labelColor} , hasDefaultValue:false, defaultValueCode:null
Color? labelColor, /// optionalParameters: {EdgeInsetsGeometry? labelPadding} , hasDefaultValue:false, defaultValueCode:null
EdgeInsetsGeometry? labelPadding, /// optionalParameters: {TextStyle? labelStyle} , hasDefaultValue:false, defaultValueCode:null
TextStyle? labelStyle, /// optionalParameters: {Color? unselectedLabelColor} , hasDefaultValue:false, defaultValueCode:null
Color? unselectedLabelColor, /// optionalParameters: {TextStyle? unselectedLabelStyle} , hasDefaultValue:false, defaultValueCode:null
TextStyle? unselectedLabelStyle, /// optionalParameters: {MaterialStateProperty<Color?>? overlayColor} , hasDefaultValue:false, defaultValueCode:null
MaterialStateProperty<Color?>? overlayColor, /// optionalParameters: {InteractiveInkFeatureFactory? splashFactory} , hasDefaultValue:false, defaultValueCode:null
InteractiveInkFeatureFactory? splashFactory, /// optionalParameters: {MaterialStateProperty<MouseCursor?>? mouseCursor} , hasDefaultValue:false, defaultValueCode:null
MaterialStateProperty<MouseCursor?>? mouseCursor, }) : super(indicator: indicator, indicatorColor: indicatorColor, indicatorSize: indicatorSize, dividerColor: dividerColor, labelColor: labelColor, labelPadding: labelPadding, labelStyle: labelStyle, unselectedLabelColor: unselectedLabelColor, unselectedLabelStyle: unselectedLabelStyle, overlayColor: overlayColor, splashFactory: splashFactory, mouseCursor: mouseCursor, ) { mateBuilder = (p) => TabBarTheme$Mate(indicator: p.get('indicator').build(), indicatorColor: p.get('indicatorColor').build(), indicatorSize: p.get('indicatorSize').build(), dividerColor: p.get('dividerColor').build(), labelColor: p.get('labelColor').build(), labelPadding: p.get('labelPadding').build(), labelStyle: p.get('labelStyle').build(), unselectedLabelColor: p.get('unselectedLabelColor').build(), unselectedLabelStyle: p.get('unselectedLabelStyle').build(), overlayColor: p.get('overlayColor').build(), splashFactory: p.get('splashFactory').build(), mouseCursor: p.get('mouseCursor').build(), );
matePut('indicator', indicator);
matePut('indicatorColor', indicatorColor);
matePut('indicatorSize', indicatorSize);
matePut('dividerColor', dividerColor);
matePut('labelColor', labelColor);
matePut('labelPadding', labelPadding);
matePut('labelStyle', labelStyle);
matePut('unselectedLabelColor', unselectedLabelColor);
matePut('unselectedLabelStyle', unselectedLabelStyle);
matePut('overlayColor', overlayColor);
matePut('splashFactory', splashFactory);
matePut('mouseCursor', mouseCursor); }

 }
