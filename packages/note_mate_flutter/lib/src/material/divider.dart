// /// Generated by gen_maters.dart, please don't edit! 

import 'package:flutter/src/material/divider.dart';import 'package:flutter/src/foundation/key.dart';import 'dart:core';import 'dart:ui';import 'package:note/mate.dart' show Mate;/// class Divider extends StatelessWidget
class Divider$Mate extends Divider with Mate {/// Divider Divider({Key? key, double? height, double? thickness, double? indent, double? endIndent, Color? color})
Divider$Mate({/// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
Key? key, /// optionalParameters: {double? height} , hasDefaultValue:false, defaultValueCode:null
double? height, /// optionalParameters: {double? thickness} , hasDefaultValue:false, defaultValueCode:null
double? thickness, /// optionalParameters: {double? indent} , hasDefaultValue:false, defaultValueCode:null
double? indent, /// optionalParameters: {double? endIndent} , hasDefaultValue:false, defaultValueCode:null
double? endIndent, /// optionalParameters: {Color? color} , hasDefaultValue:false, defaultValueCode:null
Color? color, }) : super(key: key, height: height, thickness: thickness, indent: indent, endIndent: endIndent, color: color, ) { mateBuilder = (p) => Divider$Mate(key: p.get('key').build(), height: p.get('height').build(), thickness: p.get('thickness').build(), indent: p.get('indent').build(), endIndent: p.get('endIndent').build(), color: p.get('color').build(), );
matePut('key', key);
matePut('height', height);
matePut('thickness', thickness);
matePut('indent', indent);
matePut('endIndent', endIndent);
matePut('color', color); }

 }
/// class VerticalDivider extends StatelessWidget
class VerticalDivider$Mate extends VerticalDivider with Mate {/// VerticalDivider VerticalDivider({Key? key, double? width, double? thickness, double? indent, double? endIndent, Color? color})
VerticalDivider$Mate({/// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
Key? key, /// optionalParameters: {double? width} , hasDefaultValue:false, defaultValueCode:null
double? width, /// optionalParameters: {double? thickness} , hasDefaultValue:false, defaultValueCode:null
double? thickness, /// optionalParameters: {double? indent} , hasDefaultValue:false, defaultValueCode:null
double? indent, /// optionalParameters: {double? endIndent} , hasDefaultValue:false, defaultValueCode:null
double? endIndent, /// optionalParameters: {Color? color} , hasDefaultValue:false, defaultValueCode:null
Color? color, }) : super(key: key, width: width, thickness: thickness, indent: indent, endIndent: endIndent, color: color, ) { mateBuilder = (p) => VerticalDivider$Mate(key: p.get('key').build(), width: p.get('width').build(), thickness: p.get('thickness').build(), indent: p.get('indent').build(), endIndent: p.get('endIndent').build(), color: p.get('color').build(), );
matePut('key', key);
matePut('width', width);
matePut('thickness', thickness);
matePut('indent', indent);
matePut('endIndent', endIndent);
matePut('color', color); }

 }
