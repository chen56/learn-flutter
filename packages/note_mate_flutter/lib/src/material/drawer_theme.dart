// /// Generated by gen_maters.dart, please don't edit! 

import 'package:flutter/src/material/drawer_theme.dart';import 'dart:ui';import 'dart:core';import 'package:flutter/src/painting/borders.dart';import 'package:flutter/src/foundation/key.dart';import 'package:flutter/src/widgets/framework.dart';import 'package:note/mate.dart' show Mate;/// class DrawerThemeData with Diagnosticable
class DrawerThemeData$Mate extends DrawerThemeData with Mate {/// DrawerThemeData DrawerThemeData({Color? backgroundColor, Color? scrimColor, double? elevation, Color? shadowColor, Color? surfaceTintColor, ShapeBorder? shape, ShapeBorder? endShape, double? width})
DrawerThemeData$Mate({/// optionalParameters: {Color? backgroundColor} , hasDefaultValue:false, defaultValueCode:null
Color? backgroundColor, /// optionalParameters: {Color? scrimColor} , hasDefaultValue:false, defaultValueCode:null
Color? scrimColor, /// optionalParameters: {double? elevation} , hasDefaultValue:false, defaultValueCode:null
double? elevation, /// optionalParameters: {Color? shadowColor} , hasDefaultValue:false, defaultValueCode:null
Color? shadowColor, /// optionalParameters: {Color? surfaceTintColor} , hasDefaultValue:false, defaultValueCode:null
Color? surfaceTintColor, /// optionalParameters: {ShapeBorder? shape} , hasDefaultValue:false, defaultValueCode:null
ShapeBorder? shape, /// optionalParameters: {ShapeBorder? endShape} , hasDefaultValue:false, defaultValueCode:null
ShapeBorder? endShape, /// optionalParameters: {double? width} , hasDefaultValue:false, defaultValueCode:null
double? width, }) : super(backgroundColor: backgroundColor, scrimColor: scrimColor, elevation: elevation, shadowColor: shadowColor, surfaceTintColor: surfaceTintColor, shape: shape, endShape: endShape, width: width, ) { mateBuilder = (p) => DrawerThemeData$Mate(backgroundColor: p.get('backgroundColor').build(), scrimColor: p.get('scrimColor').build(), elevation: p.get('elevation').build(), shadowColor: p.get('shadowColor').build(), surfaceTintColor: p.get('surfaceTintColor').build(), shape: p.get('shape').build(), endShape: p.get('endShape').build(), width: p.get('width').build(), );
matePut('backgroundColor', backgroundColor);
matePut('scrimColor', scrimColor);
matePut('elevation', elevation);
matePut('shadowColor', shadowColor);
matePut('surfaceTintColor', surfaceTintColor);
matePut('shape', shape);
matePut('endShape', endShape);
matePut('width', width); }

 }
/// class DrawerTheme extends InheritedTheme
class DrawerTheme$Mate extends DrawerTheme with Mate {/// DrawerTheme DrawerTheme({Key? key, required DrawerThemeData data, required Widget child})
DrawerTheme$Mate({/// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
Key? key, /// optionalParameters: {required DrawerThemeData data} , hasDefaultValue:false, defaultValueCode:null
required DrawerThemeData data, /// optionalParameters: {required Widget child} , hasDefaultValue:false, defaultValueCode:null
required Widget child, }) : super(key: key, data: data, child: child, ) { mateBuilder = (p) => DrawerTheme$Mate(key: p.get('key').build(), data: p.get('data').build(), child: p.get('child').build(), );
matePut('key', key);
matePut('data', data);
matePut('child', child); }

 }
