// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/badge_theme.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'dart:ui' as _i3;
import 'package:flutter/src/painting/text_style.dart' as _i4;
import 'package:flutter/src/painting/edge_insets.dart' as _i5;
import 'package:flutter/src/painting/alignment.dart' as _i6;
import 'package:flutter/src/foundation/key.dart' as _i7;
import 'package:flutter/src/widgets/framework.dart' as _i8;

/// class BadgeThemeData with Diagnosticable
class BadgeThemeData$Mate extends _i1.BadgeThemeData with _i2.Mate {
  /// BadgeThemeData BadgeThemeData({Color? backgroundColor, Color? textColor, double? smallSize, double? largeSize, TextStyle? textStyle, EdgeInsetsGeometry? padding, AlignmentGeometry? alignment, Offset? offset})
  BadgeThemeData$Mate({
    /// optionalParameters: {Color? backgroundColor} , default:none
    _i3.Color? backgroundColor,

    /// optionalParameters: {Color? textColor} , default:none
    _i3.Color? textColor,

    /// optionalParameters: {double? smallSize} , default:none
    double? smallSize,

    /// optionalParameters: {double? largeSize} , default:none
    double? largeSize,

    /// optionalParameters: {TextStyle? textStyle} , default:none
    _i4.TextStyle? textStyle,

    /// optionalParameters: {EdgeInsetsGeometry? padding} , default:none
    _i5.EdgeInsetsGeometry? padding,

    /// optionalParameters: {AlignmentGeometry? alignment} , default:none
    _i6.AlignmentGeometry? alignment,

    /// optionalParameters: {Offset? offset} , default:none
    _i3.Offset? offset,
  }) : super(
          backgroundColor: backgroundColor,
          textColor: textColor,
          smallSize: smallSize,
          largeSize: largeSize,
          textStyle: textStyle,
          padding: padding,
          alignment: alignment,
          offset: offset,
        ) {
    mateBuilderName = 'BadgeThemeData';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => BadgeThemeData$Mate(
          backgroundColor: p.get('backgroundColor').build(),
          textColor: p.get('textColor').build(),
          smallSize: p.get('smallSize').build(),
          largeSize: p.get('largeSize').build(),
          textStyle: p.get('textStyle').build(),
          padding: p.get('padding').build(),
          alignment: p.get('alignment').build(),
          offset: p.get('offset').build(),
        );
    mateUse(
      'backgroundColor',
      backgroundColor,
      isNamed: true,
    );
    mateUse(
      'textColor',
      textColor,
      isNamed: true,
    );
    mateUse(
      'smallSize',
      smallSize,
      isNamed: true,
    );
    mateUse(
      'largeSize',
      largeSize,
      isNamed: true,
    );
    mateUse(
      'textStyle',
      textStyle,
      isNamed: true,
    );
    mateUse(
      'padding',
      padding,
      isNamed: true,
    );
    mateUse(
      'alignment',
      alignment,
      isNamed: true,
    );
    mateUse(
      'offset',
      offset,
      isNamed: true,
    );
  }
}

/// class BadgeTheme extends InheritedTheme
class BadgeTheme$Mate extends _i1.BadgeTheme with _i2.Mate {
  /// BadgeTheme BadgeTheme({Key? key, required BadgeThemeData data, required Widget child})
  BadgeTheme$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i7.Key? key,

    /// optionalParameters: {required BadgeThemeData data} , default:none
    required _i1.BadgeThemeData data,

    /// optionalParameters: {required Widget child} , default:none
    required _i8.Widget child,
  }) : super(
          key: key,
          data: data,
          child: child,
        ) {
    mateBuilderName = 'BadgeTheme';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => BadgeTheme$Mate(
          key: p.get('key').build(),
          data: p.get('data').build(),
          child: p.get('child').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'data',
      data,
      isNamed: true,
    );
    mateUse(
      'child',
      child,
      isNamed: true,
    );
  }
}
