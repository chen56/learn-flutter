// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/ink_highlight.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/material/material.dart';
import 'package:flutter/src/rendering/box.dart';
import 'dart:ui';
import 'package:flutter/src/painting/box_border.dart';
import 'package:flutter/painting.dart';
import 'dart:core';
import 'package:flutter/src/painting/border_radius.dart';
import 'package:flutter/src/painting/borders.dart';

/// class InkHighlight extends InteractiveInkFeature
class InkHighlight$Mate extends InkHighlight with Mate {
  /// InkHighlight InkHighlight({required MaterialInkController controller, required RenderBox referenceBox, required Color color, required TextDirection textDirection, BoxShape shape = BoxShape.rectangle, double? radius, BorderRadius? borderRadius, ShapeBorder? customBorder, Rect Function()? rectCallback, void Function()? onRemoved, Duration fadeDuration = _kDefaultHighlightFadeDuration})
  InkHighlight$Mate({
    /// optionalParameters: {required MaterialInkController controller} , defaultValue:none
    required MaterialInkController controller,

    /// optionalParameters: {required RenderBox referenceBox} , defaultValue:none
    required RenderBox referenceBox,

    /// optionalParameters: {required Color color} , defaultValue:none
    required Color color,

    /// optionalParameters: {required TextDirection textDirection} , defaultValue:none
    required TextDirection textDirection,

    /// optionalParameters: {BoxShape shape = BoxShape.rectangle} , defaultValue:PrefixedIdentifier
    BoxShape shape = BoxShape.rectangle,

    /// optionalParameters: {double? radius} , defaultValue:none
    double? radius,

    /// optionalParameters: {BorderRadius? borderRadius} , defaultValue:none
    BorderRadius? borderRadius,

    /// optionalParameters: {ShapeBorder? customBorder} , defaultValue:none
    ShapeBorder? customBorder,

    /// optionalParameters: {Rect Function()? rectCallback} , defaultValue:none
    RectCallback? rectCallback,

    /// optionalParameters: {void Function()? onRemoved} , defaultValue:none
    VoidCallback? onRemoved,

    /// optionalParameters: {Duration fadeDuration = _kDefaultHighlightFadeDuration} , defaultValue:unprocessed
    required Duration fadeDuration,
  }) : super(
          controller: controller,
          referenceBox: referenceBox,
          color: color,
          textDirection: textDirection,
          shape: shape,
          radius: radius,
          borderRadius: borderRadius,
          customBorder: customBorder,
          rectCallback: rectCallback,
          onRemoved: onRemoved,
          fadeDuration: fadeDuration,
        ) {
    mateCreateName = 'InkHighlight';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => InkHighlight$Mate(
          controller: p.get('controller').build(),
          referenceBox: p.get('referenceBox').build(),
          color: p.get('color').build(),
          textDirection: p.get('textDirection').build(),
          shape: p.get('shape').build(),
          radius: p.get('radius').build(),
          borderRadius: p.get('borderRadius').build(),
          customBorder: p.get('customBorder').build(),
          rectCallback: p.get('rectCallback').build(),
          onRemoved: p.get('onRemoved').build(),
          fadeDuration: p.get('fadeDuration').build(),
        );
    mateUse('controller', controller, isNamed: true);
    mateUse('referenceBox', referenceBox, isNamed: true);
    mateUse('color', color, isNamed: true);
    mateUse('textDirection', textDirection, isNamed: true);
    mateUse('shape', shape, isNamed: true);
    mateUse('radius', radius, isNamed: true);
    mateUse('borderRadius', borderRadius, isNamed: true);
    mateUse('customBorder', customBorder, isNamed: true);
    mateUse('rectCallback', rectCallback, isNamed: true);
    mateUse('onRemoved', onRemoved, isNamed: true);
    mateUse('fadeDuration', fadeDuration, isNamed: true);
  }
}
