// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/filled_button.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'dart:ui' as _i4;
import 'package:flutter/src/foundation/basic_types.dart' as _i5;
import 'package:flutter/src/material/button_style.dart' as _i6;
import 'package:flutter/src/widgets/focus_manager.dart' as _i7;
import 'package:flutter/src/material/material_state.dart' as _i8;
import 'package:flutter/src/widgets/framework.dart' as _i9;

/// class FilledButton extends ButtonStyleButton
class FilledButton$Mate extends _i1.FilledButton with _i2.Mate {
  /// FilledButton FilledButton({Key? key, required void Function()? onPressed, void Function()? onLongPress, void Function(bool)? onHover, void Function(bool)? onFocusChange, ButtonStyle? style, FocusNode? focusNode, bool autofocus = false, Clip clipBehavior = Clip.none, MaterialStatesController? statesController, required Widget? child})
  FilledButton$Mate({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {required void Function()? onPressed} , default:none
    required _i4.VoidCallback? onPressed,

    /// optionalParameters: {void Function()? onLongPress} , default:none
    _i4.VoidCallback? onLongPress,

    /// optionalParameters: {void Function(bool)? onHover} , default:none
    _i5.ValueChanged<bool>? onHover,

    /// optionalParameters: {void Function(bool)? onFocusChange} , default:none
    _i5.ValueChanged<bool>? onFocusChange,

    /// optionalParameters: {ButtonStyle? style} , default:none
    _i6.ButtonStyle? style,

    /// optionalParameters: {FocusNode? focusNode} , default:none
    _i7.FocusNode? focusNode,

    /// optionalParameters: {bool autofocus = false} , default:processed=BooleanLiteralImpl
    bool autofocus = false,

    /// optionalParameters: {Clip clipBehavior = Clip.none} , default:processed=PrefixedIdentifierImpl
    _i4.Clip clipBehavior = _i4.Clip.none,

    /// optionalParameters: {MaterialStatesController? statesController} , default:none
    _i8.MaterialStatesController? statesController,

    /// optionalParameters: {required Widget? child} , default:none
    required _i9.Widget? child,
  }) : super(
          key: key,
          onPressed: onPressed,
          onLongPress: onLongPress,
          onHover: onHover,
          onFocusChange: onFocusChange,
          style: style,
          focusNode: focusNode,
          autofocus: autofocus,
          clipBehavior: clipBehavior,
          statesController: statesController,
          child: child,
        ) {
    mateBuilderName = 'FilledButton';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => FilledButton$Mate(
          key: p.get('key').build(),
          onPressed: p.get('onPressed').build(),
          onLongPress: p.get('onLongPress').build(),
          onHover: p.get('onHover').build(),
          onFocusChange: p.get('onFocusChange').build(),
          style: p.get('style').build(),
          focusNode: p.get('focusNode').build(),
          autofocus: p.get('autofocus').build(),
          clipBehavior: p.get('clipBehavior').build(),
          statesController: p.get('statesController').build(),
          child: p.get('child').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'onPressed',
      onPressed,
      isNamed: true,
    );
    mateUse(
      'onLongPress',
      onLongPress,
      isNamed: true,
    );
    mateUse(
      'onHover',
      onHover,
      isNamed: true,
    );
    mateUse(
      'onFocusChange',
      onFocusChange,
      isNamed: true,
    );
    mateUse(
      'style',
      style,
      isNamed: true,
    );
    mateUse(
      'focusNode',
      focusNode,
      isNamed: true,
    );
    mateUse(
      'autofocus',
      autofocus,
      isNamed: true,
      defaultValue: false,
    );
    mateUse(
      'clipBehavior',
      clipBehavior,
      isNamed: true,
      defaultValue: _i4.Clip.none,
    );
    mateUse(
      'statesController',
      statesController,
      isNamed: true,
    );
    mateUse(
      'child',
      child,
      isNamed: true,
    );
  }

  /// FilledButton FilledButton.tonal({Key? key, required void Function()? onPressed, void Function()? onLongPress, void Function(bool)? onHover, void Function(bool)? onFocusChange, ButtonStyle? style, FocusNode? focusNode, bool autofocus = false, Clip clipBehavior = Clip.none, MaterialStatesController? statesController, required Widget? child})
  FilledButton$Mate.tonal({
    /// optionalParameters: {Key? key} , default:none
    _i3.Key? key,

    /// optionalParameters: {required void Function()? onPressed} , default:none
    required _i4.VoidCallback? onPressed,

    /// optionalParameters: {void Function()? onLongPress} , default:none
    _i4.VoidCallback? onLongPress,

    /// optionalParameters: {void Function(bool)? onHover} , default:none
    _i5.ValueChanged<bool>? onHover,

    /// optionalParameters: {void Function(bool)? onFocusChange} , default:none
    _i5.ValueChanged<bool>? onFocusChange,

    /// optionalParameters: {ButtonStyle? style} , default:none
    _i6.ButtonStyle? style,

    /// optionalParameters: {FocusNode? focusNode} , default:none
    _i7.FocusNode? focusNode,

    /// optionalParameters: {bool autofocus = false} , default:processed=BooleanLiteralImpl
    bool autofocus = false,

    /// optionalParameters: {Clip clipBehavior = Clip.none} , default:processed=PrefixedIdentifierImpl
    _i4.Clip clipBehavior = _i4.Clip.none,

    /// optionalParameters: {MaterialStatesController? statesController} , default:none
    _i8.MaterialStatesController? statesController,

    /// optionalParameters: {required Widget? child} , default:none
    required _i9.Widget? child,
  }) : super.tonal(
          key: key,
          onPressed: onPressed,
          onLongPress: onLongPress,
          onHover: onHover,
          onFocusChange: onFocusChange,
          style: style,
          focusNode: focusNode,
          autofocus: autofocus,
          clipBehavior: clipBehavior,
          statesController: statesController,
          child: child,
        ) {
    mateBuilderName = 'FilledButton.tonal';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => FilledButton$Mate.tonal(
          key: p.get('key').build(),
          onPressed: p.get('onPressed').build(),
          onLongPress: p.get('onLongPress').build(),
          onHover: p.get('onHover').build(),
          onFocusChange: p.get('onFocusChange').build(),
          style: p.get('style').build(),
          focusNode: p.get('focusNode').build(),
          autofocus: p.get('autofocus').build(),
          clipBehavior: p.get('clipBehavior').build(),
          statesController: p.get('statesController').build(),
          child: p.get('child').build(),
        );
    mateUse(
      'key',
      key,
      isNamed: true,
    );
    mateUse(
      'onPressed',
      onPressed,
      isNamed: true,
    );
    mateUse(
      'onLongPress',
      onLongPress,
      isNamed: true,
    );
    mateUse(
      'onHover',
      onHover,
      isNamed: true,
    );
    mateUse(
      'onFocusChange',
      onFocusChange,
      isNamed: true,
    );
    mateUse(
      'style',
      style,
      isNamed: true,
    );
    mateUse(
      'focusNode',
      focusNode,
      isNamed: true,
    );
    mateUse(
      'autofocus',
      autofocus,
      isNamed: true,
      defaultValue: false,
    );
    mateUse(
      'clipBehavior',
      clipBehavior,
      isNamed: true,
      defaultValue: _i4.Clip.none,
    );
    mateUse(
      'statesController',
      statesController,
      isNamed: true,
    );
    mateUse(
      'child',
      child,
      isNamed: true,
    );
  }
}
