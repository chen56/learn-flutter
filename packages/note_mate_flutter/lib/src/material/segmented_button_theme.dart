// /// Generated by gen_maters.dart, please don't edit! 

import 'package:flutter/src/material/segmented_button_theme.dart';import 'package:flutter/src/material/button_style.dart';import 'package:flutter/src/widgets/framework.dart';import 'package:flutter/src/foundation/key.dart';import 'package:note/mate.dart' show Mate;/// class SegmentedButtonThemeData with Diagnosticable
class SegmentedButtonThemeData$Mate extends SegmentedButtonThemeData with Mate {/// SegmentedButtonThemeData SegmentedButtonThemeData({ButtonStyle? style, Widget? selectedIcon})
SegmentedButtonThemeData$Mate({/// optionalParameters: {ButtonStyle? style} , hasDefaultValue:false, defaultValueCode:null
ButtonStyle? style, /// optionalParameters: {Widget? selectedIcon} , hasDefaultValue:false, defaultValueCode:null
Widget? selectedIcon, }) : super(style: style, selectedIcon: selectedIcon, ) { mateBuilder = (p) => SegmentedButtonThemeData$Mate(style: p.get('style').build(), selectedIcon: p.get('selectedIcon').build(), );
matePut('style', style);
matePut('selectedIcon', selectedIcon); }

 }
/// class SegmentedButtonTheme extends InheritedTheme
class SegmentedButtonTheme$Mate extends SegmentedButtonTheme with Mate {/// SegmentedButtonTheme SegmentedButtonTheme({Key? key, required SegmentedButtonThemeData data, required Widget child})
SegmentedButtonTheme$Mate({/// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
Key? key, /// optionalParameters: {required SegmentedButtonThemeData data} , hasDefaultValue:false, defaultValueCode:null
required SegmentedButtonThemeData data, /// optionalParameters: {required Widget child} , hasDefaultValue:false, defaultValueCode:null
required Widget child, }) : super(key: key, data: data, child: child, ) { mateBuilder = (p) => SegmentedButtonTheme$Mate(key: p.get('key').build(), data: p.get('data').build(), child: p.get('child').build(), );
matePut('key', key);
matePut('data', data);
matePut('child', child); }

 }
