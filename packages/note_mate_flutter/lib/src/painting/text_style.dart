// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/painting/text_style.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'dart:ui' as _i3;
import 'package:flutter/src/painting/text_painter.dart' as _i4;

/// class TextStyle with Diagnosticable
class TextStyle$Mate extends _i1.TextStyle with _i2.Mate {
  /// TextStyle TextStyle({bool inherit = true, Color? color, Color? backgroundColor, double? fontSize, FontWeight? fontWeight, FontStyle? fontStyle, double? letterSpacing, double? wordSpacing, TextBaseline? textBaseline, double? height, TextLeadingDistribution? leadingDistribution, Locale? locale, Paint? foreground, Paint? background, List<Shadow>? shadows, List<FontFeature>? fontFeatures, List<FontVariation>? fontVariations, TextDecoration? decoration, Color? decorationColor, TextDecorationStyle? decorationStyle, double? decorationThickness, String? debugLabel, String? fontFamily, List<String>? fontFamilyFallback, String? package, TextOverflow? overflow})
  TextStyle$Mate({
    /// optionalParameters: {bool inherit = true} , default:processed=BooleanLiteralImpl
    super.inherit,

    /// optionalParameters: {Color? color} , default:none
    super.color,

    /// optionalParameters: {Color? backgroundColor} , default:none
    super.backgroundColor,

    /// optionalParameters: {double? fontSize} , default:none
    super.fontSize,

    /// optionalParameters: {FontWeight? fontWeight} , default:none
    super.fontWeight,

    /// optionalParameters: {FontStyle? fontStyle} , default:none
    super.fontStyle,

    /// optionalParameters: {double? letterSpacing} , default:none
    super.letterSpacing,

    /// optionalParameters: {double? wordSpacing} , default:none
    super.wordSpacing,

    /// optionalParameters: {TextBaseline? textBaseline} , default:none
    super.textBaseline,

    /// optionalParameters: {double? height} , default:none
    super.height,

    /// optionalParameters: {TextLeadingDistribution? leadingDistribution} , default:none
    super.leadingDistribution,

    /// optionalParameters: {Locale? locale} , default:none
    super.locale,

    /// optionalParameters: {Paint? foreground} , default:none
    super.foreground,

    /// optionalParameters: {Paint? background} , default:none
    super.background,

    /// optionalParameters: {List<Shadow>? shadows} , default:none
    super.shadows,

    /// optionalParameters: {List<FontFeature>? fontFeatures} , default:none
    super.fontFeatures,

    /// optionalParameters: {List<FontVariation>? fontVariations} , default:none
    super.fontVariations,

    /// optionalParameters: {TextDecoration? decoration} , default:none
    super.decoration,

    /// optionalParameters: {Color? decorationColor} , default:none
    super.decorationColor,

    /// optionalParameters: {TextDecorationStyle? decorationStyle} , default:none
    super.decorationStyle,

    /// optionalParameters: {double? decorationThickness} , default:none
    super.decorationThickness,

    /// optionalParameters: {String? debugLabel} , default:none
    super.debugLabel,

    /// optionalParameters: {String? fontFamily} , default:none
    super.fontFamily,

    /// optionalParameters: {List<String>? fontFamilyFallback} , default:none
    super.fontFamilyFallback,

    /// optionalParameters: {String? package} , default:none
    super.package,

    /// optionalParameters: {TextOverflow? overflow} , default:none
    super.overflow,
  })  : mateParams = {
          'inherit': _i2.BuilderArg<bool>(
            name: 'inherit',
            init: inherit,
            isNamed: true,
            defaultValue: true,
          ),
          'color': _i2.BuilderArg<_i3.Color?>(
            name: 'color',
            init: color,
            isNamed: true,
          ),
          'backgroundColor': _i2.BuilderArg<_i3.Color?>(
            name: 'backgroundColor',
            init: backgroundColor,
            isNamed: true,
          ),
          'fontSize': _i2.BuilderArg<double?>(
            name: 'fontSize',
            init: fontSize,
            isNamed: true,
          ),
          'fontWeight': _i2.BuilderArg<_i3.FontWeight?>(
            name: 'fontWeight',
            init: fontWeight,
            isNamed: true,
          ),
          'fontStyle': _i2.BuilderArg<_i3.FontStyle?>(
            name: 'fontStyle',
            init: fontStyle,
            isNamed: true,
          ),
          'letterSpacing': _i2.BuilderArg<double?>(
            name: 'letterSpacing',
            init: letterSpacing,
            isNamed: true,
          ),
          'wordSpacing': _i2.BuilderArg<double?>(
            name: 'wordSpacing',
            init: wordSpacing,
            isNamed: true,
          ),
          'textBaseline': _i2.BuilderArg<_i3.TextBaseline?>(
            name: 'textBaseline',
            init: textBaseline,
            isNamed: true,
          ),
          'height': _i2.BuilderArg<double?>(
            name: 'height',
            init: height,
            isNamed: true,
          ),
          'leadingDistribution': _i2.BuilderArg<_i3.TextLeadingDistribution?>(
            name: 'leadingDistribution',
            init: leadingDistribution,
            isNamed: true,
          ),
          'locale': _i2.BuilderArg<_i3.Locale?>(
            name: 'locale',
            init: locale,
            isNamed: true,
          ),
          'foreground': _i2.BuilderArg<_i3.Paint?>(
            name: 'foreground',
            init: foreground,
            isNamed: true,
          ),
          'background': _i2.BuilderArg<_i3.Paint?>(
            name: 'background',
            init: background,
            isNamed: true,
          ),
          'shadows': _i2.BuilderArg<List<_i3.Shadow>?>(
            name: 'shadows',
            init: shadows,
            isNamed: true,
          ),
          'fontFeatures': _i2.BuilderArg<List<_i3.FontFeature>?>(
            name: 'fontFeatures',
            init: fontFeatures,
            isNamed: true,
          ),
          'fontVariations': _i2.BuilderArg<List<_i3.FontVariation>?>(
            name: 'fontVariations',
            init: fontVariations,
            isNamed: true,
          ),
          'decoration': _i2.BuilderArg<_i3.TextDecoration?>(
            name: 'decoration',
            init: decoration,
            isNamed: true,
          ),
          'decorationColor': _i2.BuilderArg<_i3.Color?>(
            name: 'decorationColor',
            init: decorationColor,
            isNamed: true,
          ),
          'decorationStyle': _i2.BuilderArg<_i3.TextDecorationStyle?>(
            name: 'decorationStyle',
            init: decorationStyle,
            isNamed: true,
          ),
          'decorationThickness': _i2.BuilderArg<double?>(
            name: 'decorationThickness',
            init: decorationThickness,
            isNamed: true,
          ),
          'debugLabel': _i2.BuilderArg<String?>(
            name: 'debugLabel',
            init: debugLabel,
            isNamed: true,
          ),
          'fontFamily': _i2.BuilderArg<String?>(
            name: 'fontFamily',
            init: fontFamily,
            isNamed: true,
          ),
          'fontFamilyFallback': _i2.BuilderArg<List<String>?>(
            name: 'fontFamilyFallback',
            init: fontFamilyFallback,
            isNamed: true,
          ),
          'package': _i2.BuilderArg<String?>(
            name: 'package',
            init: package,
            isNamed: true,
          ),
          'overflow': _i2.BuilderArg<_i4.TextOverflow?>(
            name: 'overflow',
            init: overflow,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'TextStyle';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => TextStyle$Mate(
          inherit: p.get('inherit').build(),
          color: p.get('color').build(),
          backgroundColor: p.get('backgroundColor').build(),
          fontSize: p.get('fontSize').build(),
          fontWeight: p.get('fontWeight').build(),
          fontStyle: p.get('fontStyle').build(),
          letterSpacing: p.get('letterSpacing').build(),
          wordSpacing: p.get('wordSpacing').build(),
          textBaseline: p.get('textBaseline').build(),
          height: p.get('height').build(),
          leadingDistribution: p.get('leadingDistribution').build(),
          locale: p.get('locale').build(),
          foreground: p.get('foreground').build(),
          background: p.get('background').build(),
          shadows: p.get('shadows').build(),
          fontFeatures: p.get('fontFeatures').build(),
          fontVariations: p.get('fontVariations').build(),
          decoration: p.get('decoration').build(),
          decorationColor: p.get('decorationColor').build(),
          decorationStyle: p.get('decorationStyle').build(),
          decorationThickness: p.get('decorationThickness').build(),
          debugLabel: p.get('debugLabel').build(),
          fontFamily: p.get('fontFamily').build(),
          fontFamilyFallback: p.get('fontFamilyFallback').build(),
          package: p.get('package').build(),
          overflow: p.get('overflow').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
