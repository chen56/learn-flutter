// /// Generated by gen_maters.dart, please don't edit! 

import 'package:flutter/src/painting/text_style.dart';import 'dart:core';import 'dart:ui';import 'package:flutter/src/painting/text_painter.dart';import 'package:note/mate.dart' show Mate;/// class TextStyle with Diagnosticable
class TextStyle$Mate extends TextStyle with Mate {/// TextStyle TextStyle({bool inherit = true, Color? color, Color? backgroundColor, double? fontSize, FontWeight? fontWeight, FontStyle? fontStyle, double? letterSpacing, double? wordSpacing, TextBaseline? textBaseline, double? height, TextLeadingDistribution? leadingDistribution, Locale? locale, Paint? foreground, Paint? background, List<Shadow>? shadows, List<FontFeature>? fontFeatures, List<FontVariation>? fontVariations, TextDecoration? decoration, Color? decorationColor, TextDecorationStyle? decorationStyle, double? decorationThickness, String? debugLabel, String? fontFamily, List<String>? fontFamilyFallback, String? package, TextOverflow? overflow})
TextStyle$Mate({/// optionalParameters: {bool inherit = true} , hasDefaultValue:true, defaultValueCode:true
required bool inherit, /// optionalParameters: {Color? color} , hasDefaultValue:false, defaultValueCode:null
Color? color, /// optionalParameters: {Color? backgroundColor} , hasDefaultValue:false, defaultValueCode:null
Color? backgroundColor, /// optionalParameters: {double? fontSize} , hasDefaultValue:false, defaultValueCode:null
double? fontSize, /// optionalParameters: {FontWeight? fontWeight} , hasDefaultValue:false, defaultValueCode:null
FontWeight? fontWeight, /// optionalParameters: {FontStyle? fontStyle} , hasDefaultValue:false, defaultValueCode:null
FontStyle? fontStyle, /// optionalParameters: {double? letterSpacing} , hasDefaultValue:false, defaultValueCode:null
double? letterSpacing, /// optionalParameters: {double? wordSpacing} , hasDefaultValue:false, defaultValueCode:null
double? wordSpacing, /// optionalParameters: {TextBaseline? textBaseline} , hasDefaultValue:false, defaultValueCode:null
TextBaseline? textBaseline, /// optionalParameters: {double? height} , hasDefaultValue:false, defaultValueCode:null
double? height, /// optionalParameters: {TextLeadingDistribution? leadingDistribution} , hasDefaultValue:false, defaultValueCode:null
TextLeadingDistribution? leadingDistribution, /// optionalParameters: {Locale? locale} , hasDefaultValue:false, defaultValueCode:null
Locale? locale, /// optionalParameters: {Paint? foreground} , hasDefaultValue:false, defaultValueCode:null
Paint? foreground, /// optionalParameters: {Paint? background} , hasDefaultValue:false, defaultValueCode:null
Paint? background, /// optionalParameters: {List<Shadow>? shadows} , hasDefaultValue:false, defaultValueCode:null
List<Shadow>? shadows, /// optionalParameters: {List<FontFeature>? fontFeatures} , hasDefaultValue:false, defaultValueCode:null
List<FontFeature>? fontFeatures, /// optionalParameters: {List<FontVariation>? fontVariations} , hasDefaultValue:false, defaultValueCode:null
List<FontVariation>? fontVariations, /// optionalParameters: {TextDecoration? decoration} , hasDefaultValue:false, defaultValueCode:null
TextDecoration? decoration, /// optionalParameters: {Color? decorationColor} , hasDefaultValue:false, defaultValueCode:null
Color? decorationColor, /// optionalParameters: {TextDecorationStyle? decorationStyle} , hasDefaultValue:false, defaultValueCode:null
TextDecorationStyle? decorationStyle, /// optionalParameters: {double? decorationThickness} , hasDefaultValue:false, defaultValueCode:null
double? decorationThickness, /// optionalParameters: {String? debugLabel} , hasDefaultValue:false, defaultValueCode:null
String? debugLabel, /// optionalParameters: {String? fontFamily} , hasDefaultValue:false, defaultValueCode:null
String? fontFamily, /// optionalParameters: {List<String>? fontFamilyFallback} , hasDefaultValue:false, defaultValueCode:null
List<String>? fontFamilyFallback, /// optionalParameters: {String? package} , hasDefaultValue:false, defaultValueCode:null
String? package, /// optionalParameters: {TextOverflow? overflow} , hasDefaultValue:false, defaultValueCode:null
TextOverflow? overflow, }) : super(inherit: inherit, color: color, backgroundColor: backgroundColor, fontSize: fontSize, fontWeight: fontWeight, fontStyle: fontStyle, letterSpacing: letterSpacing, wordSpacing: wordSpacing, textBaseline: textBaseline, height: height, leadingDistribution: leadingDistribution, locale: locale, foreground: foreground, background: background, shadows: shadows, fontFeatures: fontFeatures, fontVariations: fontVariations, decoration: decoration, decorationColor: decorationColor, decorationStyle: decorationStyle, decorationThickness: decorationThickness, debugLabel: debugLabel, fontFamily: fontFamily, fontFamilyFallback: fontFamilyFallback, package: package, overflow: overflow, ) { mateBuilder = (p) => TextStyle$Mate(inherit: p.get('inherit').build(), color: p.get('color').build(), backgroundColor: p.get('backgroundColor').build(), fontSize: p.get('fontSize').build(), fontWeight: p.get('fontWeight').build(), fontStyle: p.get('fontStyle').build(), letterSpacing: p.get('letterSpacing').build(), wordSpacing: p.get('wordSpacing').build(), textBaseline: p.get('textBaseline').build(), height: p.get('height').build(), leadingDistribution: p.get('leadingDistribution').build(), locale: p.get('locale').build(), foreground: p.get('foreground').build(), background: p.get('background').build(), shadows: p.get('shadows').build(), fontFeatures: p.get('fontFeatures').build(), fontVariations: p.get('fontVariations').build(), decoration: p.get('decoration').build(), decorationColor: p.get('decorationColor').build(), decorationStyle: p.get('decorationStyle').build(), decorationThickness: p.get('decorationThickness').build(), debugLabel: p.get('debugLabel').build(), fontFamily: p.get('fontFamily').build(), fontFamilyFallback: p.get('fontFamilyFallback').build(), package: p.get('package').build(), overflow: p.get('overflow').build(), );
matePut('inherit', inherit);
matePut('color', color);
matePut('backgroundColor', backgroundColor);
matePut('fontSize', fontSize);
matePut('fontWeight', fontWeight);
matePut('fontStyle', fontStyle);
matePut('letterSpacing', letterSpacing);
matePut('wordSpacing', wordSpacing);
matePut('textBaseline', textBaseline);
matePut('height', height);
matePut('leadingDistribution', leadingDistribution);
matePut('locale', locale);
matePut('foreground', foreground);
matePut('background', background);
matePut('shadows', shadows);
matePut('fontFeatures', fontFeatures);
matePut('fontVariations', fontVariations);
matePut('decoration', decoration);
matePut('decorationColor', decorationColor);
matePut('decorationStyle', decorationStyle);
matePut('decorationThickness', decorationThickness);
matePut('debugLabel', debugLabel);
matePut('fontFamily', fontFamily);
matePut('fontFamilyFallback', fontFamilyFallback);
matePut('package', package);
matePut('overflow', overflow); }

 }
