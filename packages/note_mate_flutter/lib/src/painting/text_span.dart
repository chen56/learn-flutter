// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/painting/text_span.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/painting/inline_span.dart' as _i3;
import 'package:flutter/src/painting/text_style.dart' as _i4;
import 'package:flutter/src/gestures/recognizer.dart' as _i5;
import 'package:flutter/src/services/mouse_cursor.dart' as _i6;
import 'package:flutter/src/services/mouse_tracking.dart' as _i7;
import 'dart:ui' as _i8;

/// class TextSpan extends InlineSpan implements HitTestTarget, MouseTrackerAnnotation
class TextSpan$Mate extends _i1.TextSpan with _i2.Mate {
  /// TextSpan TextSpan({String? text, List<InlineSpan>? children, TextStyle? style, GestureRecognizer? recognizer, MouseCursor? mouseCursor, void Function(PointerEnterEvent)? onEnter, void Function(PointerExitEvent)? onExit, String? semanticsLabel, Locale? locale, bool? spellOut})
  TextSpan$Mate({
    /// optionalParameters: {String? text} , default:none
    String? text,

    /// optionalParameters: {List<InlineSpan>? children} , default:none
    List<_i3.InlineSpan>? children,

    /// optionalParameters: {TextStyle? style} , default:none
    _i4.TextStyle? style,

    /// optionalParameters: {GestureRecognizer? recognizer} , default:none
    _i5.GestureRecognizer? recognizer,

    /// optionalParameters: {MouseCursor? mouseCursor} , default:none
    _i6.MouseCursor? mouseCursor,

    /// optionalParameters: {void Function(PointerEnterEvent)? onEnter} , default:none
    _i7.PointerEnterEventListener? onEnter,

    /// optionalParameters: {void Function(PointerExitEvent)? onExit} , default:none
    _i7.PointerExitEventListener? onExit,

    /// optionalParameters: {String? semanticsLabel} , default:none
    String? semanticsLabel,

    /// optionalParameters: {Locale? locale} , default:none
    _i8.Locale? locale,

    /// optionalParameters: {bool? spellOut} , default:none
    bool? spellOut,
  }) : super(
          text: text,
          children: children,
          style: style,
          recognizer: recognizer,
          mouseCursor: mouseCursor,
          onEnter: onEnter,
          onExit: onExit,
          semanticsLabel: semanticsLabel,
          locale: locale,
          spellOut: spellOut,
        ) {
    mateBuilderName = 'TextSpan';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => TextSpan$Mate(
          text: p.get('text').build(),
          children: p.get('children').build(),
          style: p.get('style').build(),
          recognizer: p.get('recognizer').build(),
          mouseCursor: p.get('mouseCursor').build(),
          onEnter: p.get('onEnter').build(),
          onExit: p.get('onExit').build(),
          semanticsLabel: p.get('semanticsLabel').build(),
          locale: p.get('locale').build(),
          spellOut: p.get('spellOut').build(),
        );
    mateUse(
      'text',
      text,
      isNamed: true,
    );
    mateUse(
      'children',
      children,
      isNamed: true,
    );
    mateUse(
      'style',
      style,
      isNamed: true,
    );
    mateUse(
      'recognizer',
      recognizer,
      isNamed: true,
    );
    mateUse(
      'mouseCursor',
      mouseCursor,
      isNamed: true,
    );
    mateUse(
      'onEnter',
      onEnter,
      isNamed: true,
    );
    mateUse(
      'onExit',
      onExit,
      isNamed: true,
    );
    mateUse(
      'semanticsLabel',
      semanticsLabel,
      isNamed: true,
    );
    mateUse(
      'locale',
      locale,
      isNamed: true,
    );
    mateUse(
      'spellOut',
      spellOut,
      isNamed: true,
    );
  }
}
