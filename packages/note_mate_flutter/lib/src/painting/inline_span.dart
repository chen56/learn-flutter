// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/painting/inline_span.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'dart:ui' as _i3;
import 'package:flutter/src/gestures/recognizer.dart' as _i4;

/// class Accumulator
class Accumulator$Mate extends _i1.Accumulator with _i2.Mate {
  /// Accumulator Accumulator([int _value = 0])
  Accumulator$Mate(

      /// requiredParameters: [int _value = 0]
      int _value)
      : super(_value) {
    mateBuilderName = 'Accumulator';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => Accumulator$Mate(p.get('_value').value);
    mateUse(
      '_value',
      _value,
      isNamed: false,
      defaultValue: 0,
    );
  }
}

/// class InlineSpanSemanticsInformation
class InlineSpanSemanticsInformation$Mate extends _i1.InlineSpanSemanticsInformation with _i2.Mate {
  /// InlineSpanSemanticsInformation InlineSpanSemanticsInformation(String text, {bool isPlaceholder = false, String? semanticsLabel, List<StringAttribute> stringAttributes = const <ui.StringAttribute>[], GestureRecognizer? recognizer})
  InlineSpanSemanticsInformation$Mate(
    /// requiredParameters: String text
    String text, {
    /// optionalParameters: {bool isPlaceholder = false} , default:processed=BooleanLiteralImpl
    bool isPlaceholder = false,

    /// optionalParameters: {String? semanticsLabel} , default:none
    String? semanticsLabel,

    /// optionalParameters: {List<StringAttribute> stringAttributes = const <ui.StringAttribute>[]} , default:unprocessed=ListLiteralImpl
    required List<_i3.StringAttribute> stringAttributes,

    /// optionalParameters: {GestureRecognizer? recognizer} , default:none
    _i4.GestureRecognizer? recognizer,
  }) : super(
          text,
          isPlaceholder: isPlaceholder,
          semanticsLabel: semanticsLabel,
          stringAttributes: stringAttributes,
          recognizer: recognizer,
        ) {
    mateBuilderName = 'InlineSpanSemanticsInformation';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => InlineSpanSemanticsInformation$Mate(
          p.get('text').value,
          isPlaceholder: p.get('isPlaceholder').build(),
          semanticsLabel: p.get('semanticsLabel').build(),
          stringAttributes: p.get('stringAttributes').build(),
          recognizer: p.get('recognizer').build(),
        );
    mateUse(
      'text',
      text,
      isNamed: false,
    );
    mateUse(
      'isPlaceholder',
      isPlaceholder,
      isNamed: true,
      defaultValue: false,
    );
    mateUse(
      'semanticsLabel',
      semanticsLabel,
      isNamed: true,
    );
    mateUse(
      'stringAttributes',
      stringAttributes,
      isNamed: true,
    );
    mateUse(
      'recognizer',
      recognizer,
      isNamed: true,
    );
  }
}
