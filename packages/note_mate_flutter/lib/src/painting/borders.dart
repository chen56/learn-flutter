// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/painting/borders.dart' as _i1;
import 'package:note/mate_core.dart' as _i2;
import 'dart:ui' as _i3;
import 'package:flutter/cupertino.dart' as _i4;

/// class BorderSide with Diagnosticable
class BorderSide$Mate extends _i1.BorderSide with _i2.Mate {
  /// BorderSide BorderSide({Color color = const Color(0xFF000000), double width = 1.0, BorderStyle style = BorderStyle.solid, double strokeAlign = strokeAlignInside})
  BorderSide$Mate({
    /// optionalParameters: {Color color = const Color(0xFF000000)} , default:unprocessed=InstanceCreationExpressionImpl
    super.color,

    /// optionalParameters: {double width = 1.0} , default:processed=DoubleLiteralImpl
    super.width,

    /// optionalParameters: {BorderStyle style = BorderStyle.solid} , default:processed=PrefixedIdentifierImpl
    super.style,

    /// optionalParameters: {double strokeAlign = strokeAlignInside} , default:unprocessed=SimpleIdentifierImpl
    super.strokeAlign,
  })  : mateParams = {
          'color': _i2.BuilderArg<_i3.Color>(
            name: 'color',
            init: color,
            isNamed: true,
          ),
          'width': _i2.BuilderArg<double>(
            name: 'width',
            init: width,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'style': _i2.BuilderArg<_i1.BorderStyle>(
            name: 'style',
            init: style,
            isNamed: true,
            defaultValue: _i4.BorderStyle.solid,
          ),
          'strokeAlign': _i2.BuilderArg<double>(
            name: 'strokeAlign',
            init: strokeAlign,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'BorderSide';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => BorderSide$Mate(
          color: p.get('color').build(),
          width: p.get('width').build(),
          style: p.get('style').build(),
          strokeAlign: p.get('strokeAlign').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
