// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/painting/flutter_logo.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'dart:ui' as _i3;
import 'package:flutter/cupertino.dart' as _i4;
import 'package:flutter/src/painting/edge_insets.dart' as _i5;

/// class FlutterLogoDecoration extends Decoration
class FlutterLogoDecoration$Mate extends _i1.FlutterLogoDecoration with _i2.Mate {
  /// FlutterLogoDecoration FlutterLogoDecoration({Color textColor = const Color(0xFF757575), FlutterLogoStyle style = FlutterLogoStyle.markOnly, EdgeInsets margin = EdgeInsets.zero})
  FlutterLogoDecoration$Mate({
    /// optionalParameters: {Color textColor = const Color(0xFF757575)} , default:unprocessed=InstanceCreationExpressionImpl
    super.textColor,

    /// optionalParameters: {FlutterLogoStyle style = FlutterLogoStyle.markOnly} , default:processed=PrefixedIdentifierImpl
    super.style,

    /// optionalParameters: {EdgeInsets margin = EdgeInsets.zero} , default:processed=PrefixedIdentifierImpl
    super.margin,
  })  : mateParams = {
          'textColor': _i2.BuilderArg<_i3.Color>(
            name: 'textColor',
            init: textColor,
            isNamed: true,
          ),
          'style': _i2.BuilderArg<_i1.FlutterLogoStyle>(
            name: 'style',
            init: style,
            isNamed: true,
            defaultValue: _i4.FlutterLogoStyle.markOnly,
          ),
          'margin': _i2.BuilderArg<_i5.EdgeInsets>(
            name: 'margin',
            init: margin,
            isNamed: true,
            defaultValue: _i4.EdgeInsets.zero,
          ),
        },
        super() {
    mateBuilderName = 'FlutterLogoDecoration';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => FlutterLogoDecoration$Mate(
          textColor: p.get('textColor').build(),
          style: p.get('style').build(),
          margin: p.get('margin').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
