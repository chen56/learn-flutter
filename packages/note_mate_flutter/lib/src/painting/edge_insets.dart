// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/painting/edge_insets.dart';
import 'package:note/mate.dart';
import 'dart:core';
import 'dart:ui';

/// class EdgeInsets extends EdgeInsetsGeometry
class EdgeInsets$Mate extends EdgeInsets with Mate {
  /// EdgeInsets EdgeInsets.fromLTRB(double left, double top, double right, double bottom)
  EdgeInsets$Mate.fromLTRB(
    /// requiredParameters: double left
    double left,

    /// requiredParameters: double top
    double top,

    /// requiredParameters: double right
    double right,

    /// requiredParameters: double bottom
    double bottom,
  ) : super.fromLTRB(
          left,
          top,
          right,
          bottom,
        ) {
    mateCreateName = 'EdgeInsets.fromLTRB';
    matePackageUrl = 'package:flutter/painting.dart';
    mateBuilder = (p) => EdgeInsets$Mate.fromLTRB(
          p.get('left').value,
          p.get('top').value,
          p.get('right').value,
          p.get('bottom').value,
        );
    mateUse(
      'left',
      left,
      isNamed: false,
    );
    mateUse(
      'top',
      top,
      isNamed: false,
    );
    mateUse(
      'right',
      right,
      isNamed: false,
    );
    mateUse(
      'bottom',
      bottom,
      isNamed: false,
    );
  }

  /// EdgeInsets EdgeInsets.all(double value)
  EdgeInsets$Mate.all(

      /// requiredParameters: double value
      double value)
      : super.all(value) {
    mateCreateName = 'EdgeInsets.all';
    matePackageUrl = 'package:flutter/painting.dart';
    mateBuilder = (p) => EdgeInsets$Mate.all(p.get('value').value);
    mateUse(
      'value',
      value,
      isNamed: false,
    );
  }

  /// EdgeInsets EdgeInsets.only({double left = 0.0, double top = 0.0, double right = 0.0, double bottom = 0.0})
  EdgeInsets$Mate.only({
    /// optionalParameters: {double left = 0.0} , default:processed=DoubleLiteralImpl
    double left = 0.0,

    /// optionalParameters: {double top = 0.0} , default:processed=DoubleLiteralImpl
    double top = 0.0,

    /// optionalParameters: {double right = 0.0} , default:processed=DoubleLiteralImpl
    double right = 0.0,

    /// optionalParameters: {double bottom = 0.0} , default:processed=DoubleLiteralImpl
    double bottom = 0.0,
  }) : super.only(
          left: left,
          top: top,
          right: right,
          bottom: bottom,
        ) {
    mateCreateName = 'EdgeInsets.only';
    matePackageUrl = 'package:flutter/painting.dart';
    mateBuilder = (p) => EdgeInsets$Mate.only(
          left: p.get('left').build(),
          top: p.get('top').build(),
          right: p.get('right').build(),
          bottom: p.get('bottom').build(),
        );
    mateUse(
      'left',
      left,
      isNamed: true,
      defaultValue: 0.0,
    );
    mateUse(
      'top',
      top,
      isNamed: true,
      defaultValue: 0.0,
    );
    mateUse(
      'right',
      right,
      isNamed: true,
      defaultValue: 0.0,
    );
    mateUse(
      'bottom',
      bottom,
      isNamed: true,
      defaultValue: 0.0,
    );
  }

  /// EdgeInsets EdgeInsets.symmetric({double vertical = 0.0, double horizontal = 0.0})
  EdgeInsets$Mate.symmetric({
    /// optionalParameters: {double vertical = 0.0} , default:processed=DoubleLiteralImpl
    double vertical = 0.0,

    /// optionalParameters: {double horizontal = 0.0} , default:processed=DoubleLiteralImpl
    double horizontal = 0.0,
  }) : super.symmetric(
          vertical: vertical,
          horizontal: horizontal,
        ) {
    mateCreateName = 'EdgeInsets.symmetric';
    matePackageUrl = 'package:flutter/painting.dart';
    mateBuilder = (p) => EdgeInsets$Mate.symmetric(
          vertical: p.get('vertical').build(),
          horizontal: p.get('horizontal').build(),
        );
    mateUse(
      'vertical',
      vertical,
      isNamed: true,
      defaultValue: 0.0,
    );
    mateUse(
      'horizontal',
      horizontal,
      isNamed: true,
      defaultValue: 0.0,
    );
  }

  /// EdgeInsets EdgeInsets.fromViewPadding(ViewPadding padding, double devicePixelRatio)
  EdgeInsets$Mate.fromViewPadding(
    /// requiredParameters: ViewPadding padding
    ViewPadding padding,

    /// requiredParameters: double devicePixelRatio
    double devicePixelRatio,
  ) : super.fromViewPadding(
          padding,
          devicePixelRatio,
        ) {
    mateCreateName = 'EdgeInsets.fromViewPadding';
    matePackageUrl = 'package:flutter/painting.dart';
    mateBuilder = (p) => EdgeInsets$Mate.fromViewPadding(
          p.get('padding').value,
          p.get('devicePixelRatio').value,
        );
    mateUse(
      'padding',
      padding,
      isNamed: false,
    );
    mateUse(
      'devicePixelRatio',
      devicePixelRatio,
      isNamed: false,
    );
  }
}

/// class EdgeInsetsDirectional extends EdgeInsetsGeometry
class EdgeInsetsDirectional$Mate extends EdgeInsetsDirectional with Mate {
  /// EdgeInsetsDirectional EdgeInsetsDirectional.fromSTEB(double start, double top, double end, double bottom)
  EdgeInsetsDirectional$Mate.fromSTEB(
    /// requiredParameters: double start
    double start,

    /// requiredParameters: double top
    double top,

    /// requiredParameters: double end
    double end,

    /// requiredParameters: double bottom
    double bottom,
  ) : super.fromSTEB(
          start,
          top,
          end,
          bottom,
        ) {
    mateCreateName = 'EdgeInsetsDirectional.fromSTEB';
    matePackageUrl = 'package:flutter/painting.dart';
    mateBuilder = (p) => EdgeInsetsDirectional$Mate.fromSTEB(
          p.get('start').value,
          p.get('top').value,
          p.get('end').value,
          p.get('bottom').value,
        );
    mateUse(
      'start',
      start,
      isNamed: false,
    );
    mateUse(
      'top',
      top,
      isNamed: false,
    );
    mateUse(
      'end',
      end,
      isNamed: false,
    );
    mateUse(
      'bottom',
      bottom,
      isNamed: false,
    );
  }

  /// EdgeInsetsDirectional EdgeInsetsDirectional.only({double start = 0.0, double top = 0.0, double end = 0.0, double bottom = 0.0})
  EdgeInsetsDirectional$Mate.only({
    /// optionalParameters: {double start = 0.0} , default:processed=DoubleLiteralImpl
    double start = 0.0,

    /// optionalParameters: {double top = 0.0} , default:processed=DoubleLiteralImpl
    double top = 0.0,

    /// optionalParameters: {double end = 0.0} , default:processed=DoubleLiteralImpl
    double end = 0.0,

    /// optionalParameters: {double bottom = 0.0} , default:processed=DoubleLiteralImpl
    double bottom = 0.0,
  }) : super.only(
          start: start,
          top: top,
          end: end,
          bottom: bottom,
        ) {
    mateCreateName = 'EdgeInsetsDirectional.only';
    matePackageUrl = 'package:flutter/painting.dart';
    mateBuilder = (p) => EdgeInsetsDirectional$Mate.only(
          start: p.get('start').build(),
          top: p.get('top').build(),
          end: p.get('end').build(),
          bottom: p.get('bottom').build(),
        );
    mateUse(
      'start',
      start,
      isNamed: true,
      defaultValue: 0.0,
    );
    mateUse(
      'top',
      top,
      isNamed: true,
      defaultValue: 0.0,
    );
    mateUse(
      'end',
      end,
      isNamed: true,
      defaultValue: 0.0,
    );
    mateUse(
      'bottom',
      bottom,
      isNamed: true,
      defaultValue: 0.0,
    );
  }

  /// EdgeInsetsDirectional EdgeInsetsDirectional.symmetric({double horizontal = 0.0, double vertical = 0.0})
  EdgeInsetsDirectional$Mate.symmetric({
    /// optionalParameters: {double horizontal = 0.0} , default:processed=DoubleLiteralImpl
    double horizontal = 0.0,

    /// optionalParameters: {double vertical = 0.0} , default:processed=DoubleLiteralImpl
    double vertical = 0.0,
  }) : super.symmetric(
          horizontal: horizontal,
          vertical: vertical,
        ) {
    mateCreateName = 'EdgeInsetsDirectional.symmetric';
    matePackageUrl = 'package:flutter/painting.dart';
    mateBuilder = (p) => EdgeInsetsDirectional$Mate.symmetric(
          horizontal: p.get('horizontal').build(),
          vertical: p.get('vertical').build(),
        );
    mateUse(
      'horizontal',
      horizontal,
      isNamed: true,
      defaultValue: 0.0,
    );
    mateUse(
      'vertical',
      vertical,
      isNamed: true,
      defaultValue: 0.0,
    );
  }

  /// EdgeInsetsDirectional EdgeInsetsDirectional.all(double value)
  EdgeInsetsDirectional$Mate.all(

      /// requiredParameters: double value
      double value)
      : super.all(value) {
    mateCreateName = 'EdgeInsetsDirectional.all';
    matePackageUrl = 'package:flutter/painting.dart';
    mateBuilder = (p) => EdgeInsetsDirectional$Mate.all(p.get('value').value);
    mateUse(
      'value',
      value,
      isNamed: false,
    );
  }
}
