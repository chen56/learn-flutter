// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/painting/shape_decoration.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'dart:ui' as _i3;
import 'package:flutter/src/painting/decoration_image.dart' as _i4;
import 'package:flutter/src/painting/gradient.dart' as _i5;
import 'package:flutter/src/painting/box_shadow.dart' as _i6;
import 'package:flutter/src/painting/borders.dart' as _i7;

/// class ShapeDecoration extends Decoration
class ShapeDecoration$Mate extends _i1.ShapeDecoration with _i2.Mate {
  /// ShapeDecoration ShapeDecoration({Color? color, DecorationImage? image, Gradient? gradient, List<BoxShadow>? shadows, required ShapeBorder shape})
  ShapeDecoration$Mate({
    /// optionalParameters: {Color? color} , default:none
    _i3.Color? color,

    /// optionalParameters: {DecorationImage? image} , default:none
    _i4.DecorationImage? image,

    /// optionalParameters: {Gradient? gradient} , default:none
    _i5.Gradient? gradient,

    /// optionalParameters: {List<BoxShadow>? shadows} , default:none
    List<_i6.BoxShadow>? shadows,

    /// optionalParameters: {required ShapeBorder shape} , default:none
    required _i7.ShapeBorder shape,
  }) : super(
          color: color,
          image: image,
          gradient: gradient,
          shadows: shadows,
          shape: shape,
        ) {
    mateBuilderName = 'ShapeDecoration';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ShapeDecoration$Mate(
          color: p.get('color').build(),
          image: p.get('image').build(),
          gradient: p.get('gradient').build(),
          shadows: p.get('shadows').build(),
          shape: p.get('shape').build(),
        );
    mateUse(
      'color',
      color,
      isNamed: true,
    );
    mateUse(
      'image',
      image,
      isNamed: true,
    );
    mateUse(
      'gradient',
      gradient,
      isNamed: true,
    );
    mateUse(
      'shadows',
      shadows,
      isNamed: true,
    );
    mateUse(
      'shape',
      shape,
      isNamed: true,
    );
  }
}
