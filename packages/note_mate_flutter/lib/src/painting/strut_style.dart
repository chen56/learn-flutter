// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/painting/strut_style.dart' as _i1;
import 'package:note/mate_core.dart' as _i2;
import 'dart:ui' as _i3;
import 'package:flutter/src/painting/text_style.dart' as _i4;

/// class StrutStyle with Diagnosticable
class StrutStyle$Mate extends _i1.StrutStyle with _i2.Mate {
  /// StrutStyle StrutStyle({String? fontFamily, List<String>? fontFamilyFallback, double? fontSize, double? height, TextLeadingDistribution? leadingDistribution, double? leading, FontWeight? fontWeight, FontStyle? fontStyle, bool? forceStrutHeight, String? debugLabel, String? package})
  StrutStyle$Mate({
    /// optionalParameters: {String? fontFamily} , default:none
    super.fontFamily,

    /// optionalParameters: {List<String>? fontFamilyFallback} , default:none
    super.fontFamilyFallback,

    /// optionalParameters: {double? fontSize} , default:none
    super.fontSize,

    /// optionalParameters: {double? height} , default:none
    super.height,

    /// optionalParameters: {TextLeadingDistribution? leadingDistribution} , default:none
    super.leadingDistribution,

    /// optionalParameters: {double? leading} , default:none
    super.leading,

    /// optionalParameters: {FontWeight? fontWeight} , default:none
    super.fontWeight,

    /// optionalParameters: {FontStyle? fontStyle} , default:none
    super.fontStyle,

    /// optionalParameters: {bool? forceStrutHeight} , default:none
    super.forceStrutHeight,

    /// optionalParameters: {String? debugLabel} , default:none
    super.debugLabel,

    /// optionalParameters: {String? package} , default:none
    super.package,
  })  : mateParams = {
          'fontFamily': _i2.BuilderArg<String?>(
            name: 'fontFamily',
            init: fontFamily,
            isNamed: true,
          ),
          'fontFamilyFallback': _i2.BuilderArg<List<String>?>(
            name: 'fontFamilyFallback',
            init: fontFamilyFallback,
            isNamed: true,
          ),
          'fontSize': _i2.BuilderArg<double?>(
            name: 'fontSize',
            init: fontSize,
            isNamed: true,
          ),
          'height': _i2.BuilderArg<double?>(
            name: 'height',
            init: height,
            isNamed: true,
          ),
          'leadingDistribution': _i2.BuilderArg<_i3.TextLeadingDistribution?>(
            name: 'leadingDistribution',
            init: leadingDistribution,
            isNamed: true,
          ),
          'leading': _i2.BuilderArg<double?>(
            name: 'leading',
            init: leading,
            isNamed: true,
          ),
          'fontWeight': _i2.BuilderArg<_i3.FontWeight?>(
            name: 'fontWeight',
            init: fontWeight,
            isNamed: true,
          ),
          'fontStyle': _i2.BuilderArg<_i3.FontStyle?>(
            name: 'fontStyle',
            init: fontStyle,
            isNamed: true,
          ),
          'forceStrutHeight': _i2.BuilderArg<bool?>(
            name: 'forceStrutHeight',
            init: forceStrutHeight,
            isNamed: true,
          ),
          'debugLabel': _i2.BuilderArg<String?>(
            name: 'debugLabel',
            init: debugLabel,
            isNamed: true,
          ),
          'package': _i2.BuilderArg<String?>(
            name: 'package',
            init: package,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'StrutStyle';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => StrutStyle$Mate(
          fontFamily: p.get('fontFamily').build(),
          fontFamilyFallback: p.get('fontFamilyFallback').build(),
          fontSize: p.get('fontSize').build(),
          height: p.get('height').build(),
          leadingDistribution: p.get('leadingDistribution').build(),
          leading: p.get('leading').build(),
          fontWeight: p.get('fontWeight').build(),
          fontStyle: p.get('fontStyle').build(),
          forceStrutHeight: p.get('forceStrutHeight').build(),
          debugLabel: p.get('debugLabel').build(),
          package: p.get('package').build(),
        );
  }

  /// StrutStyle StrutStyle.fromTextStyle(TextStyle textStyle, {String? fontFamily, List<String>? fontFamilyFallback, double? fontSize, double? height, TextLeadingDistribution? leadingDistribution, double? leading, FontWeight? fontWeight, FontStyle? fontStyle, bool? forceStrutHeight, String? debugLabel, String? package})
  StrutStyle$Mate.fromTextStyle(
    /// requiredParameters: TextStyle textStyle
    super.textStyle, {
    /// optionalParameters: {String? fontFamily} , default:none
    super.fontFamily,

    /// optionalParameters: {List<String>? fontFamilyFallback} , default:none
    super.fontFamilyFallback,

    /// optionalParameters: {double? fontSize} , default:none
    super.fontSize,

    /// optionalParameters: {double? height} , default:none
    super.height,

    /// optionalParameters: {TextLeadingDistribution? leadingDistribution} , default:none
    super.leadingDistribution,

    /// optionalParameters: {double? leading} , default:none
    super.leading,

    /// optionalParameters: {FontWeight? fontWeight} , default:none
    super.fontWeight,

    /// optionalParameters: {FontStyle? fontStyle} , default:none
    super.fontStyle,

    /// optionalParameters: {bool? forceStrutHeight} , default:none
    super.forceStrutHeight,

    /// optionalParameters: {String? debugLabel} , default:none
    super.debugLabel,

    /// optionalParameters: {String? package} , default:none
    super.package,
  })  : mateParams = {
          'textStyle': _i2.BuilderArg<_i4.TextStyle>(
            name: 'textStyle',
            init: textStyle,
            isNamed: false,
          ),
          'fontFamily': _i2.BuilderArg<String?>(
            name: 'fontFamily',
            init: fontFamily,
            isNamed: true,
          ),
          'fontFamilyFallback': _i2.BuilderArg<List<String>?>(
            name: 'fontFamilyFallback',
            init: fontFamilyFallback,
            isNamed: true,
          ),
          'fontSize': _i2.BuilderArg<double?>(
            name: 'fontSize',
            init: fontSize,
            isNamed: true,
          ),
          'height': _i2.BuilderArg<double?>(
            name: 'height',
            init: height,
            isNamed: true,
          ),
          'leadingDistribution': _i2.BuilderArg<_i3.TextLeadingDistribution?>(
            name: 'leadingDistribution',
            init: leadingDistribution,
            isNamed: true,
          ),
          'leading': _i2.BuilderArg<double?>(
            name: 'leading',
            init: leading,
            isNamed: true,
          ),
          'fontWeight': _i2.BuilderArg<_i3.FontWeight?>(
            name: 'fontWeight',
            init: fontWeight,
            isNamed: true,
          ),
          'fontStyle': _i2.BuilderArg<_i3.FontStyle?>(
            name: 'fontStyle',
            init: fontStyle,
            isNamed: true,
          ),
          'forceStrutHeight': _i2.BuilderArg<bool?>(
            name: 'forceStrutHeight',
            init: forceStrutHeight,
            isNamed: true,
          ),
          'debugLabel': _i2.BuilderArg<String?>(
            name: 'debugLabel',
            init: debugLabel,
            isNamed: true,
          ),
          'package': _i2.BuilderArg<String?>(
            name: 'package',
            init: package,
            isNamed: true,
          ),
        },
        super.fromTextStyle() {
    mateBuilderName = 'StrutStyle.fromTextStyle';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => StrutStyle$Mate.fromTextStyle(
          p.get('textStyle').value,
          fontFamily: p.get('fontFamily').build(),
          fontFamilyFallback: p.get('fontFamilyFallback').build(),
          fontSize: p.get('fontSize').build(),
          height: p.get('height').build(),
          leadingDistribution: p.get('leadingDistribution').build(),
          leading: p.get('leading').build(),
          fontWeight: p.get('fontWeight').build(),
          fontStyle: p.get('fontStyle').build(),
          forceStrutHeight: p.get('forceStrutHeight').build(),
          debugLabel: p.get('debugLabel').build(),
          package: p.get('package').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
