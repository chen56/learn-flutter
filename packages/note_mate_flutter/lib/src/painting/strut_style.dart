// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/painting/strut_style.dart';
import 'package:note/mate.dart';
import 'dart:core';
import 'dart:ui';
import 'package:flutter/src/painting/text_style.dart';

/// class StrutStyle with Diagnosticable
class StrutStyle$Mate extends StrutStyle with Mate {
  /// StrutStyle StrutStyle({String? fontFamily, List<String>? fontFamilyFallback, double? fontSize, double? height, TextLeadingDistribution? leadingDistribution, double? leading, FontWeight? fontWeight, FontStyle? fontStyle, bool? forceStrutHeight, String? debugLabel, String? package})
  StrutStyle$Mate({
    /// optionalParameters: {String? fontFamily} , defaultValue:none
    String? fontFamily,

    /// optionalParameters: {List<String>? fontFamilyFallback} , defaultValue:none
    List<String>? fontFamilyFallback,

    /// optionalParameters: {double? fontSize} , defaultValue:none
    double? fontSize,

    /// optionalParameters: {double? height} , defaultValue:none
    double? height,

    /// optionalParameters: {TextLeadingDistribution? leadingDistribution} , defaultValue:none
    TextLeadingDistribution? leadingDistribution,

    /// optionalParameters: {double? leading} , defaultValue:none
    double? leading,

    /// optionalParameters: {FontWeight? fontWeight} , defaultValue:none
    FontWeight? fontWeight,

    /// optionalParameters: {FontStyle? fontStyle} , defaultValue:none
    FontStyle? fontStyle,

    /// optionalParameters: {bool? forceStrutHeight} , defaultValue:none
    bool? forceStrutHeight,

    /// optionalParameters: {String? debugLabel} , defaultValue:none
    String? debugLabel,

    /// optionalParameters: {String? package} , defaultValue:none
    String? package,
  }) : super(
          fontFamily: fontFamily,
          fontFamilyFallback: fontFamilyFallback,
          fontSize: fontSize,
          height: height,
          leadingDistribution: leadingDistribution,
          leading: leading,
          fontWeight: fontWeight,
          fontStyle: fontStyle,
          forceStrutHeight: forceStrutHeight,
          debugLabel: debugLabel,
          package: package,
        ) {
    mateCreateName = 'StrutStyle';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => StrutStyle$Mate(
          fontFamily: p.get('fontFamily').build(),
          fontFamilyFallback: p.get('fontFamilyFallback').build(),
          fontSize: p.get('fontSize').build(),
          height: p.get('height').build(),
          leadingDistribution: p.get('leadingDistribution').build(),
          leading: p.get('leading').build(),
          fontWeight: p.get('fontWeight').build(),
          fontStyle: p.get('fontStyle').build(),
          forceStrutHeight: p.get('forceStrutHeight').build(),
          debugLabel: p.get('debugLabel').build(),
          package: p.get('package').build(),
        );
    mateUse('fontFamily', fontFamily);
    mateUse('fontFamilyFallback', fontFamilyFallback);
    mateUse('fontSize', fontSize);
    mateUse('height', height);
    mateUse('leadingDistribution', leadingDistribution);
    mateUse('leading', leading);
    mateUse('fontWeight', fontWeight);
    mateUse('fontStyle', fontStyle);
    mateUse('forceStrutHeight', forceStrutHeight);
    mateUse('debugLabel', debugLabel);
    mateUse('package', package);
  }

  /// StrutStyle StrutStyle.fromTextStyle(TextStyle textStyle, {String? fontFamily, List<String>? fontFamilyFallback, double? fontSize, double? height, TextLeadingDistribution? leadingDistribution, double? leading, FontWeight? fontWeight, FontStyle? fontStyle, bool? forceStrutHeight, String? debugLabel, String? package})
  StrutStyle$Mate.fromTextStyle(
    /// requiredParameters: TextStyle textStyle
    TextStyle textStyle, {
    /// optionalParameters: {String? fontFamily} , defaultValue:none
    String? fontFamily,

    /// optionalParameters: {List<String>? fontFamilyFallback} , defaultValue:none
    List<String>? fontFamilyFallback,

    /// optionalParameters: {double? fontSize} , defaultValue:none
    double? fontSize,

    /// optionalParameters: {double? height} , defaultValue:none
    double? height,

    /// optionalParameters: {TextLeadingDistribution? leadingDistribution} , defaultValue:none
    TextLeadingDistribution? leadingDistribution,

    /// optionalParameters: {double? leading} , defaultValue:none
    double? leading,

    /// optionalParameters: {FontWeight? fontWeight} , defaultValue:none
    FontWeight? fontWeight,

    /// optionalParameters: {FontStyle? fontStyle} , defaultValue:none
    FontStyle? fontStyle,

    /// optionalParameters: {bool? forceStrutHeight} , defaultValue:none
    bool? forceStrutHeight,

    /// optionalParameters: {String? debugLabel} , defaultValue:none
    String? debugLabel,

    /// optionalParameters: {String? package} , defaultValue:none
    String? package,
  }) : super.fromTextStyle(
          textStyle,
          fontFamily: fontFamily,
          fontFamilyFallback: fontFamilyFallback,
          fontSize: fontSize,
          height: height,
          leadingDistribution: leadingDistribution,
          leading: leading,
          fontWeight: fontWeight,
          fontStyle: fontStyle,
          forceStrutHeight: forceStrutHeight,
          debugLabel: debugLabel,
          package: package,
        ) {
    mateCreateName = 'StrutStyle.fromTextStyle';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => StrutStyle$Mate.fromTextStyle(
          p.get('textStyle').value,
          fontFamily: p.get('fontFamily').build(),
          fontFamilyFallback: p.get('fontFamilyFallback').build(),
          fontSize: p.get('fontSize').build(),
          height: p.get('height').build(),
          leadingDistribution: p.get('leadingDistribution').build(),
          leading: p.get('leading').build(),
          fontWeight: p.get('fontWeight').build(),
          fontStyle: p.get('fontStyle').build(),
          forceStrutHeight: p.get('forceStrutHeight').build(),
          debugLabel: p.get('debugLabel').build(),
          package: p.get('package').build(),
        );
    mateUse('textStyle', textStyle);
    mateUse('fontFamily', fontFamily);
    mateUse('fontFamilyFallback', fontFamilyFallback);
    mateUse('fontSize', fontSize);
    mateUse('height', height);
    mateUse('leadingDistribution', leadingDistribution);
    mateUse('leading', leading);
    mateUse('fontWeight', fontWeight);
    mateUse('fontStyle', fontStyle);
    mateUse('forceStrutHeight', forceStrutHeight);
    mateUse('debugLabel', debugLabel);
    mateUse('package', package);
  }
}
