// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/painting/image_provider.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/services/asset_bundle.dart' as _i3;
import 'dart:ui' as _i4;
import 'package:flutter/src/foundation/platform.dart' as _i5;
import 'package:flutter/cupertino.dart' as _i6;
import 'dart:io' as _i7;
import 'dart:typed_data' as _i8;

/// class ImageConfiguration
class ImageConfiguration$Mate extends _i1.ImageConfiguration with _i2.Mate {
  /// ImageConfiguration ImageConfiguration({AssetBundle? bundle, double? devicePixelRatio, Locale? locale, TextDirection? textDirection, Size? size, TargetPlatform? platform})
  ImageConfiguration$Mate({
    /// optionalParameters: {AssetBundle? bundle} , default:none
    _i3.AssetBundle? bundle,

    /// optionalParameters: {double? devicePixelRatio} , default:none
    double? devicePixelRatio,

    /// optionalParameters: {Locale? locale} , default:none
    _i4.Locale? locale,

    /// optionalParameters: {TextDirection? textDirection} , default:none
    _i4.TextDirection? textDirection,

    /// optionalParameters: {Size? size} , default:none
    _i4.Size? size,

    /// optionalParameters: {TargetPlatform? platform} , default:none
    _i5.TargetPlatform? platform,
  }) : super(
          bundle: bundle,
          devicePixelRatio: devicePixelRatio,
          locale: locale,
          textDirection: textDirection,
          size: size,
          platform: platform,
        ) {
    mateBuilderName = 'ImageConfiguration';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ImageConfiguration$Mate(
          bundle: p.get('bundle').build(),
          devicePixelRatio: p.get('devicePixelRatio').build(),
          locale: p.get('locale').build(),
          textDirection: p.get('textDirection').build(),
          size: p.get('size').build(),
          platform: p.get('platform').build(),
        );
    mateUse(
      'bundle',
      bundle,
      isNamed: true,
    );
    mateUse(
      'devicePixelRatio',
      devicePixelRatio,
      isNamed: true,
    );
    mateUse(
      'locale',
      locale,
      isNamed: true,
    );
    mateUse(
      'textDirection',
      textDirection,
      isNamed: true,
    );
    mateUse(
      'size',
      size,
      isNamed: true,
    );
    mateUse(
      'platform',
      platform,
      isNamed: true,
    );
  }
}

/// class AssetBundleImageKey
class AssetBundleImageKey$Mate extends _i1.AssetBundleImageKey with _i2.Mate {
  /// AssetBundleImageKey AssetBundleImageKey({required AssetBundle bundle, required String name, required double scale})
  AssetBundleImageKey$Mate({
    /// optionalParameters: {required AssetBundle bundle} , default:none
    required _i3.AssetBundle bundle,

    /// optionalParameters: {required String name} , default:none
    required String name,

    /// optionalParameters: {required double scale} , default:none
    required double scale,
  }) : super(
          bundle: bundle,
          name: name,
          scale: scale,
        ) {
    mateBuilderName = 'AssetBundleImageKey';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => AssetBundleImageKey$Mate(
          bundle: p.get('bundle').build(),
          name: p.get('name').build(),
          scale: p.get('scale').build(),
        );
    mateUse(
      'bundle',
      bundle,
      isNamed: true,
    );
    mateUse(
      'name',
      name,
      isNamed: true,
    );
    mateUse(
      'scale',
      scale,
      isNamed: true,
    );
  }
}

/// class ResizeImage extends ImageProvider<ResizeImageKey>
class ResizeImage$Mate extends _i1.ResizeImage with _i2.Mate {
  /// ResizeImage ResizeImage(ImageProvider<Object> imageProvider, {int? width, int? height, ResizeImagePolicy policy = ResizeImagePolicy.exact, bool allowUpscaling = false})
  ResizeImage$Mate(
    /// requiredParameters: ImageProvider<Object> imageProvider
    _i1.ImageProvider<Object> imageProvider, {
    /// optionalParameters: {int? width} , default:none
    int? width,

    /// optionalParameters: {int? height} , default:none
    int? height,

    /// optionalParameters: {ResizeImagePolicy policy = ResizeImagePolicy.exact} , default:processed=PrefixedIdentifierImpl
    _i1.ResizeImagePolicy policy = _i6.ResizeImagePolicy.exact,

    /// optionalParameters: {bool allowUpscaling = false} , default:processed=BooleanLiteralImpl
    bool allowUpscaling = false,
  }) : super(
          imageProvider,
          width: width,
          height: height,
          policy: policy,
          allowUpscaling: allowUpscaling,
        ) {
    mateBuilderName = 'ResizeImage';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ResizeImage$Mate(
          p.get('imageProvider').value,
          width: p.get('width').build(),
          height: p.get('height').build(),
          policy: p.get('policy').build(),
          allowUpscaling: p.get('allowUpscaling').build(),
        );
    mateUse(
      'imageProvider',
      imageProvider,
      isNamed: false,
    );
    mateUse(
      'width',
      width,
      isNamed: true,
    );
    mateUse(
      'height',
      height,
      isNamed: true,
    );
    mateUse(
      'policy',
      policy,
      isNamed: true,
      defaultValue: _i6.ResizeImagePolicy.exact,
    );
    mateUse(
      'allowUpscaling',
      allowUpscaling,
      isNamed: true,
      defaultValue: false,
    );
  }
}

/// class FileImage extends ImageProvider<FileImage>
class FileImage$Mate extends _i1.FileImage with _i2.Mate {
  /// FileImage FileImage(File file, {double scale = 1.0})
  FileImage$Mate(
    /// requiredParameters: File file
    _i7.File file, {
    /// optionalParameters: {double scale = 1.0} , default:processed=DoubleLiteralImpl
    double scale = 1.0,
  }) : super(
          file,
          scale: scale,
        ) {
    mateBuilderName = 'FileImage';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => FileImage$Mate(
          p.get('file').value,
          scale: p.get('scale').build(),
        );
    mateUse(
      'file',
      file,
      isNamed: false,
    );
    mateUse(
      'scale',
      scale,
      isNamed: true,
      defaultValue: 1.0,
    );
  }
}

/// class MemoryImage extends ImageProvider<MemoryImage>
class MemoryImage$Mate extends _i1.MemoryImage with _i2.Mate {
  /// MemoryImage MemoryImage(Uint8List bytes, {double scale = 1.0})
  MemoryImage$Mate(
    /// requiredParameters: Uint8List bytes
    _i8.Uint8List bytes, {
    /// optionalParameters: {double scale = 1.0} , default:processed=DoubleLiteralImpl
    double scale = 1.0,
  }) : super(
          bytes,
          scale: scale,
        ) {
    mateBuilderName = 'MemoryImage';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => MemoryImage$Mate(
          p.get('bytes').value,
          scale: p.get('scale').build(),
        );
    mateUse(
      'bytes',
      bytes,
      isNamed: false,
    );
    mateUse(
      'scale',
      scale,
      isNamed: true,
      defaultValue: 1.0,
    );
  }
}

/// class ExactAssetImage extends AssetBundleImageProvider
class ExactAssetImage$Mate extends _i1.ExactAssetImage with _i2.Mate {
  /// ExactAssetImage ExactAssetImage(String assetName, {double scale = 1.0, AssetBundle? bundle, String? package})
  ExactAssetImage$Mate(
    /// requiredParameters: String assetName
    String assetName, {
    /// optionalParameters: {double scale = 1.0} , default:processed=DoubleLiteralImpl
    double scale = 1.0,

    /// optionalParameters: {AssetBundle? bundle} , default:none
    _i3.AssetBundle? bundle,

    /// optionalParameters: {String? package} , default:none
    String? package,
  }) : super(
          assetName,
          scale: scale,
          bundle: bundle,
          package: package,
        ) {
    mateBuilderName = 'ExactAssetImage';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ExactAssetImage$Mate(
          p.get('assetName').value,
          scale: p.get('scale').build(),
          bundle: p.get('bundle').build(),
          package: p.get('package').build(),
        );
    mateUse(
      'assetName',
      assetName,
      isNamed: false,
    );
    mateUse(
      'scale',
      scale,
      isNamed: true,
      defaultValue: 1.0,
    );
    mateUse(
      'bundle',
      bundle,
      isNamed: true,
    );
    mateUse(
      'package',
      package,
      isNamed: true,
    );
  }
}

/// class NetworkImageLoadException implements Exception
class NetworkImageLoadException$Mate extends _i1.NetworkImageLoadException with _i2.Mate {
  /// NetworkImageLoadException NetworkImageLoadException({required int statusCode, required Uri uri})
  NetworkImageLoadException$Mate({
    /// optionalParameters: {required int statusCode} , default:none
    required int statusCode,

    /// optionalParameters: {required Uri uri} , default:none
    required Uri uri,
  }) : super(
          statusCode: statusCode,
          uri: uri,
        ) {
    mateBuilderName = 'NetworkImageLoadException';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => NetworkImageLoadException$Mate(
          statusCode: p.get('statusCode').build(),
          uri: p.get('uri').build(),
        );
    mateUse(
      'statusCode',
      statusCode,
      isNamed: true,
    );
    mateUse(
      'uri',
      uri,
      isNamed: true,
    );
  }
}
