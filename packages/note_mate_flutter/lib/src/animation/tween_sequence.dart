// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/animation/tween_sequence.dart';
import 'package:note/mate.dart';
import 'dart:core';
import 'package:flutter/src/animation/tween.dart';

/// class TweenSequence<T> extends Animatable<T>
class TweenSequence$Mate<T> extends TweenSequence<T> with Mate {
  /// TweenSequence<T> TweenSequence(List<TweenSequenceItem<T>> items)
  TweenSequence$Mate(

      /// requiredParameters: List<TweenSequenceItem<T>> items
      List<TweenSequenceItem<T>> items)
      : super(items) {
    mateBuilder = (p) => TweenSequence$Mate<T>(p.get('items').value);
    mateDeclare('items', items);
  }
}

/// class FlippedTweenSequence extends TweenSequence<double>
class FlippedTweenSequence$Mate extends FlippedTweenSequence with Mate {
  /// FlippedTweenSequence FlippedTweenSequence(List<TweenSequenceItem<double>> items)
  FlippedTweenSequence$Mate(

      /// requiredParameters: List<TweenSequenceItem<double>> items
      List<TweenSequenceItem<double>> items)
      : super(items) {
    mateBuilder = (p) => FlippedTweenSequence$Mate(p.get('items').value);
    mateDeclare('items', items);
  }
}

/// class TweenSequenceItem<T>
class TweenSequenceItem$Mate<T> extends TweenSequenceItem<T> with Mate {
  /// TweenSequenceItem<T> TweenSequenceItem({required Animatable<T> tween, required double weight})
  TweenSequenceItem$Mate({
    /// optionalParameters: {required Animatable<T> tween} , defaultValue:none
    required Animatable<T> tween,

    /// optionalParameters: {required double weight} , defaultValue:none
    required double weight,
  }) : super(
          tween: tween,
          weight: weight,
        ) {
    mateBuilder = (p) => TweenSequenceItem$Mate<T>(
          tween: p.get('tween').build(),
          weight: p.get('weight').build(),
        );
    mateDeclare('tween', tween);
    mateDeclare('weight', weight);
  }
}
