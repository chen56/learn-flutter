// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/animation/tween.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'dart:ui' as _i3;
import 'package:flutter/src/animation/curves.dart' as _i4;

/// class Tween<T extends Object?> extends Animatable<T>
class Tween$Mate<T extends Object?> extends _i1.Tween<T> with _i2.Mate {
  /// Tween<T> Tween({T? begin, T? end})
  Tween$Mate({
    /// optionalParameters: {T? begin} , default:none
    T? begin,

    /// optionalParameters: {T? end} , default:none
    T? end,
  }) : super(
          begin: begin,
          end: end,
        ) {
    mateBuilderName = 'Tween';
    matePackageUrl = 'package:flutter/animation.dart';
    mateBuilder = (p) => Tween$Mate<T>(
          begin: p.get('begin').build(),
          end: p.get('end').build(),
        );
    mateUse(
      'begin',
      begin,
      isNamed: true,
    );
    mateUse(
      'end',
      end,
      isNamed: true,
    );
  }
}

/// class ReverseTween<T extends Object?> extends Tween<T>
class ReverseTween$Mate<T extends Object?> extends _i1.ReverseTween<T> with _i2.Mate {
  /// ReverseTween<T> ReverseTween(Tween<T> parent)
  ReverseTween$Mate(

      /// requiredParameters: Tween<T> parent
      _i1.Tween<T> parent)
      : super(parent) {
    mateBuilderName = 'ReverseTween';
    matePackageUrl = 'package:flutter/animation.dart';
    mateBuilder = (p) => ReverseTween$Mate<T>(p.get('parent').value);
    mateUse(
      'parent',
      parent,
      isNamed: false,
    );
  }
}

/// class ColorTween extends Tween<Color?>
class ColorTween$Mate extends _i1.ColorTween with _i2.Mate {
  /// ColorTween ColorTween({Color? begin, Color? end})
  ColorTween$Mate({
    /// optionalParameters: {Color? begin} , default:none
    _i3.Color? begin,

    /// optionalParameters: {Color? end} , default:none
    _i3.Color? end,
  }) : super(
          begin: begin,
          end: end,
        ) {
    mateBuilderName = 'ColorTween';
    matePackageUrl = 'package:flutter/animation.dart';
    mateBuilder = (p) => ColorTween$Mate(
          begin: p.get('begin').build(),
          end: p.get('end').build(),
        );
    mateUse(
      'begin',
      begin,
      isNamed: true,
    );
    mateUse(
      'end',
      end,
      isNamed: true,
    );
  }
}

/// class SizeTween extends Tween<Size?>
class SizeTween$Mate extends _i1.SizeTween with _i2.Mate {
  /// SizeTween SizeTween({Size? begin, Size? end})
  SizeTween$Mate({
    /// optionalParameters: {Size? begin} , default:none
    _i3.Size? begin,

    /// optionalParameters: {Size? end} , default:none
    _i3.Size? end,
  }) : super(
          begin: begin,
          end: end,
        ) {
    mateBuilderName = 'SizeTween';
    matePackageUrl = 'package:flutter/animation.dart';
    mateBuilder = (p) => SizeTween$Mate(
          begin: p.get('begin').build(),
          end: p.get('end').build(),
        );
    mateUse(
      'begin',
      begin,
      isNamed: true,
    );
    mateUse(
      'end',
      end,
      isNamed: true,
    );
  }
}

/// class RectTween extends Tween<Rect?>
class RectTween$Mate extends _i1.RectTween with _i2.Mate {
  /// RectTween RectTween({Rect? begin, Rect? end})
  RectTween$Mate({
    /// optionalParameters: {Rect? begin} , default:none
    _i3.Rect? begin,

    /// optionalParameters: {Rect? end} , default:none
    _i3.Rect? end,
  }) : super(
          begin: begin,
          end: end,
        ) {
    mateBuilderName = 'RectTween';
    matePackageUrl = 'package:flutter/animation.dart';
    mateBuilder = (p) => RectTween$Mate(
          begin: p.get('begin').build(),
          end: p.get('end').build(),
        );
    mateUse(
      'begin',
      begin,
      isNamed: true,
    );
    mateUse(
      'end',
      end,
      isNamed: true,
    );
  }
}

/// class IntTween extends Tween<int>
class IntTween$Mate extends _i1.IntTween with _i2.Mate {
  /// IntTween IntTween({int? begin, int? end})
  IntTween$Mate({
    /// optionalParameters: {int? begin} , default:none
    int? begin,

    /// optionalParameters: {int? end} , default:none
    int? end,
  }) : super(
          begin: begin,
          end: end,
        ) {
    mateBuilderName = 'IntTween';
    matePackageUrl = 'package:flutter/animation.dart';
    mateBuilder = (p) => IntTween$Mate(
          begin: p.get('begin').build(),
          end: p.get('end').build(),
        );
    mateUse(
      'begin',
      begin,
      isNamed: true,
    );
    mateUse(
      'end',
      end,
      isNamed: true,
    );
  }
}

/// class StepTween extends Tween<int>
class StepTween$Mate extends _i1.StepTween with _i2.Mate {
  /// StepTween StepTween({int? begin, int? end})
  StepTween$Mate({
    /// optionalParameters: {int? begin} , default:none
    int? begin,

    /// optionalParameters: {int? end} , default:none
    int? end,
  }) : super(
          begin: begin,
          end: end,
        ) {
    mateBuilderName = 'StepTween';
    matePackageUrl = 'package:flutter/animation.dart';
    mateBuilder = (p) => StepTween$Mate(
          begin: p.get('begin').build(),
          end: p.get('end').build(),
        );
    mateUse(
      'begin',
      begin,
      isNamed: true,
    );
    mateUse(
      'end',
      end,
      isNamed: true,
    );
  }
}

/// class ConstantTween<T> extends Tween<T>
class ConstantTween$Mate<T> extends _i1.ConstantTween<T> with _i2.Mate {
  /// ConstantTween<T> ConstantTween(T value)
  ConstantTween$Mate(

      /// requiredParameters: T value
      T value)
      : super(value) {
    mateBuilderName = 'ConstantTween';
    matePackageUrl = 'package:flutter/animation.dart';
    mateBuilder = (p) => ConstantTween$Mate<T>(p.get('value').value);
    mateUse(
      'value',
      value,
      isNamed: false,
    );
  }
}

/// class CurveTween extends Animatable<double>
class CurveTween$Mate extends _i1.CurveTween with _i2.Mate {
  /// CurveTween CurveTween({required Curve curve})
  CurveTween$Mate(
      {
      /// optionalParameters: {required Curve curve} , default:none
      required _i4.Curve curve})
      : super(curve: curve) {
    mateBuilderName = 'CurveTween';
    matePackageUrl = 'package:flutter/animation.dart';
    mateBuilder = (p) => CurveTween$Mate(curve: p.get('curve').build());
    mateUse(
      'curve',
      curve,
      isNamed: true,
    );
  }
}
