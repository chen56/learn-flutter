// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/gestures/events.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'dart:ui' as _i3;
import 'package:flutter/animation.dart' as _i4;

/// class PointerAddedEvent extends PointerEvent with _PointerEventDescription, _CopyPointerAddedEvent
class PointerAddedEvent$Mate extends _i1.PointerAddedEvent with _i2.Mate {
  /// PointerAddedEvent PointerAddedEvent({Duration timeStamp = Duration.zero, int pointer = 0, PointerDeviceKind kind = PointerDeviceKind.touch, int device = 0, Offset position = Offset.zero, bool obscured = false, double pressureMin = 1.0, double pressureMax = 1.0, double distance = 0.0, double distanceMax = 0.0, double radiusMin = 0.0, double radiusMax = 0.0, double orientation = 0.0, double tilt = 0.0, int embedderId = 0})
  PointerAddedEvent$Mate({
    /// optionalParameters: {Duration timeStamp = Duration.zero} , default:processed=PrefixedIdentifierImpl
    super.timeStamp,

    /// optionalParameters: {int pointer = 0} , default:processed=IntegerLiteralImpl
    super.pointer,

    /// optionalParameters: {PointerDeviceKind kind = PointerDeviceKind.touch} , default:processed=PrefixedIdentifierImpl
    super.kind,

    /// optionalParameters: {int device = 0} , default:processed=IntegerLiteralImpl
    super.device,

    /// optionalParameters: {Offset position = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.position,

    /// optionalParameters: {bool obscured = false} , default:processed=BooleanLiteralImpl
    super.obscured,

    /// optionalParameters: {double pressureMin = 1.0} , default:processed=DoubleLiteralImpl
    super.pressureMin,

    /// optionalParameters: {double pressureMax = 1.0} , default:processed=DoubleLiteralImpl
    super.pressureMax,

    /// optionalParameters: {double distance = 0.0} , default:processed=DoubleLiteralImpl
    super.distance,

    /// optionalParameters: {double distanceMax = 0.0} , default:processed=DoubleLiteralImpl
    super.distanceMax,

    /// optionalParameters: {double radiusMin = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMin,

    /// optionalParameters: {double radiusMax = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMax,

    /// optionalParameters: {double orientation = 0.0} , default:processed=DoubleLiteralImpl
    super.orientation,

    /// optionalParameters: {double tilt = 0.0} , default:processed=DoubleLiteralImpl
    super.tilt,

    /// optionalParameters: {int embedderId = 0} , default:processed=IntegerLiteralImpl
    super.embedderId,
  })  : mateParams = {
          'timeStamp': _i2.BuilderArg<Duration>(
            name: 'timeStamp',
            init: timeStamp,
            isNamed: true,
            defaultValue: Duration.zero,
          ),
          'pointer': _i2.BuilderArg<int>(
            name: 'pointer',
            init: pointer,
            isNamed: true,
            defaultValue: 0,
          ),
          'kind': _i2.BuilderArg<_i3.PointerDeviceKind>(
            name: 'kind',
            init: kind,
            isNamed: true,
            defaultValue: _i3.PointerDeviceKind.touch,
          ),
          'device': _i2.BuilderArg<int>(
            name: 'device',
            init: device,
            isNamed: true,
            defaultValue: 0,
          ),
          'position': _i2.BuilderArg<_i3.Offset>(
            name: 'position',
            init: position,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'obscured': _i2.BuilderArg<bool>(
            name: 'obscured',
            init: obscured,
            isNamed: true,
            defaultValue: false,
          ),
          'pressureMin': _i2.BuilderArg<double>(
            name: 'pressureMin',
            init: pressureMin,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'pressureMax': _i2.BuilderArg<double>(
            name: 'pressureMax',
            init: pressureMax,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'distance': _i2.BuilderArg<double>(
            name: 'distance',
            init: distance,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'distanceMax': _i2.BuilderArg<double>(
            name: 'distanceMax',
            init: distanceMax,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMin': _i2.BuilderArg<double>(
            name: 'radiusMin',
            init: radiusMin,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMax': _i2.BuilderArg<double>(
            name: 'radiusMax',
            init: radiusMax,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'orientation': _i2.BuilderArg<double>(
            name: 'orientation',
            init: orientation,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'tilt': _i2.BuilderArg<double>(
            name: 'tilt',
            init: tilt,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'embedderId': _i2.BuilderArg<int>(
            name: 'embedderId',
            init: embedderId,
            isNamed: true,
            defaultValue: 0,
          ),
        },
        super() {
    mateBuilderName = 'PointerAddedEvent';
    matePackageUrl = 'package:flutter/gestures.dart';
    mateBuilder = (p) => PointerAddedEvent$Mate(
          timeStamp: p.get('timeStamp').build(),
          pointer: p.get('pointer').build(),
          kind: p.get('kind').build(),
          device: p.get('device').build(),
          position: p.get('position').build(),
          obscured: p.get('obscured').build(),
          pressureMin: p.get('pressureMin').build(),
          pressureMax: p.get('pressureMax').build(),
          distance: p.get('distance').build(),
          distanceMax: p.get('distanceMax').build(),
          radiusMin: p.get('radiusMin').build(),
          radiusMax: p.get('radiusMax').build(),
          orientation: p.get('orientation').build(),
          tilt: p.get('tilt').build(),
          embedderId: p.get('embedderId').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class PointerRemovedEvent extends PointerEvent with _PointerEventDescription, _CopyPointerRemovedEvent
class PointerRemovedEvent$Mate extends _i1.PointerRemovedEvent with _i2.Mate {
  /// PointerRemovedEvent PointerRemovedEvent({Duration timeStamp = Duration.zero, int pointer = 0, PointerDeviceKind kind = PointerDeviceKind.touch, int device = 0, Offset position = Offset.zero, bool obscured = false, double pressureMin = 1.0, double pressureMax = 1.0, double distanceMax = 0.0, double radiusMin = 0.0, double radiusMax = 0.0, PointerRemovedEvent? original, int embedderId = 0})
  PointerRemovedEvent$Mate({
    /// optionalParameters: {Duration timeStamp = Duration.zero} , default:processed=PrefixedIdentifierImpl
    super.timeStamp,

    /// optionalParameters: {int pointer = 0} , default:processed=IntegerLiteralImpl
    super.pointer,

    /// optionalParameters: {PointerDeviceKind kind = PointerDeviceKind.touch} , default:processed=PrefixedIdentifierImpl
    super.kind,

    /// optionalParameters: {int device = 0} , default:processed=IntegerLiteralImpl
    super.device,

    /// optionalParameters: {Offset position = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.position,

    /// optionalParameters: {bool obscured = false} , default:processed=BooleanLiteralImpl
    super.obscured,

    /// optionalParameters: {double pressureMin = 1.0} , default:processed=DoubleLiteralImpl
    super.pressureMin,

    /// optionalParameters: {double pressureMax = 1.0} , default:processed=DoubleLiteralImpl
    super.pressureMax,

    /// optionalParameters: {double distanceMax = 0.0} , default:processed=DoubleLiteralImpl
    super.distanceMax,

    /// optionalParameters: {double radiusMin = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMin,

    /// optionalParameters: {double radiusMax = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMax,

    /// optionalParameters: {PointerRemovedEvent? original} , default:none
    super.original,

    /// optionalParameters: {int embedderId = 0} , default:processed=IntegerLiteralImpl
    super.embedderId,
  })  : mateParams = {
          'timeStamp': _i2.BuilderArg<Duration>(
            name: 'timeStamp',
            init: timeStamp,
            isNamed: true,
            defaultValue: Duration.zero,
          ),
          'pointer': _i2.BuilderArg<int>(
            name: 'pointer',
            init: pointer,
            isNamed: true,
            defaultValue: 0,
          ),
          'kind': _i2.BuilderArg<_i3.PointerDeviceKind>(
            name: 'kind',
            init: kind,
            isNamed: true,
            defaultValue: _i3.PointerDeviceKind.touch,
          ),
          'device': _i2.BuilderArg<int>(
            name: 'device',
            init: device,
            isNamed: true,
            defaultValue: 0,
          ),
          'position': _i2.BuilderArg<_i3.Offset>(
            name: 'position',
            init: position,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'obscured': _i2.BuilderArg<bool>(
            name: 'obscured',
            init: obscured,
            isNamed: true,
            defaultValue: false,
          ),
          'pressureMin': _i2.BuilderArg<double>(
            name: 'pressureMin',
            init: pressureMin,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'pressureMax': _i2.BuilderArg<double>(
            name: 'pressureMax',
            init: pressureMax,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'distanceMax': _i2.BuilderArg<double>(
            name: 'distanceMax',
            init: distanceMax,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMin': _i2.BuilderArg<double>(
            name: 'radiusMin',
            init: radiusMin,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMax': _i2.BuilderArg<double>(
            name: 'radiusMax',
            init: radiusMax,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'original': _i2.BuilderArg<_i1.PointerRemovedEvent?>(
            name: 'original',
            init: original,
            isNamed: true,
          ),
          'embedderId': _i2.BuilderArg<int>(
            name: 'embedderId',
            init: embedderId,
            isNamed: true,
            defaultValue: 0,
          ),
        },
        super() {
    mateBuilderName = 'PointerRemovedEvent';
    matePackageUrl = 'package:flutter/gestures.dart';
    mateBuilder = (p) => PointerRemovedEvent$Mate(
          timeStamp: p.get('timeStamp').build(),
          pointer: p.get('pointer').build(),
          kind: p.get('kind').build(),
          device: p.get('device').build(),
          position: p.get('position').build(),
          obscured: p.get('obscured').build(),
          pressureMin: p.get('pressureMin').build(),
          pressureMax: p.get('pressureMax').build(),
          distanceMax: p.get('distanceMax').build(),
          radiusMin: p.get('radiusMin').build(),
          radiusMax: p.get('radiusMax').build(),
          original: p.get('original').build(),
          embedderId: p.get('embedderId').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class PointerHoverEvent extends PointerEvent with _PointerEventDescription, _CopyPointerHoverEvent
class PointerHoverEvent$Mate extends _i1.PointerHoverEvent with _i2.Mate {
  /// PointerHoverEvent PointerHoverEvent({Duration timeStamp = Duration.zero, PointerDeviceKind kind = PointerDeviceKind.touch, int pointer = 0, int device = 0, Offset position = Offset.zero, Offset delta = Offset.zero, int buttons = 0, bool obscured = false, double pressureMin = 1.0, double pressureMax = 1.0, double distance = 0.0, double distanceMax = 0.0, double size = 0.0, double radiusMajor = 0.0, double radiusMinor = 0.0, double radiusMin = 0.0, double radiusMax = 0.0, double orientation = 0.0, double tilt = 0.0, bool synthesized = false, int embedderId = 0})
  PointerHoverEvent$Mate({
    /// optionalParameters: {Duration timeStamp = Duration.zero} , default:processed=PrefixedIdentifierImpl
    super.timeStamp,

    /// optionalParameters: {PointerDeviceKind kind = PointerDeviceKind.touch} , default:processed=PrefixedIdentifierImpl
    super.kind,

    /// optionalParameters: {int pointer = 0} , default:processed=IntegerLiteralImpl
    super.pointer,

    /// optionalParameters: {int device = 0} , default:processed=IntegerLiteralImpl
    super.device,

    /// optionalParameters: {Offset position = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.position,

    /// optionalParameters: {Offset delta = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.delta,

    /// optionalParameters: {int buttons = 0} , default:processed=IntegerLiteralImpl
    super.buttons,

    /// optionalParameters: {bool obscured = false} , default:processed=BooleanLiteralImpl
    super.obscured,

    /// optionalParameters: {double pressureMin = 1.0} , default:processed=DoubleLiteralImpl
    super.pressureMin,

    /// optionalParameters: {double pressureMax = 1.0} , default:processed=DoubleLiteralImpl
    super.pressureMax,

    /// optionalParameters: {double distance = 0.0} , default:processed=DoubleLiteralImpl
    super.distance,

    /// optionalParameters: {double distanceMax = 0.0} , default:processed=DoubleLiteralImpl
    super.distanceMax,

    /// optionalParameters: {double size = 0.0} , default:processed=DoubleLiteralImpl
    super.size,

    /// optionalParameters: {double radiusMajor = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMajor,

    /// optionalParameters: {double radiusMinor = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMinor,

    /// optionalParameters: {double radiusMin = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMin,

    /// optionalParameters: {double radiusMax = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMax,

    /// optionalParameters: {double orientation = 0.0} , default:processed=DoubleLiteralImpl
    super.orientation,

    /// optionalParameters: {double tilt = 0.0} , default:processed=DoubleLiteralImpl
    super.tilt,

    /// optionalParameters: {bool synthesized = false} , default:processed=BooleanLiteralImpl
    super.synthesized,

    /// optionalParameters: {int embedderId = 0} , default:processed=IntegerLiteralImpl
    super.embedderId,
  })  : mateParams = {
          'timeStamp': _i2.BuilderArg<Duration>(
            name: 'timeStamp',
            init: timeStamp,
            isNamed: true,
            defaultValue: Duration.zero,
          ),
          'kind': _i2.BuilderArg<_i3.PointerDeviceKind>(
            name: 'kind',
            init: kind,
            isNamed: true,
            defaultValue: _i3.PointerDeviceKind.touch,
          ),
          'pointer': _i2.BuilderArg<int>(
            name: 'pointer',
            init: pointer,
            isNamed: true,
            defaultValue: 0,
          ),
          'device': _i2.BuilderArg<int>(
            name: 'device',
            init: device,
            isNamed: true,
            defaultValue: 0,
          ),
          'position': _i2.BuilderArg<_i3.Offset>(
            name: 'position',
            init: position,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'delta': _i2.BuilderArg<_i3.Offset>(
            name: 'delta',
            init: delta,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'buttons': _i2.BuilderArg<int>(
            name: 'buttons',
            init: buttons,
            isNamed: true,
            defaultValue: 0,
          ),
          'obscured': _i2.BuilderArg<bool>(
            name: 'obscured',
            init: obscured,
            isNamed: true,
            defaultValue: false,
          ),
          'pressureMin': _i2.BuilderArg<double>(
            name: 'pressureMin',
            init: pressureMin,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'pressureMax': _i2.BuilderArg<double>(
            name: 'pressureMax',
            init: pressureMax,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'distance': _i2.BuilderArg<double>(
            name: 'distance',
            init: distance,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'distanceMax': _i2.BuilderArg<double>(
            name: 'distanceMax',
            init: distanceMax,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'size': _i2.BuilderArg<double>(
            name: 'size',
            init: size,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMajor': _i2.BuilderArg<double>(
            name: 'radiusMajor',
            init: radiusMajor,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMinor': _i2.BuilderArg<double>(
            name: 'radiusMinor',
            init: radiusMinor,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMin': _i2.BuilderArg<double>(
            name: 'radiusMin',
            init: radiusMin,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMax': _i2.BuilderArg<double>(
            name: 'radiusMax',
            init: radiusMax,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'orientation': _i2.BuilderArg<double>(
            name: 'orientation',
            init: orientation,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'tilt': _i2.BuilderArg<double>(
            name: 'tilt',
            init: tilt,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'synthesized': _i2.BuilderArg<bool>(
            name: 'synthesized',
            init: synthesized,
            isNamed: true,
            defaultValue: false,
          ),
          'embedderId': _i2.BuilderArg<int>(
            name: 'embedderId',
            init: embedderId,
            isNamed: true,
            defaultValue: 0,
          ),
        },
        super() {
    mateBuilderName = 'PointerHoverEvent';
    matePackageUrl = 'package:flutter/gestures.dart';
    mateBuilder = (p) => PointerHoverEvent$Mate(
          timeStamp: p.get('timeStamp').build(),
          kind: p.get('kind').build(),
          pointer: p.get('pointer').build(),
          device: p.get('device').build(),
          position: p.get('position').build(),
          delta: p.get('delta').build(),
          buttons: p.get('buttons').build(),
          obscured: p.get('obscured').build(),
          pressureMin: p.get('pressureMin').build(),
          pressureMax: p.get('pressureMax').build(),
          distance: p.get('distance').build(),
          distanceMax: p.get('distanceMax').build(),
          size: p.get('size').build(),
          radiusMajor: p.get('radiusMajor').build(),
          radiusMinor: p.get('radiusMinor').build(),
          radiusMin: p.get('radiusMin').build(),
          radiusMax: p.get('radiusMax').build(),
          orientation: p.get('orientation').build(),
          tilt: p.get('tilt').build(),
          synthesized: p.get('synthesized').build(),
          embedderId: p.get('embedderId').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class PointerEnterEvent extends PointerEvent with _PointerEventDescription, _CopyPointerEnterEvent
class PointerEnterEvent$Mate extends _i1.PointerEnterEvent with _i2.Mate {
  /// PointerEnterEvent PointerEnterEvent({Duration timeStamp = Duration.zero, int pointer = 0, PointerDeviceKind kind = PointerDeviceKind.touch, int device = 0, Offset position = Offset.zero, Offset delta = Offset.zero, int buttons = 0, bool obscured = false, double pressureMin = 1.0, double pressureMax = 1.0, double distance = 0.0, double distanceMax = 0.0, double size = 0.0, double radiusMajor = 0.0, double radiusMinor = 0.0, double radiusMin = 0.0, double radiusMax = 0.0, double orientation = 0.0, double tilt = 0.0, bool down = false, bool synthesized = false, int embedderId = 0})
  PointerEnterEvent$Mate({
    /// optionalParameters: {Duration timeStamp = Duration.zero} , default:processed=PrefixedIdentifierImpl
    super.timeStamp,

    /// optionalParameters: {int pointer = 0} , default:processed=IntegerLiteralImpl
    super.pointer,

    /// optionalParameters: {PointerDeviceKind kind = PointerDeviceKind.touch} , default:processed=PrefixedIdentifierImpl
    super.kind,

    /// optionalParameters: {int device = 0} , default:processed=IntegerLiteralImpl
    super.device,

    /// optionalParameters: {Offset position = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.position,

    /// optionalParameters: {Offset delta = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.delta,

    /// optionalParameters: {int buttons = 0} , default:processed=IntegerLiteralImpl
    super.buttons,

    /// optionalParameters: {bool obscured = false} , default:processed=BooleanLiteralImpl
    super.obscured,

    /// optionalParameters: {double pressureMin = 1.0} , default:processed=DoubleLiteralImpl
    super.pressureMin,

    /// optionalParameters: {double pressureMax = 1.0} , default:processed=DoubleLiteralImpl
    super.pressureMax,

    /// optionalParameters: {double distance = 0.0} , default:processed=DoubleLiteralImpl
    super.distance,

    /// optionalParameters: {double distanceMax = 0.0} , default:processed=DoubleLiteralImpl
    super.distanceMax,

    /// optionalParameters: {double size = 0.0} , default:processed=DoubleLiteralImpl
    super.size,

    /// optionalParameters: {double radiusMajor = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMajor,

    /// optionalParameters: {double radiusMinor = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMinor,

    /// optionalParameters: {double radiusMin = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMin,

    /// optionalParameters: {double radiusMax = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMax,

    /// optionalParameters: {double orientation = 0.0} , default:processed=DoubleLiteralImpl
    super.orientation,

    /// optionalParameters: {double tilt = 0.0} , default:processed=DoubleLiteralImpl
    super.tilt,

    /// optionalParameters: {bool down = false} , default:processed=BooleanLiteralImpl
    super.down,

    /// optionalParameters: {bool synthesized = false} , default:processed=BooleanLiteralImpl
    super.synthesized,

    /// optionalParameters: {int embedderId = 0} , default:processed=IntegerLiteralImpl
    super.embedderId,
  })  : mateParams = {
          'timeStamp': _i2.BuilderArg<Duration>(
            name: 'timeStamp',
            init: timeStamp,
            isNamed: true,
            defaultValue: Duration.zero,
          ),
          'pointer': _i2.BuilderArg<int>(
            name: 'pointer',
            init: pointer,
            isNamed: true,
            defaultValue: 0,
          ),
          'kind': _i2.BuilderArg<_i3.PointerDeviceKind>(
            name: 'kind',
            init: kind,
            isNamed: true,
            defaultValue: _i3.PointerDeviceKind.touch,
          ),
          'device': _i2.BuilderArg<int>(
            name: 'device',
            init: device,
            isNamed: true,
            defaultValue: 0,
          ),
          'position': _i2.BuilderArg<_i3.Offset>(
            name: 'position',
            init: position,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'delta': _i2.BuilderArg<_i3.Offset>(
            name: 'delta',
            init: delta,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'buttons': _i2.BuilderArg<int>(
            name: 'buttons',
            init: buttons,
            isNamed: true,
            defaultValue: 0,
          ),
          'obscured': _i2.BuilderArg<bool>(
            name: 'obscured',
            init: obscured,
            isNamed: true,
            defaultValue: false,
          ),
          'pressureMin': _i2.BuilderArg<double>(
            name: 'pressureMin',
            init: pressureMin,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'pressureMax': _i2.BuilderArg<double>(
            name: 'pressureMax',
            init: pressureMax,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'distance': _i2.BuilderArg<double>(
            name: 'distance',
            init: distance,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'distanceMax': _i2.BuilderArg<double>(
            name: 'distanceMax',
            init: distanceMax,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'size': _i2.BuilderArg<double>(
            name: 'size',
            init: size,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMajor': _i2.BuilderArg<double>(
            name: 'radiusMajor',
            init: radiusMajor,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMinor': _i2.BuilderArg<double>(
            name: 'radiusMinor',
            init: radiusMinor,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMin': _i2.BuilderArg<double>(
            name: 'radiusMin',
            init: radiusMin,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMax': _i2.BuilderArg<double>(
            name: 'radiusMax',
            init: radiusMax,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'orientation': _i2.BuilderArg<double>(
            name: 'orientation',
            init: orientation,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'tilt': _i2.BuilderArg<double>(
            name: 'tilt',
            init: tilt,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'down': _i2.BuilderArg<bool>(
            name: 'down',
            init: down,
            isNamed: true,
            defaultValue: false,
          ),
          'synthesized': _i2.BuilderArg<bool>(
            name: 'synthesized',
            init: synthesized,
            isNamed: true,
            defaultValue: false,
          ),
          'embedderId': _i2.BuilderArg<int>(
            name: 'embedderId',
            init: embedderId,
            isNamed: true,
            defaultValue: 0,
          ),
        },
        super() {
    mateBuilderName = 'PointerEnterEvent';
    matePackageUrl = 'package:flutter/gestures.dart';
    mateBuilder = (p) => PointerEnterEvent$Mate(
          timeStamp: p.get('timeStamp').build(),
          pointer: p.get('pointer').build(),
          kind: p.get('kind').build(),
          device: p.get('device').build(),
          position: p.get('position').build(),
          delta: p.get('delta').build(),
          buttons: p.get('buttons').build(),
          obscured: p.get('obscured').build(),
          pressureMin: p.get('pressureMin').build(),
          pressureMax: p.get('pressureMax').build(),
          distance: p.get('distance').build(),
          distanceMax: p.get('distanceMax').build(),
          size: p.get('size').build(),
          radiusMajor: p.get('radiusMajor').build(),
          radiusMinor: p.get('radiusMinor').build(),
          radiusMin: p.get('radiusMin').build(),
          radiusMax: p.get('radiusMax').build(),
          orientation: p.get('orientation').build(),
          tilt: p.get('tilt').build(),
          down: p.get('down').build(),
          synthesized: p.get('synthesized').build(),
          embedderId: p.get('embedderId').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class PointerExitEvent extends PointerEvent with _PointerEventDescription, _CopyPointerExitEvent
class PointerExitEvent$Mate extends _i1.PointerExitEvent with _i2.Mate {
  /// PointerExitEvent PointerExitEvent({Duration timeStamp = Duration.zero, PointerDeviceKind kind = PointerDeviceKind.touch, int pointer = 0, int device = 0, Offset position = Offset.zero, Offset delta = Offset.zero, int buttons = 0, bool obscured = false, double pressureMin = 1.0, double pressureMax = 1.0, double distance = 0.0, double distanceMax = 0.0, double size = 0.0, double radiusMajor = 0.0, double radiusMinor = 0.0, double radiusMin = 0.0, double radiusMax = 0.0, double orientation = 0.0, double tilt = 0.0, bool down = false, bool synthesized = false, int embedderId = 0})
  PointerExitEvent$Mate({
    /// optionalParameters: {Duration timeStamp = Duration.zero} , default:processed=PrefixedIdentifierImpl
    super.timeStamp,

    /// optionalParameters: {PointerDeviceKind kind = PointerDeviceKind.touch} , default:processed=PrefixedIdentifierImpl
    super.kind,

    /// optionalParameters: {int pointer = 0} , default:processed=IntegerLiteralImpl
    super.pointer,

    /// optionalParameters: {int device = 0} , default:processed=IntegerLiteralImpl
    super.device,

    /// optionalParameters: {Offset position = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.position,

    /// optionalParameters: {Offset delta = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.delta,

    /// optionalParameters: {int buttons = 0} , default:processed=IntegerLiteralImpl
    super.buttons,

    /// optionalParameters: {bool obscured = false} , default:processed=BooleanLiteralImpl
    super.obscured,

    /// optionalParameters: {double pressureMin = 1.0} , default:processed=DoubleLiteralImpl
    super.pressureMin,

    /// optionalParameters: {double pressureMax = 1.0} , default:processed=DoubleLiteralImpl
    super.pressureMax,

    /// optionalParameters: {double distance = 0.0} , default:processed=DoubleLiteralImpl
    super.distance,

    /// optionalParameters: {double distanceMax = 0.0} , default:processed=DoubleLiteralImpl
    super.distanceMax,

    /// optionalParameters: {double size = 0.0} , default:processed=DoubleLiteralImpl
    super.size,

    /// optionalParameters: {double radiusMajor = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMajor,

    /// optionalParameters: {double radiusMinor = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMinor,

    /// optionalParameters: {double radiusMin = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMin,

    /// optionalParameters: {double radiusMax = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMax,

    /// optionalParameters: {double orientation = 0.0} , default:processed=DoubleLiteralImpl
    super.orientation,

    /// optionalParameters: {double tilt = 0.0} , default:processed=DoubleLiteralImpl
    super.tilt,

    /// optionalParameters: {bool down = false} , default:processed=BooleanLiteralImpl
    super.down,

    /// optionalParameters: {bool synthesized = false} , default:processed=BooleanLiteralImpl
    super.synthesized,

    /// optionalParameters: {int embedderId = 0} , default:processed=IntegerLiteralImpl
    super.embedderId,
  })  : mateParams = {
          'timeStamp': _i2.BuilderArg<Duration>(
            name: 'timeStamp',
            init: timeStamp,
            isNamed: true,
            defaultValue: Duration.zero,
          ),
          'kind': _i2.BuilderArg<_i3.PointerDeviceKind>(
            name: 'kind',
            init: kind,
            isNamed: true,
            defaultValue: _i3.PointerDeviceKind.touch,
          ),
          'pointer': _i2.BuilderArg<int>(
            name: 'pointer',
            init: pointer,
            isNamed: true,
            defaultValue: 0,
          ),
          'device': _i2.BuilderArg<int>(
            name: 'device',
            init: device,
            isNamed: true,
            defaultValue: 0,
          ),
          'position': _i2.BuilderArg<_i3.Offset>(
            name: 'position',
            init: position,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'delta': _i2.BuilderArg<_i3.Offset>(
            name: 'delta',
            init: delta,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'buttons': _i2.BuilderArg<int>(
            name: 'buttons',
            init: buttons,
            isNamed: true,
            defaultValue: 0,
          ),
          'obscured': _i2.BuilderArg<bool>(
            name: 'obscured',
            init: obscured,
            isNamed: true,
            defaultValue: false,
          ),
          'pressureMin': _i2.BuilderArg<double>(
            name: 'pressureMin',
            init: pressureMin,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'pressureMax': _i2.BuilderArg<double>(
            name: 'pressureMax',
            init: pressureMax,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'distance': _i2.BuilderArg<double>(
            name: 'distance',
            init: distance,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'distanceMax': _i2.BuilderArg<double>(
            name: 'distanceMax',
            init: distanceMax,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'size': _i2.BuilderArg<double>(
            name: 'size',
            init: size,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMajor': _i2.BuilderArg<double>(
            name: 'radiusMajor',
            init: radiusMajor,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMinor': _i2.BuilderArg<double>(
            name: 'radiusMinor',
            init: radiusMinor,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMin': _i2.BuilderArg<double>(
            name: 'radiusMin',
            init: radiusMin,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMax': _i2.BuilderArg<double>(
            name: 'radiusMax',
            init: radiusMax,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'orientation': _i2.BuilderArg<double>(
            name: 'orientation',
            init: orientation,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'tilt': _i2.BuilderArg<double>(
            name: 'tilt',
            init: tilt,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'down': _i2.BuilderArg<bool>(
            name: 'down',
            init: down,
            isNamed: true,
            defaultValue: false,
          ),
          'synthesized': _i2.BuilderArg<bool>(
            name: 'synthesized',
            init: synthesized,
            isNamed: true,
            defaultValue: false,
          ),
          'embedderId': _i2.BuilderArg<int>(
            name: 'embedderId',
            init: embedderId,
            isNamed: true,
            defaultValue: 0,
          ),
        },
        super() {
    mateBuilderName = 'PointerExitEvent';
    matePackageUrl = 'package:flutter/gestures.dart';
    mateBuilder = (p) => PointerExitEvent$Mate(
          timeStamp: p.get('timeStamp').build(),
          kind: p.get('kind').build(),
          pointer: p.get('pointer').build(),
          device: p.get('device').build(),
          position: p.get('position').build(),
          delta: p.get('delta').build(),
          buttons: p.get('buttons').build(),
          obscured: p.get('obscured').build(),
          pressureMin: p.get('pressureMin').build(),
          pressureMax: p.get('pressureMax').build(),
          distance: p.get('distance').build(),
          distanceMax: p.get('distanceMax').build(),
          size: p.get('size').build(),
          radiusMajor: p.get('radiusMajor').build(),
          radiusMinor: p.get('radiusMinor').build(),
          radiusMin: p.get('radiusMin').build(),
          radiusMax: p.get('radiusMax').build(),
          orientation: p.get('orientation').build(),
          tilt: p.get('tilt').build(),
          down: p.get('down').build(),
          synthesized: p.get('synthesized').build(),
          embedderId: p.get('embedderId').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class PointerDownEvent extends PointerEvent with _PointerEventDescription, _CopyPointerDownEvent
class PointerDownEvent$Mate extends _i1.PointerDownEvent with _i2.Mate {
  /// PointerDownEvent PointerDownEvent({Duration timeStamp = Duration.zero, int pointer = 0, PointerDeviceKind kind = PointerDeviceKind.touch, int device = 0, Offset position = Offset.zero, int buttons = kPrimaryButton, bool obscured = false, double pressure = 1.0, double pressureMin = 1.0, double pressureMax = 1.0, double distanceMax = 0.0, double size = 0.0, double radiusMajor = 0.0, double radiusMinor = 0.0, double radiusMin = 0.0, double radiusMax = 0.0, double orientation = 0.0, double tilt = 0.0, int embedderId = 0})
  PointerDownEvent$Mate({
    /// optionalParameters: {Duration timeStamp = Duration.zero} , default:processed=PrefixedIdentifierImpl
    super.timeStamp,

    /// optionalParameters: {int pointer = 0} , default:processed=IntegerLiteralImpl
    super.pointer,

    /// optionalParameters: {PointerDeviceKind kind = PointerDeviceKind.touch} , default:processed=PrefixedIdentifierImpl
    super.kind,

    /// optionalParameters: {int device = 0} , default:processed=IntegerLiteralImpl
    super.device,

    /// optionalParameters: {Offset position = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.position,

    /// optionalParameters: {int buttons = kPrimaryButton} , default:unprocessed=SimpleIdentifierImpl
    super.buttons,

    /// optionalParameters: {bool obscured = false} , default:processed=BooleanLiteralImpl
    super.obscured,

    /// optionalParameters: {double pressure = 1.0} , default:processed=DoubleLiteralImpl
    super.pressure,

    /// optionalParameters: {double pressureMin = 1.0} , default:processed=DoubleLiteralImpl
    super.pressureMin,

    /// optionalParameters: {double pressureMax = 1.0} , default:processed=DoubleLiteralImpl
    super.pressureMax,

    /// optionalParameters: {double distanceMax = 0.0} , default:processed=DoubleLiteralImpl
    super.distanceMax,

    /// optionalParameters: {double size = 0.0} , default:processed=DoubleLiteralImpl
    super.size,

    /// optionalParameters: {double radiusMajor = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMajor,

    /// optionalParameters: {double radiusMinor = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMinor,

    /// optionalParameters: {double radiusMin = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMin,

    /// optionalParameters: {double radiusMax = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMax,

    /// optionalParameters: {double orientation = 0.0} , default:processed=DoubleLiteralImpl
    super.orientation,

    /// optionalParameters: {double tilt = 0.0} , default:processed=DoubleLiteralImpl
    super.tilt,

    /// optionalParameters: {int embedderId = 0} , default:processed=IntegerLiteralImpl
    super.embedderId,
  })  : mateParams = {
          'timeStamp': _i2.BuilderArg<Duration>(
            name: 'timeStamp',
            init: timeStamp,
            isNamed: true,
            defaultValue: Duration.zero,
          ),
          'pointer': _i2.BuilderArg<int>(
            name: 'pointer',
            init: pointer,
            isNamed: true,
            defaultValue: 0,
          ),
          'kind': _i2.BuilderArg<_i3.PointerDeviceKind>(
            name: 'kind',
            init: kind,
            isNamed: true,
            defaultValue: _i3.PointerDeviceKind.touch,
          ),
          'device': _i2.BuilderArg<int>(
            name: 'device',
            init: device,
            isNamed: true,
            defaultValue: 0,
          ),
          'position': _i2.BuilderArg<_i3.Offset>(
            name: 'position',
            init: position,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'buttons': _i2.BuilderArg<int>(
            name: 'buttons',
            init: buttons,
            isNamed: true,
          ),
          'obscured': _i2.BuilderArg<bool>(
            name: 'obscured',
            init: obscured,
            isNamed: true,
            defaultValue: false,
          ),
          'pressure': _i2.BuilderArg<double>(
            name: 'pressure',
            init: pressure,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'pressureMin': _i2.BuilderArg<double>(
            name: 'pressureMin',
            init: pressureMin,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'pressureMax': _i2.BuilderArg<double>(
            name: 'pressureMax',
            init: pressureMax,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'distanceMax': _i2.BuilderArg<double>(
            name: 'distanceMax',
            init: distanceMax,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'size': _i2.BuilderArg<double>(
            name: 'size',
            init: size,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMajor': _i2.BuilderArg<double>(
            name: 'radiusMajor',
            init: radiusMajor,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMinor': _i2.BuilderArg<double>(
            name: 'radiusMinor',
            init: radiusMinor,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMin': _i2.BuilderArg<double>(
            name: 'radiusMin',
            init: radiusMin,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMax': _i2.BuilderArg<double>(
            name: 'radiusMax',
            init: radiusMax,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'orientation': _i2.BuilderArg<double>(
            name: 'orientation',
            init: orientation,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'tilt': _i2.BuilderArg<double>(
            name: 'tilt',
            init: tilt,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'embedderId': _i2.BuilderArg<int>(
            name: 'embedderId',
            init: embedderId,
            isNamed: true,
            defaultValue: 0,
          ),
        },
        super() {
    mateBuilderName = 'PointerDownEvent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => PointerDownEvent$Mate(
          timeStamp: p.get('timeStamp').build(),
          pointer: p.get('pointer').build(),
          kind: p.get('kind').build(),
          device: p.get('device').build(),
          position: p.get('position').build(),
          buttons: p.get('buttons').build(),
          obscured: p.get('obscured').build(),
          pressure: p.get('pressure').build(),
          pressureMin: p.get('pressureMin').build(),
          pressureMax: p.get('pressureMax').build(),
          distanceMax: p.get('distanceMax').build(),
          size: p.get('size').build(),
          radiusMajor: p.get('radiusMajor').build(),
          radiusMinor: p.get('radiusMinor').build(),
          radiusMin: p.get('radiusMin').build(),
          radiusMax: p.get('radiusMax').build(),
          orientation: p.get('orientation').build(),
          tilt: p.get('tilt').build(),
          embedderId: p.get('embedderId').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class PointerMoveEvent extends PointerEvent with _PointerEventDescription, _CopyPointerMoveEvent
class PointerMoveEvent$Mate extends _i1.PointerMoveEvent with _i2.Mate {
  /// PointerMoveEvent PointerMoveEvent({Duration timeStamp = Duration.zero, int pointer = 0, PointerDeviceKind kind = PointerDeviceKind.touch, int device = 0, Offset position = Offset.zero, Offset delta = Offset.zero, int buttons = kPrimaryButton, bool obscured = false, double pressure = 1.0, double pressureMin = 1.0, double pressureMax = 1.0, double distanceMax = 0.0, double size = 0.0, double radiusMajor = 0.0, double radiusMinor = 0.0, double radiusMin = 0.0, double radiusMax = 0.0, double orientation = 0.0, double tilt = 0.0, int platformData = 0, bool synthesized = false, int embedderId = 0})
  PointerMoveEvent$Mate({
    /// optionalParameters: {Duration timeStamp = Duration.zero} , default:processed=PrefixedIdentifierImpl
    super.timeStamp,

    /// optionalParameters: {int pointer = 0} , default:processed=IntegerLiteralImpl
    super.pointer,

    /// optionalParameters: {PointerDeviceKind kind = PointerDeviceKind.touch} , default:processed=PrefixedIdentifierImpl
    super.kind,

    /// optionalParameters: {int device = 0} , default:processed=IntegerLiteralImpl
    super.device,

    /// optionalParameters: {Offset position = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.position,

    /// optionalParameters: {Offset delta = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.delta,

    /// optionalParameters: {int buttons = kPrimaryButton} , default:unprocessed=SimpleIdentifierImpl
    super.buttons,

    /// optionalParameters: {bool obscured = false} , default:processed=BooleanLiteralImpl
    super.obscured,

    /// optionalParameters: {double pressure = 1.0} , default:processed=DoubleLiteralImpl
    super.pressure,

    /// optionalParameters: {double pressureMin = 1.0} , default:processed=DoubleLiteralImpl
    super.pressureMin,

    /// optionalParameters: {double pressureMax = 1.0} , default:processed=DoubleLiteralImpl
    super.pressureMax,

    /// optionalParameters: {double distanceMax = 0.0} , default:processed=DoubleLiteralImpl
    super.distanceMax,

    /// optionalParameters: {double size = 0.0} , default:processed=DoubleLiteralImpl
    super.size,

    /// optionalParameters: {double radiusMajor = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMajor,

    /// optionalParameters: {double radiusMinor = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMinor,

    /// optionalParameters: {double radiusMin = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMin,

    /// optionalParameters: {double radiusMax = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMax,

    /// optionalParameters: {double orientation = 0.0} , default:processed=DoubleLiteralImpl
    super.orientation,

    /// optionalParameters: {double tilt = 0.0} , default:processed=DoubleLiteralImpl
    super.tilt,

    /// optionalParameters: {int platformData = 0} , default:processed=IntegerLiteralImpl
    super.platformData,

    /// optionalParameters: {bool synthesized = false} , default:processed=BooleanLiteralImpl
    super.synthesized,

    /// optionalParameters: {int embedderId = 0} , default:processed=IntegerLiteralImpl
    super.embedderId,
  })  : mateParams = {
          'timeStamp': _i2.BuilderArg<Duration>(
            name: 'timeStamp',
            init: timeStamp,
            isNamed: true,
            defaultValue: Duration.zero,
          ),
          'pointer': _i2.BuilderArg<int>(
            name: 'pointer',
            init: pointer,
            isNamed: true,
            defaultValue: 0,
          ),
          'kind': _i2.BuilderArg<_i3.PointerDeviceKind>(
            name: 'kind',
            init: kind,
            isNamed: true,
            defaultValue: _i3.PointerDeviceKind.touch,
          ),
          'device': _i2.BuilderArg<int>(
            name: 'device',
            init: device,
            isNamed: true,
            defaultValue: 0,
          ),
          'position': _i2.BuilderArg<_i3.Offset>(
            name: 'position',
            init: position,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'delta': _i2.BuilderArg<_i3.Offset>(
            name: 'delta',
            init: delta,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'buttons': _i2.BuilderArg<int>(
            name: 'buttons',
            init: buttons,
            isNamed: true,
          ),
          'obscured': _i2.BuilderArg<bool>(
            name: 'obscured',
            init: obscured,
            isNamed: true,
            defaultValue: false,
          ),
          'pressure': _i2.BuilderArg<double>(
            name: 'pressure',
            init: pressure,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'pressureMin': _i2.BuilderArg<double>(
            name: 'pressureMin',
            init: pressureMin,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'pressureMax': _i2.BuilderArg<double>(
            name: 'pressureMax',
            init: pressureMax,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'distanceMax': _i2.BuilderArg<double>(
            name: 'distanceMax',
            init: distanceMax,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'size': _i2.BuilderArg<double>(
            name: 'size',
            init: size,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMajor': _i2.BuilderArg<double>(
            name: 'radiusMajor',
            init: radiusMajor,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMinor': _i2.BuilderArg<double>(
            name: 'radiusMinor',
            init: radiusMinor,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMin': _i2.BuilderArg<double>(
            name: 'radiusMin',
            init: radiusMin,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMax': _i2.BuilderArg<double>(
            name: 'radiusMax',
            init: radiusMax,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'orientation': _i2.BuilderArg<double>(
            name: 'orientation',
            init: orientation,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'tilt': _i2.BuilderArg<double>(
            name: 'tilt',
            init: tilt,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'platformData': _i2.BuilderArg<int>(
            name: 'platformData',
            init: platformData,
            isNamed: true,
            defaultValue: 0,
          ),
          'synthesized': _i2.BuilderArg<bool>(
            name: 'synthesized',
            init: synthesized,
            isNamed: true,
            defaultValue: false,
          ),
          'embedderId': _i2.BuilderArg<int>(
            name: 'embedderId',
            init: embedderId,
            isNamed: true,
            defaultValue: 0,
          ),
        },
        super() {
    mateBuilderName = 'PointerMoveEvent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => PointerMoveEvent$Mate(
          timeStamp: p.get('timeStamp').build(),
          pointer: p.get('pointer').build(),
          kind: p.get('kind').build(),
          device: p.get('device').build(),
          position: p.get('position').build(),
          delta: p.get('delta').build(),
          buttons: p.get('buttons').build(),
          obscured: p.get('obscured').build(),
          pressure: p.get('pressure').build(),
          pressureMin: p.get('pressureMin').build(),
          pressureMax: p.get('pressureMax').build(),
          distanceMax: p.get('distanceMax').build(),
          size: p.get('size').build(),
          radiusMajor: p.get('radiusMajor').build(),
          radiusMinor: p.get('radiusMinor').build(),
          radiusMin: p.get('radiusMin').build(),
          radiusMax: p.get('radiusMax').build(),
          orientation: p.get('orientation').build(),
          tilt: p.get('tilt').build(),
          platformData: p.get('platformData').build(),
          synthesized: p.get('synthesized').build(),
          embedderId: p.get('embedderId').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class PointerUpEvent extends PointerEvent with _PointerEventDescription, _CopyPointerUpEvent
class PointerUpEvent$Mate extends _i1.PointerUpEvent with _i2.Mate {
  /// PointerUpEvent PointerUpEvent({Duration timeStamp = Duration.zero, int pointer = 0, PointerDeviceKind kind = PointerDeviceKind.touch, int device = 0, Offset position = Offset.zero, int buttons = 0, bool obscured = false, double pressure = 0.0, double pressureMin = 1.0, double pressureMax = 1.0, double distance = 0.0, double distanceMax = 0.0, double size = 0.0, double radiusMajor = 0.0, double radiusMinor = 0.0, double radiusMin = 0.0, double radiusMax = 0.0, double orientation = 0.0, double tilt = 0.0, int embedderId = 0})
  PointerUpEvent$Mate({
    /// optionalParameters: {Duration timeStamp = Duration.zero} , default:processed=PrefixedIdentifierImpl
    super.timeStamp,

    /// optionalParameters: {int pointer = 0} , default:processed=IntegerLiteralImpl
    super.pointer,

    /// optionalParameters: {PointerDeviceKind kind = PointerDeviceKind.touch} , default:processed=PrefixedIdentifierImpl
    super.kind,

    /// optionalParameters: {int device = 0} , default:processed=IntegerLiteralImpl
    super.device,

    /// optionalParameters: {Offset position = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.position,

    /// optionalParameters: {int buttons = 0} , default:processed=IntegerLiteralImpl
    super.buttons,

    /// optionalParameters: {bool obscured = false} , default:processed=BooleanLiteralImpl
    super.obscured,

    /// optionalParameters: {double pressure = 0.0} , default:processed=DoubleLiteralImpl
    super.pressure,

    /// optionalParameters: {double pressureMin = 1.0} , default:processed=DoubleLiteralImpl
    super.pressureMin,

    /// optionalParameters: {double pressureMax = 1.0} , default:processed=DoubleLiteralImpl
    super.pressureMax,

    /// optionalParameters: {double distance = 0.0} , default:processed=DoubleLiteralImpl
    super.distance,

    /// optionalParameters: {double distanceMax = 0.0} , default:processed=DoubleLiteralImpl
    super.distanceMax,

    /// optionalParameters: {double size = 0.0} , default:processed=DoubleLiteralImpl
    super.size,

    /// optionalParameters: {double radiusMajor = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMajor,

    /// optionalParameters: {double radiusMinor = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMinor,

    /// optionalParameters: {double radiusMin = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMin,

    /// optionalParameters: {double radiusMax = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMax,

    /// optionalParameters: {double orientation = 0.0} , default:processed=DoubleLiteralImpl
    super.orientation,

    /// optionalParameters: {double tilt = 0.0} , default:processed=DoubleLiteralImpl
    super.tilt,

    /// optionalParameters: {int embedderId = 0} , default:processed=IntegerLiteralImpl
    super.embedderId,
  })  : mateParams = {
          'timeStamp': _i2.BuilderArg<Duration>(
            name: 'timeStamp',
            init: timeStamp,
            isNamed: true,
            defaultValue: Duration.zero,
          ),
          'pointer': _i2.BuilderArg<int>(
            name: 'pointer',
            init: pointer,
            isNamed: true,
            defaultValue: 0,
          ),
          'kind': _i2.BuilderArg<_i3.PointerDeviceKind>(
            name: 'kind',
            init: kind,
            isNamed: true,
            defaultValue: _i3.PointerDeviceKind.touch,
          ),
          'device': _i2.BuilderArg<int>(
            name: 'device',
            init: device,
            isNamed: true,
            defaultValue: 0,
          ),
          'position': _i2.BuilderArg<_i3.Offset>(
            name: 'position',
            init: position,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'buttons': _i2.BuilderArg<int>(
            name: 'buttons',
            init: buttons,
            isNamed: true,
            defaultValue: 0,
          ),
          'obscured': _i2.BuilderArg<bool>(
            name: 'obscured',
            init: obscured,
            isNamed: true,
            defaultValue: false,
          ),
          'pressure': _i2.BuilderArg<double>(
            name: 'pressure',
            init: pressure,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'pressureMin': _i2.BuilderArg<double>(
            name: 'pressureMin',
            init: pressureMin,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'pressureMax': _i2.BuilderArg<double>(
            name: 'pressureMax',
            init: pressureMax,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'distance': _i2.BuilderArg<double>(
            name: 'distance',
            init: distance,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'distanceMax': _i2.BuilderArg<double>(
            name: 'distanceMax',
            init: distanceMax,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'size': _i2.BuilderArg<double>(
            name: 'size',
            init: size,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMajor': _i2.BuilderArg<double>(
            name: 'radiusMajor',
            init: radiusMajor,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMinor': _i2.BuilderArg<double>(
            name: 'radiusMinor',
            init: radiusMinor,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMin': _i2.BuilderArg<double>(
            name: 'radiusMin',
            init: radiusMin,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMax': _i2.BuilderArg<double>(
            name: 'radiusMax',
            init: radiusMax,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'orientation': _i2.BuilderArg<double>(
            name: 'orientation',
            init: orientation,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'tilt': _i2.BuilderArg<double>(
            name: 'tilt',
            init: tilt,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'embedderId': _i2.BuilderArg<int>(
            name: 'embedderId',
            init: embedderId,
            isNamed: true,
            defaultValue: 0,
          ),
        },
        super() {
    mateBuilderName = 'PointerUpEvent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => PointerUpEvent$Mate(
          timeStamp: p.get('timeStamp').build(),
          pointer: p.get('pointer').build(),
          kind: p.get('kind').build(),
          device: p.get('device').build(),
          position: p.get('position').build(),
          buttons: p.get('buttons').build(),
          obscured: p.get('obscured').build(),
          pressure: p.get('pressure').build(),
          pressureMin: p.get('pressureMin').build(),
          pressureMax: p.get('pressureMax').build(),
          distance: p.get('distance').build(),
          distanceMax: p.get('distanceMax').build(),
          size: p.get('size').build(),
          radiusMajor: p.get('radiusMajor').build(),
          radiusMinor: p.get('radiusMinor').build(),
          radiusMin: p.get('radiusMin').build(),
          radiusMax: p.get('radiusMax').build(),
          orientation: p.get('orientation').build(),
          tilt: p.get('tilt').build(),
          embedderId: p.get('embedderId').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class PointerScrollEvent extends PointerSignalEvent with _PointerEventDescription, _CopyPointerScrollEvent
class PointerScrollEvent$Mate extends _i1.PointerScrollEvent with _i2.Mate {
  /// PointerScrollEvent PointerScrollEvent({Duration timeStamp = Duration.zero, PointerDeviceKind kind = PointerDeviceKind.mouse, int device = 0, Offset position = Offset.zero, Offset scrollDelta = Offset.zero, int embedderId = 0})
  PointerScrollEvent$Mate({
    /// optionalParameters: {Duration timeStamp = Duration.zero} , default:processed=PrefixedIdentifierImpl
    super.timeStamp,

    /// optionalParameters: {PointerDeviceKind kind = PointerDeviceKind.mouse} , default:processed=PrefixedIdentifierImpl
    super.kind,

    /// optionalParameters: {int device = 0} , default:processed=IntegerLiteralImpl
    super.device,

    /// optionalParameters: {Offset position = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.position,

    /// optionalParameters: {Offset scrollDelta = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.scrollDelta,

    /// optionalParameters: {int embedderId = 0} , default:processed=IntegerLiteralImpl
    super.embedderId,
  })  : mateParams = {
          'timeStamp': _i2.BuilderArg<Duration>(
            name: 'timeStamp',
            init: timeStamp,
            isNamed: true,
            defaultValue: Duration.zero,
          ),
          'kind': _i2.BuilderArg<_i3.PointerDeviceKind>(
            name: 'kind',
            init: kind,
            isNamed: true,
            defaultValue: _i3.PointerDeviceKind.mouse,
          ),
          'device': _i2.BuilderArg<int>(
            name: 'device',
            init: device,
            isNamed: true,
            defaultValue: 0,
          ),
          'position': _i2.BuilderArg<_i3.Offset>(
            name: 'position',
            init: position,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'scrollDelta': _i2.BuilderArg<_i3.Offset>(
            name: 'scrollDelta',
            init: scrollDelta,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'embedderId': _i2.BuilderArg<int>(
            name: 'embedderId',
            init: embedderId,
            isNamed: true,
            defaultValue: 0,
          ),
        },
        super() {
    mateBuilderName = 'PointerScrollEvent';
    matePackageUrl = 'package:flutter/gestures.dart';
    mateBuilder = (p) => PointerScrollEvent$Mate(
          timeStamp: p.get('timeStamp').build(),
          kind: p.get('kind').build(),
          device: p.get('device').build(),
          position: p.get('position').build(),
          scrollDelta: p.get('scrollDelta').build(),
          embedderId: p.get('embedderId').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class PointerScrollInertiaCancelEvent extends PointerSignalEvent with _PointerEventDescription, _CopyPointerScrollInertiaCancelEvent
class PointerScrollInertiaCancelEvent$Mate extends _i1.PointerScrollInertiaCancelEvent with _i2.Mate {
  /// PointerScrollInertiaCancelEvent PointerScrollInertiaCancelEvent({Duration timeStamp = Duration.zero, PointerDeviceKind kind = PointerDeviceKind.mouse, int device = 0, Offset position = Offset.zero, int embedderId = 0})
  PointerScrollInertiaCancelEvent$Mate({
    /// optionalParameters: {Duration timeStamp = Duration.zero} , default:processed=PrefixedIdentifierImpl
    super.timeStamp,

    /// optionalParameters: {PointerDeviceKind kind = PointerDeviceKind.mouse} , default:processed=PrefixedIdentifierImpl
    super.kind,

    /// optionalParameters: {int device = 0} , default:processed=IntegerLiteralImpl
    super.device,

    /// optionalParameters: {Offset position = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.position,

    /// optionalParameters: {int embedderId = 0} , default:processed=IntegerLiteralImpl
    super.embedderId,
  })  : mateParams = {
          'timeStamp': _i2.BuilderArg<Duration>(
            name: 'timeStamp',
            init: timeStamp,
            isNamed: true,
            defaultValue: Duration.zero,
          ),
          'kind': _i2.BuilderArg<_i3.PointerDeviceKind>(
            name: 'kind',
            init: kind,
            isNamed: true,
            defaultValue: _i3.PointerDeviceKind.mouse,
          ),
          'device': _i2.BuilderArg<int>(
            name: 'device',
            init: device,
            isNamed: true,
            defaultValue: 0,
          ),
          'position': _i2.BuilderArg<_i3.Offset>(
            name: 'position',
            init: position,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'embedderId': _i2.BuilderArg<int>(
            name: 'embedderId',
            init: embedderId,
            isNamed: true,
            defaultValue: 0,
          ),
        },
        super() {
    mateBuilderName = 'PointerScrollInertiaCancelEvent';
    matePackageUrl = 'package:flutter/gestures.dart';
    mateBuilder = (p) => PointerScrollInertiaCancelEvent$Mate(
          timeStamp: p.get('timeStamp').build(),
          kind: p.get('kind').build(),
          device: p.get('device').build(),
          position: p.get('position').build(),
          embedderId: p.get('embedderId').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class PointerScaleEvent extends PointerSignalEvent with _PointerEventDescription, _CopyPointerScaleEvent
class PointerScaleEvent$Mate extends _i1.PointerScaleEvent with _i2.Mate {
  /// PointerScaleEvent PointerScaleEvent({Duration timeStamp = Duration.zero, PointerDeviceKind kind = PointerDeviceKind.mouse, int device = 0, Offset position = Offset.zero, int embedderId = 0, double scale = 1.0})
  PointerScaleEvent$Mate({
    /// optionalParameters: {Duration timeStamp = Duration.zero} , default:processed=PrefixedIdentifierImpl
    super.timeStamp,

    /// optionalParameters: {PointerDeviceKind kind = PointerDeviceKind.mouse} , default:processed=PrefixedIdentifierImpl
    super.kind,

    /// optionalParameters: {int device = 0} , default:processed=IntegerLiteralImpl
    super.device,

    /// optionalParameters: {Offset position = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.position,

    /// optionalParameters: {int embedderId = 0} , default:processed=IntegerLiteralImpl
    super.embedderId,

    /// optionalParameters: {double scale = 1.0} , default:processed=DoubleLiteralImpl
    super.scale,
  })  : mateParams = {
          'timeStamp': _i2.BuilderArg<Duration>(
            name: 'timeStamp',
            init: timeStamp,
            isNamed: true,
            defaultValue: Duration.zero,
          ),
          'kind': _i2.BuilderArg<_i3.PointerDeviceKind>(
            name: 'kind',
            init: kind,
            isNamed: true,
            defaultValue: _i3.PointerDeviceKind.mouse,
          ),
          'device': _i2.BuilderArg<int>(
            name: 'device',
            init: device,
            isNamed: true,
            defaultValue: 0,
          ),
          'position': _i2.BuilderArg<_i3.Offset>(
            name: 'position',
            init: position,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'embedderId': _i2.BuilderArg<int>(
            name: 'embedderId',
            init: embedderId,
            isNamed: true,
            defaultValue: 0,
          ),
          'scale': _i2.BuilderArg<double>(
            name: 'scale',
            init: scale,
            isNamed: true,
            defaultValue: 1.0,
          ),
        },
        super() {
    mateBuilderName = 'PointerScaleEvent';
    matePackageUrl = 'package:flutter/gestures.dart';
    mateBuilder = (p) => PointerScaleEvent$Mate(
          timeStamp: p.get('timeStamp').build(),
          kind: p.get('kind').build(),
          device: p.get('device').build(),
          position: p.get('position').build(),
          embedderId: p.get('embedderId').build(),
          scale: p.get('scale').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class PointerPanZoomStartEvent extends PointerEvent with _PointerEventDescription, _CopyPointerPanZoomStartEvent
class PointerPanZoomStartEvent$Mate extends _i1.PointerPanZoomStartEvent with _i2.Mate {
  /// PointerPanZoomStartEvent PointerPanZoomStartEvent({Duration timeStamp = Duration.zero, int device = 0, int pointer = 0, Offset position = Offset.zero, int embedderId = 0, bool synthesized = false})
  PointerPanZoomStartEvent$Mate({
    /// optionalParameters: {Duration timeStamp = Duration.zero} , default:processed=PrefixedIdentifierImpl
    super.timeStamp,

    /// optionalParameters: {int device = 0} , default:processed=IntegerLiteralImpl
    super.device,

    /// optionalParameters: {int pointer = 0} , default:processed=IntegerLiteralImpl
    super.pointer,

    /// optionalParameters: {Offset position = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.position,

    /// optionalParameters: {int embedderId = 0} , default:processed=IntegerLiteralImpl
    super.embedderId,

    /// optionalParameters: {bool synthesized = false} , default:processed=BooleanLiteralImpl
    super.synthesized,
  })  : mateParams = {
          'timeStamp': _i2.BuilderArg<Duration>(
            name: 'timeStamp',
            init: timeStamp,
            isNamed: true,
            defaultValue: Duration.zero,
          ),
          'device': _i2.BuilderArg<int>(
            name: 'device',
            init: device,
            isNamed: true,
            defaultValue: 0,
          ),
          'pointer': _i2.BuilderArg<int>(
            name: 'pointer',
            init: pointer,
            isNamed: true,
            defaultValue: 0,
          ),
          'position': _i2.BuilderArg<_i3.Offset>(
            name: 'position',
            init: position,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'embedderId': _i2.BuilderArg<int>(
            name: 'embedderId',
            init: embedderId,
            isNamed: true,
            defaultValue: 0,
          ),
          'synthesized': _i2.BuilderArg<bool>(
            name: 'synthesized',
            init: synthesized,
            isNamed: true,
            defaultValue: false,
          ),
        },
        super() {
    mateBuilderName = 'PointerPanZoomStartEvent';
    matePackageUrl = 'package:flutter/gestures.dart';
    mateBuilder = (p) => PointerPanZoomStartEvent$Mate(
          timeStamp: p.get('timeStamp').build(),
          device: p.get('device').build(),
          pointer: p.get('pointer').build(),
          position: p.get('position').build(),
          embedderId: p.get('embedderId').build(),
          synthesized: p.get('synthesized').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class PointerPanZoomUpdateEvent extends PointerEvent with _PointerEventDescription, _CopyPointerPanZoomUpdateEvent
class PointerPanZoomUpdateEvent$Mate extends _i1.PointerPanZoomUpdateEvent with _i2.Mate {
  /// PointerPanZoomUpdateEvent PointerPanZoomUpdateEvent({Duration timeStamp = Duration.zero, int device = 0, int pointer = 0, Offset position = Offset.zero, int embedderId = 0, Offset pan = Offset.zero, Offset panDelta = Offset.zero, double scale = 1.0, double rotation = 0.0, bool synthesized = false})
  PointerPanZoomUpdateEvent$Mate({
    /// optionalParameters: {Duration timeStamp = Duration.zero} , default:processed=PrefixedIdentifierImpl
    super.timeStamp,

    /// optionalParameters: {int device = 0} , default:processed=IntegerLiteralImpl
    super.device,

    /// optionalParameters: {int pointer = 0} , default:processed=IntegerLiteralImpl
    super.pointer,

    /// optionalParameters: {Offset position = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.position,

    /// optionalParameters: {int embedderId = 0} , default:processed=IntegerLiteralImpl
    super.embedderId,

    /// optionalParameters: {Offset pan = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.pan,

    /// optionalParameters: {Offset panDelta = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.panDelta,

    /// optionalParameters: {double scale = 1.0} , default:processed=DoubleLiteralImpl
    super.scale,

    /// optionalParameters: {double rotation = 0.0} , default:processed=DoubleLiteralImpl
    super.rotation,

    /// optionalParameters: {bool synthesized = false} , default:processed=BooleanLiteralImpl
    super.synthesized,
  })  : mateParams = {
          'timeStamp': _i2.BuilderArg<Duration>(
            name: 'timeStamp',
            init: timeStamp,
            isNamed: true,
            defaultValue: Duration.zero,
          ),
          'device': _i2.BuilderArg<int>(
            name: 'device',
            init: device,
            isNamed: true,
            defaultValue: 0,
          ),
          'pointer': _i2.BuilderArg<int>(
            name: 'pointer',
            init: pointer,
            isNamed: true,
            defaultValue: 0,
          ),
          'position': _i2.BuilderArg<_i3.Offset>(
            name: 'position',
            init: position,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'embedderId': _i2.BuilderArg<int>(
            name: 'embedderId',
            init: embedderId,
            isNamed: true,
            defaultValue: 0,
          ),
          'pan': _i2.BuilderArg<_i3.Offset>(
            name: 'pan',
            init: pan,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'panDelta': _i2.BuilderArg<_i3.Offset>(
            name: 'panDelta',
            init: panDelta,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'scale': _i2.BuilderArg<double>(
            name: 'scale',
            init: scale,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'rotation': _i2.BuilderArg<double>(
            name: 'rotation',
            init: rotation,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'synthesized': _i2.BuilderArg<bool>(
            name: 'synthesized',
            init: synthesized,
            isNamed: true,
            defaultValue: false,
          ),
        },
        super() {
    mateBuilderName = 'PointerPanZoomUpdateEvent';
    matePackageUrl = 'package:flutter/gestures.dart';
    mateBuilder = (p) => PointerPanZoomUpdateEvent$Mate(
          timeStamp: p.get('timeStamp').build(),
          device: p.get('device').build(),
          pointer: p.get('pointer').build(),
          position: p.get('position').build(),
          embedderId: p.get('embedderId').build(),
          pan: p.get('pan').build(),
          panDelta: p.get('panDelta').build(),
          scale: p.get('scale').build(),
          rotation: p.get('rotation').build(),
          synthesized: p.get('synthesized').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class PointerPanZoomEndEvent extends PointerEvent with _PointerEventDescription, _CopyPointerPanZoomEndEvent
class PointerPanZoomEndEvent$Mate extends _i1.PointerPanZoomEndEvent with _i2.Mate {
  /// PointerPanZoomEndEvent PointerPanZoomEndEvent({Duration timeStamp = Duration.zero, int device = 0, int pointer = 0, Offset position = Offset.zero, int embedderId = 0, bool synthesized = false})
  PointerPanZoomEndEvent$Mate({
    /// optionalParameters: {Duration timeStamp = Duration.zero} , default:processed=PrefixedIdentifierImpl
    super.timeStamp,

    /// optionalParameters: {int device = 0} , default:processed=IntegerLiteralImpl
    super.device,

    /// optionalParameters: {int pointer = 0} , default:processed=IntegerLiteralImpl
    super.pointer,

    /// optionalParameters: {Offset position = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.position,

    /// optionalParameters: {int embedderId = 0} , default:processed=IntegerLiteralImpl
    super.embedderId,

    /// optionalParameters: {bool synthesized = false} , default:processed=BooleanLiteralImpl
    super.synthesized,
  })  : mateParams = {
          'timeStamp': _i2.BuilderArg<Duration>(
            name: 'timeStamp',
            init: timeStamp,
            isNamed: true,
            defaultValue: Duration.zero,
          ),
          'device': _i2.BuilderArg<int>(
            name: 'device',
            init: device,
            isNamed: true,
            defaultValue: 0,
          ),
          'pointer': _i2.BuilderArg<int>(
            name: 'pointer',
            init: pointer,
            isNamed: true,
            defaultValue: 0,
          ),
          'position': _i2.BuilderArg<_i3.Offset>(
            name: 'position',
            init: position,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'embedderId': _i2.BuilderArg<int>(
            name: 'embedderId',
            init: embedderId,
            isNamed: true,
            defaultValue: 0,
          ),
          'synthesized': _i2.BuilderArg<bool>(
            name: 'synthesized',
            init: synthesized,
            isNamed: true,
            defaultValue: false,
          ),
        },
        super() {
    mateBuilderName = 'PointerPanZoomEndEvent';
    matePackageUrl = 'package:flutter/gestures.dart';
    mateBuilder = (p) => PointerPanZoomEndEvent$Mate(
          timeStamp: p.get('timeStamp').build(),
          device: p.get('device').build(),
          pointer: p.get('pointer').build(),
          position: p.get('position').build(),
          embedderId: p.get('embedderId').build(),
          synthesized: p.get('synthesized').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class PointerCancelEvent extends PointerEvent with _PointerEventDescription, _CopyPointerCancelEvent
class PointerCancelEvent$Mate extends _i1.PointerCancelEvent with _i2.Mate {
  /// PointerCancelEvent PointerCancelEvent({Duration timeStamp = Duration.zero, int pointer = 0, PointerDeviceKind kind = PointerDeviceKind.touch, int device = 0, Offset position = Offset.zero, int buttons = 0, bool obscured = false, double pressureMin = 1.0, double pressureMax = 1.0, double distance = 0.0, double distanceMax = 0.0, double size = 0.0, double radiusMajor = 0.0, double radiusMinor = 0.0, double radiusMin = 0.0, double radiusMax = 0.0, double orientation = 0.0, double tilt = 0.0, int embedderId = 0})
  PointerCancelEvent$Mate({
    /// optionalParameters: {Duration timeStamp = Duration.zero} , default:processed=PrefixedIdentifierImpl
    super.timeStamp,

    /// optionalParameters: {int pointer = 0} , default:processed=IntegerLiteralImpl
    super.pointer,

    /// optionalParameters: {PointerDeviceKind kind = PointerDeviceKind.touch} , default:processed=PrefixedIdentifierImpl
    super.kind,

    /// optionalParameters: {int device = 0} , default:processed=IntegerLiteralImpl
    super.device,

    /// optionalParameters: {Offset position = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.position,

    /// optionalParameters: {int buttons = 0} , default:processed=IntegerLiteralImpl
    super.buttons,

    /// optionalParameters: {bool obscured = false} , default:processed=BooleanLiteralImpl
    super.obscured,

    /// optionalParameters: {double pressureMin = 1.0} , default:processed=DoubleLiteralImpl
    super.pressureMin,

    /// optionalParameters: {double pressureMax = 1.0} , default:processed=DoubleLiteralImpl
    super.pressureMax,

    /// optionalParameters: {double distance = 0.0} , default:processed=DoubleLiteralImpl
    super.distance,

    /// optionalParameters: {double distanceMax = 0.0} , default:processed=DoubleLiteralImpl
    super.distanceMax,

    /// optionalParameters: {double size = 0.0} , default:processed=DoubleLiteralImpl
    super.size,

    /// optionalParameters: {double radiusMajor = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMajor,

    /// optionalParameters: {double radiusMinor = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMinor,

    /// optionalParameters: {double radiusMin = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMin,

    /// optionalParameters: {double radiusMax = 0.0} , default:processed=DoubleLiteralImpl
    super.radiusMax,

    /// optionalParameters: {double orientation = 0.0} , default:processed=DoubleLiteralImpl
    super.orientation,

    /// optionalParameters: {double tilt = 0.0} , default:processed=DoubleLiteralImpl
    super.tilt,

    /// optionalParameters: {int embedderId = 0} , default:processed=IntegerLiteralImpl
    super.embedderId,
  })  : mateParams = {
          'timeStamp': _i2.BuilderArg<Duration>(
            name: 'timeStamp',
            init: timeStamp,
            isNamed: true,
            defaultValue: Duration.zero,
          ),
          'pointer': _i2.BuilderArg<int>(
            name: 'pointer',
            init: pointer,
            isNamed: true,
            defaultValue: 0,
          ),
          'kind': _i2.BuilderArg<_i3.PointerDeviceKind>(
            name: 'kind',
            init: kind,
            isNamed: true,
            defaultValue: _i3.PointerDeviceKind.touch,
          ),
          'device': _i2.BuilderArg<int>(
            name: 'device',
            init: device,
            isNamed: true,
            defaultValue: 0,
          ),
          'position': _i2.BuilderArg<_i3.Offset>(
            name: 'position',
            init: position,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'buttons': _i2.BuilderArg<int>(
            name: 'buttons',
            init: buttons,
            isNamed: true,
            defaultValue: 0,
          ),
          'obscured': _i2.BuilderArg<bool>(
            name: 'obscured',
            init: obscured,
            isNamed: true,
            defaultValue: false,
          ),
          'pressureMin': _i2.BuilderArg<double>(
            name: 'pressureMin',
            init: pressureMin,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'pressureMax': _i2.BuilderArg<double>(
            name: 'pressureMax',
            init: pressureMax,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'distance': _i2.BuilderArg<double>(
            name: 'distance',
            init: distance,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'distanceMax': _i2.BuilderArg<double>(
            name: 'distanceMax',
            init: distanceMax,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'size': _i2.BuilderArg<double>(
            name: 'size',
            init: size,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMajor': _i2.BuilderArg<double>(
            name: 'radiusMajor',
            init: radiusMajor,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMinor': _i2.BuilderArg<double>(
            name: 'radiusMinor',
            init: radiusMinor,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMin': _i2.BuilderArg<double>(
            name: 'radiusMin',
            init: radiusMin,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'radiusMax': _i2.BuilderArg<double>(
            name: 'radiusMax',
            init: radiusMax,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'orientation': _i2.BuilderArg<double>(
            name: 'orientation',
            init: orientation,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'tilt': _i2.BuilderArg<double>(
            name: 'tilt',
            init: tilt,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'embedderId': _i2.BuilderArg<int>(
            name: 'embedderId',
            init: embedderId,
            isNamed: true,
            defaultValue: 0,
          ),
        },
        super() {
    mateBuilderName = 'PointerCancelEvent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => PointerCancelEvent$Mate(
          timeStamp: p.get('timeStamp').build(),
          pointer: p.get('pointer').build(),
          kind: p.get('kind').build(),
          device: p.get('device').build(),
          position: p.get('position').build(),
          buttons: p.get('buttons').build(),
          obscured: p.get('obscured').build(),
          pressureMin: p.get('pressureMin').build(),
          pressureMax: p.get('pressureMax').build(),
          distance: p.get('distance').build(),
          distanceMax: p.get('distanceMax').build(),
          size: p.get('size').build(),
          radiusMajor: p.get('radiusMajor').build(),
          radiusMinor: p.get('radiusMinor').build(),
          radiusMin: p.get('radiusMin').build(),
          radiusMax: p.get('radiusMax').build(),
          orientation: p.get('orientation').build(),
          tilt: p.get('tilt').build(),
          embedderId: p.get('embedderId').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
