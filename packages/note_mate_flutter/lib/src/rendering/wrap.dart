// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/rendering/wrap.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'package:flutter/src/rendering/box.dart' as _i3;
import 'package:flutter/src/painting/basic_types.dart' as _i4;
import 'package:flutter/cupertino.dart' as _i5;
import 'dart:ui' as _i6;

/// class RenderWrap extends RenderBox with ContainerRenderObjectMixin<RenderBox, WrapParentData>, RenderBoxContainerDefaultsMixin<RenderBox, WrapParentData>
class RenderWrap$Mate extends _i1.RenderWrap with _i2.Mate {
  /// RenderWrap RenderWrap({List<RenderBox>? children, Axis direction = Axis.horizontal, WrapAlignment alignment = WrapAlignment.start, double spacing = 0.0, WrapAlignment runAlignment = WrapAlignment.start, double runSpacing = 0.0, WrapCrossAlignment crossAxisAlignment = WrapCrossAlignment.start, TextDirection? textDirection, VerticalDirection verticalDirection = VerticalDirection.down, Clip clipBehavior = Clip.none})
  RenderWrap$Mate({
    /// optionalParameters: {List<RenderBox>? children} , default:none
    List<_i3.RenderBox>? children,

    /// optionalParameters: {Axis direction = Axis.horizontal} , default:processed=PrefixedIdentifierImpl
    _i4.Axis direction = _i5.Axis.horizontal,

    /// optionalParameters: {WrapAlignment alignment = WrapAlignment.start} , default:processed=PrefixedIdentifierImpl
    _i1.WrapAlignment alignment = _i5.WrapAlignment.start,

    /// optionalParameters: {double spacing = 0.0} , default:processed=DoubleLiteralImpl
    double spacing = 0.0,

    /// optionalParameters: {WrapAlignment runAlignment = WrapAlignment.start} , default:processed=PrefixedIdentifierImpl
    _i1.WrapAlignment runAlignment = _i5.WrapAlignment.start,

    /// optionalParameters: {double runSpacing = 0.0} , default:processed=DoubleLiteralImpl
    double runSpacing = 0.0,

    /// optionalParameters: {WrapCrossAlignment crossAxisAlignment = WrapCrossAlignment.start} , default:processed=PrefixedIdentifierImpl
    _i1.WrapCrossAlignment crossAxisAlignment = _i5.WrapCrossAlignment.start,

    /// optionalParameters: {TextDirection? textDirection} , default:none
    _i6.TextDirection? textDirection,

    /// optionalParameters: {VerticalDirection verticalDirection = VerticalDirection.down} , default:processed=PrefixedIdentifierImpl
    _i4.VerticalDirection verticalDirection = _i5.VerticalDirection.down,

    /// optionalParameters: {Clip clipBehavior = Clip.none} , default:processed=PrefixedIdentifierImpl
    _i6.Clip clipBehavior = _i6.Clip.none,
  }) : super(
          children: children,
          direction: direction,
          alignment: alignment,
          spacing: spacing,
          runAlignment: runAlignment,
          runSpacing: runSpacing,
          crossAxisAlignment: crossAxisAlignment,
          textDirection: textDirection,
          verticalDirection: verticalDirection,
          clipBehavior: clipBehavior,
        ) {
    mateBuilderName = 'RenderWrap';
    matePackageUrl = 'package:flutter/rendering.dart';
    mateBuilder = (p) => RenderWrap$Mate(
          children: p.get('children').build(),
          direction: p.get('direction').build(),
          alignment: p.get('alignment').build(),
          spacing: p.get('spacing').build(),
          runAlignment: p.get('runAlignment').build(),
          runSpacing: p.get('runSpacing').build(),
          crossAxisAlignment: p.get('crossAxisAlignment').build(),
          textDirection: p.get('textDirection').build(),
          verticalDirection: p.get('verticalDirection').build(),
          clipBehavior: p.get('clipBehavior').build(),
        );
    mateUse(
      'children',
      children,
      isNamed: true,
    );
    mateUse(
      'direction',
      direction,
      isNamed: true,
      defaultValue: _i5.Axis.horizontal,
    );
    mateUse(
      'alignment',
      alignment,
      isNamed: true,
      defaultValue: _i5.WrapAlignment.start,
    );
    mateUse(
      'spacing',
      spacing,
      isNamed: true,
      defaultValue: 0.0,
    );
    mateUse(
      'runAlignment',
      runAlignment,
      isNamed: true,
      defaultValue: _i5.WrapAlignment.start,
    );
    mateUse(
      'runSpacing',
      runSpacing,
      isNamed: true,
      defaultValue: 0.0,
    );
    mateUse(
      'crossAxisAlignment',
      crossAxisAlignment,
      isNamed: true,
      defaultValue: _i5.WrapCrossAlignment.start,
    );
    mateUse(
      'textDirection',
      textDirection,
      isNamed: true,
    );
    mateUse(
      'verticalDirection',
      verticalDirection,
      isNamed: true,
      defaultValue: _i5.VerticalDirection.down,
    );
    mateUse(
      'clipBehavior',
      clipBehavior,
      isNamed: true,
      defaultValue: _i6.Clip.none,
    );
  }
}
