// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/rendering/view.dart';
import 'package:note/mate.dart';
import 'dart:ui';
import 'dart:core';
import 'package:flutter/src/rendering/box.dart';

/// class ViewConfiguration
class ViewConfiguration$Mate extends ViewConfiguration with Mate {
  /// ViewConfiguration ViewConfiguration({Size size = Size.zero, double devicePixelRatio = 1.0})
  ViewConfiguration$Mate({
    /// optionalParameters: {Size size = Size.zero} , defaultValue:unprocessed
    required Size size,

    /// optionalParameters: {double devicePixelRatio = 1.0} , defaultValue:Literal
    double devicePixelRatio = 1.0,
  }) : super(
          size: size,
          devicePixelRatio: devicePixelRatio,
        ) {
    mateBuilder = (p) => ViewConfiguration$Mate(
          size: p.get('size').build(),
          devicePixelRatio: p.get('devicePixelRatio').build(),
        );
    mateDeclare('size', size);
    mateDeclare('devicePixelRatio', devicePixelRatio);
  }
}

/// class RenderView extends RenderObject with RenderObjectWithChildMixin<RenderBox>
class RenderView$Mate extends RenderView with Mate {
  /// RenderView RenderView({RenderBox? child, required ViewConfiguration configuration, required FlutterView window})
  RenderView$Mate({
    /// optionalParameters: {RenderBox? child} , defaultValue:none
    RenderBox? child,

    /// optionalParameters: {required ViewConfiguration configuration} , defaultValue:none
    required ViewConfiguration configuration,

    /// optionalParameters: {required FlutterView window} , defaultValue:none
    required FlutterView window,
  }) : super(
          child: child,
          configuration: configuration,
          window: window,
        ) {
    mateBuilder = (p) => RenderView$Mate(
          child: p.get('child').build(),
          configuration: p.get('configuration').build(),
          window: p.get('window').build(),
        );
    mateDeclare('child', child);
    mateDeclare('configuration', configuration);
    mateDeclare('window', window);
  }
}
