// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/rendering/viewport.dart' as _i1;
import 'package:note/mate.dart' as _i2;
import 'dart:ui' as _i3;
import 'package:flutter/src/painting/basic_types.dart' as _i4;
import 'package:flutter/src/rendering/viewport_offset.dart' as _i5;
import 'package:flutter/src/rendering/sliver.dart' as _i6;

/// class RevealedOffset
class RevealedOffset$Mate extends _i1.RevealedOffset with _i2.Mate {
  /// RevealedOffset RevealedOffset({required double offset, required Rect rect})
  RevealedOffset$Mate({
    /// optionalParameters: {required double offset} , default:none
    required super.offset,

    /// optionalParameters: {required Rect rect} , default:none
    required super.rect,
  })  : mateParams = {
          'offset': _i2.BuilderArg<double>(
            name: 'offset',
            init: offset,
            isNamed: true,
          ),
          'rect': _i2.BuilderArg<_i3.Rect>(
            name: 'rect',
            init: rect,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'RevealedOffset';
    matePackageUrl = 'package:flutter/rendering.dart';
    mateBuilder = (p) => RevealedOffset$Mate(
          offset: p.get('offset').build(),
          rect: p.get('rect').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class RenderViewport extends RenderViewportBase<SliverPhysicalContainerParentData>
class RenderViewport$Mate extends _i1.RenderViewport with _i2.Mate {
  /// RenderViewport RenderViewport({AxisDirection axisDirection = AxisDirection.down, required AxisDirection crossAxisDirection, required ViewportOffset offset, double anchor = 0.0, List<RenderSliver>? children, RenderSliver? center, double? cacheExtent, CacheExtentStyle cacheExtentStyle = CacheExtentStyle.pixel, Clip clipBehavior = Clip.hardEdge})
  RenderViewport$Mate({
    /// optionalParameters: {AxisDirection axisDirection = AxisDirection.down} , default:unprocessed=PrefixedIdentifierImpl
    super.axisDirection,

    /// optionalParameters: {required AxisDirection crossAxisDirection} , default:none
    required super.crossAxisDirection,

    /// optionalParameters: {required ViewportOffset offset} , default:none
    required super.offset,

    /// optionalParameters: {double anchor = 0.0} , default:processed=DoubleLiteralImpl
    super.anchor,

    /// optionalParameters: {List<RenderSliver>? children} , default:none
    super.children,

    /// optionalParameters: {RenderSliver? center} , default:none
    super.center,

    /// optionalParameters: {double? cacheExtent} , default:none
    super.cacheExtent,

    /// optionalParameters: {CacheExtentStyle cacheExtentStyle = CacheExtentStyle.pixel} , default:unprocessed=PrefixedIdentifierImpl
    super.cacheExtentStyle,

    /// optionalParameters: {Clip clipBehavior = Clip.hardEdge} , default:unprocessed=PrefixedIdentifierImpl
    super.clipBehavior,
  })  : mateParams = {
          'axisDirection': _i2.BuilderArg<_i4.AxisDirection>(
            name: 'axisDirection',
            init: axisDirection,
            isNamed: true,
          ),
          'crossAxisDirection': _i2.BuilderArg<_i4.AxisDirection>(
            name: 'crossAxisDirection',
            init: crossAxisDirection,
            isNamed: true,
          ),
          'offset': _i2.BuilderArg<_i5.ViewportOffset>(
            name: 'offset',
            init: offset,
            isNamed: true,
          ),
          'anchor': _i2.BuilderArg<double>(
            name: 'anchor',
            init: anchor,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'children': _i2.BuilderArg<List<_i6.RenderSliver>?>(
            name: 'children',
            init: children,
            isNamed: true,
          ),
          'center': _i2.BuilderArg<_i6.RenderSliver?>(
            name: 'center',
            init: center,
            isNamed: true,
          ),
          'cacheExtent': _i2.BuilderArg<double?>(
            name: 'cacheExtent',
            init: cacheExtent,
            isNamed: true,
          ),
          'cacheExtentStyle': _i2.BuilderArg<_i1.CacheExtentStyle>(
            name: 'cacheExtentStyle',
            init: cacheExtentStyle,
            isNamed: true,
          ),
          'clipBehavior': _i2.BuilderArg<_i3.Clip>(
            name: 'clipBehavior',
            init: clipBehavior,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'RenderViewport';
    matePackageUrl = 'package:flutter/rendering.dart';
    mateBuilder = (p) => RenderViewport$Mate(
          axisDirection: p.get('axisDirection').build(),
          crossAxisDirection: p.get('crossAxisDirection').build(),
          offset: p.get('offset').build(),
          anchor: p.get('anchor').build(),
          children: p.get('children').build(),
          center: p.get('center').build(),
          cacheExtent: p.get('cacheExtent').build(),
          cacheExtentStyle: p.get('cacheExtentStyle').build(),
          clipBehavior: p.get('clipBehavior').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class RenderShrinkWrappingViewport extends RenderViewportBase<SliverLogicalContainerParentData>
class RenderShrinkWrappingViewport$Mate extends _i1.RenderShrinkWrappingViewport with _i2.Mate {
  /// RenderShrinkWrappingViewport RenderShrinkWrappingViewport({AxisDirection axisDirection = AxisDirection.down, required AxisDirection crossAxisDirection, required ViewportOffset offset, Clip clipBehavior = Clip.hardEdge, List<RenderSliver>? children})
  RenderShrinkWrappingViewport$Mate({
    /// optionalParameters: {AxisDirection axisDirection = AxisDirection.down} , default:unprocessed=PrefixedIdentifierImpl
    super.axisDirection,

    /// optionalParameters: {required AxisDirection crossAxisDirection} , default:none
    required super.crossAxisDirection,

    /// optionalParameters: {required ViewportOffset offset} , default:none
    required super.offset,

    /// optionalParameters: {Clip clipBehavior = Clip.hardEdge} , default:unprocessed=PrefixedIdentifierImpl
    super.clipBehavior,

    /// optionalParameters: {List<RenderSliver>? children} , default:none
    super.children,
  })  : mateParams = {
          'axisDirection': _i2.BuilderArg<_i4.AxisDirection>(
            name: 'axisDirection',
            init: axisDirection,
            isNamed: true,
          ),
          'crossAxisDirection': _i2.BuilderArg<_i4.AxisDirection>(
            name: 'crossAxisDirection',
            init: crossAxisDirection,
            isNamed: true,
          ),
          'offset': _i2.BuilderArg<_i5.ViewportOffset>(
            name: 'offset',
            init: offset,
            isNamed: true,
          ),
          'clipBehavior': _i2.BuilderArg<_i3.Clip>(
            name: 'clipBehavior',
            init: clipBehavior,
            isNamed: true,
          ),
          'children': _i2.BuilderArg<List<_i6.RenderSliver>?>(
            name: 'children',
            init: children,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'RenderShrinkWrappingViewport';
    matePackageUrl = 'package:flutter/rendering.dart';
    mateBuilder = (p) => RenderShrinkWrappingViewport$Mate(
          axisDirection: p.get('axisDirection').build(),
          crossAxisDirection: p.get('crossAxisDirection').build(),
          offset: p.get('offset').build(),
          clipBehavior: p.get('clipBehavior').build(),
          children: p.get('children').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
