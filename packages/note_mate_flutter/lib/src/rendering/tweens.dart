// /// Generated by gen_maters.dart, please don't edit! 

import 'package:flutter/src/rendering/tweens.dart';import 'package:flutter/src/painting/fractional_offset.dart';import 'package:flutter/src/painting/alignment.dart';import 'package:note/mate.dart' show Mate;/// class FractionalOffsetTween extends Tween<FractionalOffset?>
class FractionalOffsetTween$Mate extends FractionalOffsetTween with Mate {/// FractionalOffsetTween FractionalOffsetTween({FractionalOffset? begin, FractionalOffset? end})
FractionalOffsetTween$Mate({/// optionalParameters: {FractionalOffset? begin} , hasDefaultValue:false, defaultValueCode:null
FractionalOffset? begin, /// optionalParameters: {FractionalOffset? end} , hasDefaultValue:false, defaultValueCode:null
FractionalOffset? end, }) : super(begin: begin, end: end, ) { mateBuilder = (p) => FractionalOffsetTween$Mate(begin: p.get('begin').build(), end: p.get('end').build(), );
matePut('begin', begin);
matePut('end', end); }

 }
/// class AlignmentTween extends Tween<Alignment>
class AlignmentTween$Mate extends AlignmentTween with Mate {/// AlignmentTween AlignmentTween({Alignment? begin, Alignment? end})
AlignmentTween$Mate({/// optionalParameters: {Alignment? begin} , hasDefaultValue:false, defaultValueCode:null
Alignment? begin, /// optionalParameters: {Alignment? end} , hasDefaultValue:false, defaultValueCode:null
Alignment? end, }) : super(begin: begin, end: end, ) { mateBuilder = (p) => AlignmentTween$Mate(begin: p.get('begin').build(), end: p.get('end').build(), );
matePut('begin', begin);
matePut('end', end); }

 }
/// class AlignmentGeometryTween extends Tween<AlignmentGeometry?>
class AlignmentGeometryTween$Mate extends AlignmentGeometryTween with Mate {/// AlignmentGeometryTween AlignmentGeometryTween({AlignmentGeometry? begin, AlignmentGeometry? end})
AlignmentGeometryTween$Mate({/// optionalParameters: {AlignmentGeometry? begin} , hasDefaultValue:false, defaultValueCode:null
AlignmentGeometry? begin, /// optionalParameters: {AlignmentGeometry? end} , hasDefaultValue:false, defaultValueCode:null
AlignmentGeometry? end, }) : super(begin: begin, end: end, ) { mateBuilder = (p) => AlignmentGeometryTween$Mate(begin: p.get('begin').build(), end: p.get('end').build(), );
matePut('begin', begin);
matePut('end', end); }

 }
