// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/rendering/list_wheel_viewport.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/rendering/viewport_offset.dart';
import 'dart:core';
import 'dart:ui';
import 'package:flutter/src/rendering/box.dart';

/// class RenderListWheelViewport extends RenderBox with ContainerRenderObjectMixin<RenderBox, ListWheelParentData> implements RenderAbstractViewport
class RenderListWheelViewport$Mate extends RenderListWheelViewport with Mate {
  /// RenderListWheelViewport RenderListWheelViewport({required ListWheelChildManager childManager, required ViewportOffset offset, double diameterRatio = defaultDiameterRatio, double perspective = defaultPerspective, double offAxisFraction = 0, bool useMagnifier = false, double magnification = 1, double overAndUnderCenterOpacity = 1, required double itemExtent, double squeeze = 1, bool renderChildrenOutsideViewport = false, Clip clipBehavior = Clip.none, List<RenderBox>? children})
  RenderListWheelViewport$Mate({
    /// optionalParameters: {required ListWheelChildManager childManager} , default:none
    required ListWheelChildManager childManager,

    /// optionalParameters: {required ViewportOffset offset} , default:none
    required ViewportOffset offset,

    /// optionalParameters: {double diameterRatio = defaultDiameterRatio} , default:unprocessed=SimpleIdentifierImpl
    required double diameterRatio,

    /// optionalParameters: {double perspective = defaultPerspective} , default:unprocessed=SimpleIdentifierImpl
    required double perspective,

    /// optionalParameters: {double offAxisFraction = 0} , default:processed=IntegerLiteralImpl
    double offAxisFraction = 0,

    /// optionalParameters: {bool useMagnifier = false} , default:processed=BooleanLiteralImpl
    bool useMagnifier = false,

    /// optionalParameters: {double magnification = 1} , default:processed=IntegerLiteralImpl
    double magnification = 1,

    /// optionalParameters: {double overAndUnderCenterOpacity = 1} , default:processed=IntegerLiteralImpl
    double overAndUnderCenterOpacity = 1,

    /// optionalParameters: {required double itemExtent} , default:none
    required double itemExtent,

    /// optionalParameters: {double squeeze = 1} , default:processed=IntegerLiteralImpl
    double squeeze = 1,

    /// optionalParameters: {bool renderChildrenOutsideViewport = false} , default:processed=BooleanLiteralImpl
    bool renderChildrenOutsideViewport = false,

    /// optionalParameters: {Clip clipBehavior = Clip.none} , default:processed=PrefixedIdentifierImpl
    Clip clipBehavior = Clip.none,

    /// optionalParameters: {List<RenderBox>? children} , default:none
    List<RenderBox>? children,
  }) : super(
          childManager: childManager,
          offset: offset,
          diameterRatio: diameterRatio,
          perspective: perspective,
          offAxisFraction: offAxisFraction,
          useMagnifier: useMagnifier,
          magnification: magnification,
          overAndUnderCenterOpacity: overAndUnderCenterOpacity,
          itemExtent: itemExtent,
          squeeze: squeeze,
          renderChildrenOutsideViewport: renderChildrenOutsideViewport,
          clipBehavior: clipBehavior,
          children: children,
        ) {
    mateBuilderName = 'RenderListWheelViewport';
    matePackageUrl = 'package:flutter/rendering.dart';
    mateBuilder = (p) => RenderListWheelViewport$Mate(
          childManager: p.get('childManager').build(),
          offset: p.get('offset').build(),
          diameterRatio: p.get('diameterRatio').build(),
          perspective: p.get('perspective').build(),
          offAxisFraction: p.get('offAxisFraction').build(),
          useMagnifier: p.get('useMagnifier').build(),
          magnification: p.get('magnification').build(),
          overAndUnderCenterOpacity: p.get('overAndUnderCenterOpacity').build(),
          itemExtent: p.get('itemExtent').build(),
          squeeze: p.get('squeeze').build(),
          renderChildrenOutsideViewport: p.get('renderChildrenOutsideViewport').build(),
          clipBehavior: p.get('clipBehavior').build(),
          children: p.get('children').build(),
        );
    mateUse(
      'childManager',
      childManager,
      isNamed: true,
    );
    mateUse(
      'offset',
      offset,
      isNamed: true,
    );
    mateUse(
      'diameterRatio',
      diameterRatio,
      isNamed: true,
    );
    mateUse(
      'perspective',
      perspective,
      isNamed: true,
    );
    mateUse(
      'offAxisFraction',
      offAxisFraction,
      isNamed: true,
      defaultValue: 0,
    );
    mateUse(
      'useMagnifier',
      useMagnifier,
      isNamed: true,
      defaultValue: false,
    );
    mateUse(
      'magnification',
      magnification,
      isNamed: true,
      defaultValue: 1,
    );
    mateUse(
      'overAndUnderCenterOpacity',
      overAndUnderCenterOpacity,
      isNamed: true,
      defaultValue: 1,
    );
    mateUse(
      'itemExtent',
      itemExtent,
      isNamed: true,
    );
    mateUse(
      'squeeze',
      squeeze,
      isNamed: true,
      defaultValue: 1,
    );
    mateUse(
      'renderChildrenOutsideViewport',
      renderChildrenOutsideViewport,
      isNamed: true,
      defaultValue: false,
    );
    mateUse(
      'clipBehavior',
      clipBehavior,
      isNamed: true,
      defaultValue: Clip.none,
    );
    mateUse(
      'children',
      children,
      isNamed: true,
    );
  }
}
