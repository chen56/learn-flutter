// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/rendering/flex.dart';
import 'package:note/mate.dart';
import 'dart:core';
import 'package:flutter/src/rendering/box.dart';
import 'package:flutter/src/painting/basic_types.dart';
import 'package:flutter/painting.dart';
import 'package:flutter/rendering.dart';
import 'dart:ui';

/// class RenderFlex extends RenderBox with ContainerRenderObjectMixin<RenderBox, FlexParentData>, RenderBoxContainerDefaultsMixin<RenderBox, FlexParentData>, DebugOverflowIndicatorMixin
class RenderFlex$Mate extends RenderFlex with Mate {
  /// RenderFlex RenderFlex({List<RenderBox>? children, Axis direction = Axis.horizontal, MainAxisSize mainAxisSize = MainAxisSize.max, MainAxisAlignment mainAxisAlignment = MainAxisAlignment.start, CrossAxisAlignment crossAxisAlignment = CrossAxisAlignment.center, TextDirection? textDirection, VerticalDirection verticalDirection = VerticalDirection.down, TextBaseline? textBaseline, Clip clipBehavior = Clip.none})
  RenderFlex$Mate({
    /// optionalParameters: {List<RenderBox>? children} , default:none
    List<RenderBox>? children,

    /// optionalParameters: {Axis direction = Axis.horizontal} , default:processed=PrefixedIdentifierImpl
    Axis direction = Axis.horizontal,

    /// optionalParameters: {MainAxisSize mainAxisSize = MainAxisSize.max} , default:processed=PrefixedIdentifierImpl
    MainAxisSize mainAxisSize = MainAxisSize.max,

    /// optionalParameters: {MainAxisAlignment mainAxisAlignment = MainAxisAlignment.start} , default:processed=PrefixedIdentifierImpl
    MainAxisAlignment mainAxisAlignment = MainAxisAlignment.start,

    /// optionalParameters: {CrossAxisAlignment crossAxisAlignment = CrossAxisAlignment.center} , default:processed=PrefixedIdentifierImpl
    CrossAxisAlignment crossAxisAlignment = CrossAxisAlignment.center,

    /// optionalParameters: {TextDirection? textDirection} , default:none
    TextDirection? textDirection,

    /// optionalParameters: {VerticalDirection verticalDirection = VerticalDirection.down} , default:processed=PrefixedIdentifierImpl
    VerticalDirection verticalDirection = VerticalDirection.down,

    /// optionalParameters: {TextBaseline? textBaseline} , default:none
    TextBaseline? textBaseline,

    /// optionalParameters: {Clip clipBehavior = Clip.none} , default:processed=PrefixedIdentifierImpl
    Clip clipBehavior = Clip.none,
  }) : super(
          children: children,
          direction: direction,
          mainAxisSize: mainAxisSize,
          mainAxisAlignment: mainAxisAlignment,
          crossAxisAlignment: crossAxisAlignment,
          textDirection: textDirection,
          verticalDirection: verticalDirection,
          textBaseline: textBaseline,
          clipBehavior: clipBehavior,
        ) {
    mateBuilderName = 'RenderFlex';
    matePackageUrl = 'package:flutter/rendering.dart';
    mateBuilder = (p) => RenderFlex$Mate(
          children: p.get('children').build(),
          direction: p.get('direction').build(),
          mainAxisSize: p.get('mainAxisSize').build(),
          mainAxisAlignment: p.get('mainAxisAlignment').build(),
          crossAxisAlignment: p.get('crossAxisAlignment').build(),
          textDirection: p.get('textDirection').build(),
          verticalDirection: p.get('verticalDirection').build(),
          textBaseline: p.get('textBaseline').build(),
          clipBehavior: p.get('clipBehavior').build(),
        );
    mateUse(
      'children',
      children,
      isNamed: true,
    );
    mateUse(
      'direction',
      direction,
      isNamed: true,
      defaultValue: Axis.horizontal,
    );
    mateUse(
      'mainAxisSize',
      mainAxisSize,
      isNamed: true,
      defaultValue: MainAxisSize.max,
    );
    mateUse(
      'mainAxisAlignment',
      mainAxisAlignment,
      isNamed: true,
      defaultValue: MainAxisAlignment.start,
    );
    mateUse(
      'crossAxisAlignment',
      crossAxisAlignment,
      isNamed: true,
      defaultValue: CrossAxisAlignment.center,
    );
    mateUse(
      'textDirection',
      textDirection,
      isNamed: true,
    );
    mateUse(
      'verticalDirection',
      verticalDirection,
      isNamed: true,
      defaultValue: VerticalDirection.down,
    );
    mateUse(
      'textBaseline',
      textBaseline,
      isNamed: true,
    );
    mateUse(
      'clipBehavior',
      clipBehavior,
      isNamed: true,
      defaultValue: Clip.none,
    );
  }
}
