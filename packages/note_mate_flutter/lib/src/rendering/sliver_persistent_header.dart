// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/rendering/sliver_persistent_header.dart' as _i1;
import 'package:note/mate_core.dart' as _i2;
import 'package:flutter/src/foundation/basic_types.dart' as _i3;
import 'package:flutter/src/animation/curves.dart' as _i4;
import 'package:flutter/animation.dart' as _i5;

/// class OverScrollHeaderStretchConfiguration
class OverScrollHeaderStretchConfiguration$Mate
    extends _i1.OverScrollHeaderStretchConfiguration with _i2.Mate {
  /// OverScrollHeaderStretchConfiguration OverScrollHeaderStretchConfiguration({double stretchTriggerOffset = 100.0, Future<void> Function()? onStretchTrigger})
  OverScrollHeaderStretchConfiguration$Mate({
    /// optionalParameters: {double stretchTriggerOffset = 100.0} , default:processed=DoubleLiteralImpl
    super.stretchTriggerOffset,

    /// optionalParameters: {Future<void> Function()? onStretchTrigger} , default:none
    super.onStretchTrigger,
  })  : mateParams = {
          'stretchTriggerOffset': _i2.BuilderArg<double>(
            name: 'stretchTriggerOffset',
            init: stretchTriggerOffset,
            isNamed: true,
            defaultValue: 100.0,
          ),
          'onStretchTrigger': _i2.BuilderArg<_i3.AsyncCallback?>(
            name: 'onStretchTrigger',
            init: onStretchTrigger,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'OverScrollHeaderStretchConfiguration';
    matePackageUrl = 'package:flutter/rendering.dart';
    mateBuilder = (p) => OverScrollHeaderStretchConfiguration$Mate(
          stretchTriggerOffset: p.get('stretchTriggerOffset').build(),
          onStretchTrigger: p.get('onStretchTrigger').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class PersistentHeaderShowOnScreenConfiguration
class PersistentHeaderShowOnScreenConfiguration$Mate
    extends _i1.PersistentHeaderShowOnScreenConfiguration with _i2.Mate {
  /// PersistentHeaderShowOnScreenConfiguration PersistentHeaderShowOnScreenConfiguration({double minShowOnScreenExtent = double.negativeInfinity, double maxShowOnScreenExtent = double.infinity})
  PersistentHeaderShowOnScreenConfiguration$Mate({
    /// optionalParameters: {double minShowOnScreenExtent = double.negativeInfinity} , default:processed=PrefixedIdentifierImpl
    super.minShowOnScreenExtent,

    /// optionalParameters: {double maxShowOnScreenExtent = double.infinity} , default:processed=PrefixedIdentifierImpl
    super.maxShowOnScreenExtent,
  })  : mateParams = {
          'minShowOnScreenExtent': _i2.BuilderArg<double>(
            name: 'minShowOnScreenExtent',
            init: minShowOnScreenExtent,
            isNamed: true,
            defaultValue: double.negativeInfinity,
          ),
          'maxShowOnScreenExtent': _i2.BuilderArg<double>(
            name: 'maxShowOnScreenExtent',
            init: maxShowOnScreenExtent,
            isNamed: true,
            defaultValue: double.infinity,
          ),
        },
        super() {
    mateBuilderName = 'PersistentHeaderShowOnScreenConfiguration';
    matePackageUrl = 'package:flutter/rendering.dart';
    mateBuilder = (p) => PersistentHeaderShowOnScreenConfiguration$Mate(
          minShowOnScreenExtent: p.get('minShowOnScreenExtent').build(),
          maxShowOnScreenExtent: p.get('maxShowOnScreenExtent').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class FloatingHeaderSnapConfiguration
class FloatingHeaderSnapConfiguration$Mate
    extends _i1.FloatingHeaderSnapConfiguration with _i2.Mate {
  /// FloatingHeaderSnapConfiguration FloatingHeaderSnapConfiguration({Curve curve = Curves.ease, Duration duration = const Duration(milliseconds: 300)})
  FloatingHeaderSnapConfiguration$Mate({
    /// optionalParameters: {Curve curve = Curves.ease} , default:processed=PrefixedIdentifierImpl
    super.curve,

    /// optionalParameters: {Duration duration = const Duration(milliseconds: 300)} , default:unprocessed=InstanceCreationExpressionImpl
    super.duration,
  })  : mateParams = {
          'curve': _i2.BuilderArg<_i4.Curve>(
            name: 'curve',
            init: curve,
            isNamed: true,
            defaultValue: _i5.Curves.ease,
          ),
          'duration': _i2.BuilderArg<Duration>(
            name: 'duration',
            init: duration,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'FloatingHeaderSnapConfiguration';
    matePackageUrl = 'package:flutter/rendering.dart';
    mateBuilder = (p) => FloatingHeaderSnapConfiguration$Mate(
          curve: p.get('curve').build(),
          duration: p.get('duration').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
