// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/text_editing_intents.dart' as _i1;
import 'package:note/mate_core.dart' as _i2;
import 'package:flutter/src/services/text_input.dart' as _i3;
import 'dart:ui' as _i4;
import 'package:flutter/src/services/text_editing.dart' as _i5;

/// class DeleteCharacterIntent extends DirectionalTextEditingIntent
class DeleteCharacterIntent$Mate extends _i1.DeleteCharacterIntent
    with _i2.Mate {
  /// DeleteCharacterIntent DeleteCharacterIntent({required bool forward})
  DeleteCharacterIntent$Mate(
      {
      /// optionalParameters: {required bool forward} , default:none
      required super.forward})
      : mateParams = {
          'forward': _i2.BuilderArg<bool>(
            name: 'forward',
            init: forward,
            isNamed: true,
          )
        },
        super() {
    mateBuilderName = 'DeleteCharacterIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder =
        (p) => DeleteCharacterIntent$Mate(forward: p.get('forward').build());
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class DeleteToNextWordBoundaryIntent extends DirectionalTextEditingIntent
class DeleteToNextWordBoundaryIntent$Mate
    extends _i1.DeleteToNextWordBoundaryIntent with _i2.Mate {
  /// DeleteToNextWordBoundaryIntent DeleteToNextWordBoundaryIntent({required bool forward})
  DeleteToNextWordBoundaryIntent$Mate(
      {
      /// optionalParameters: {required bool forward} , default:none
      required super.forward})
      : mateParams = {
          'forward': _i2.BuilderArg<bool>(
            name: 'forward',
            init: forward,
            isNamed: true,
          )
        },
        super() {
    mateBuilderName = 'DeleteToNextWordBoundaryIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) =>
        DeleteToNextWordBoundaryIntent$Mate(forward: p.get('forward').build());
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class DeleteToLineBreakIntent extends DirectionalTextEditingIntent
class DeleteToLineBreakIntent$Mate extends _i1.DeleteToLineBreakIntent
    with _i2.Mate {
  /// DeleteToLineBreakIntent DeleteToLineBreakIntent({required bool forward})
  DeleteToLineBreakIntent$Mate(
      {
      /// optionalParameters: {required bool forward} , default:none
      required super.forward})
      : mateParams = {
          'forward': _i2.BuilderArg<bool>(
            name: 'forward',
            init: forward,
            isNamed: true,
          )
        },
        super() {
    mateBuilderName = 'DeleteToLineBreakIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder =
        (p) => DeleteToLineBreakIntent$Mate(forward: p.get('forward').build());
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class ExtendSelectionByCharacterIntent extends DirectionalCaretMovementIntent
class ExtendSelectionByCharacterIntent$Mate
    extends _i1.ExtendSelectionByCharacterIntent with _i2.Mate {
  /// ExtendSelectionByCharacterIntent ExtendSelectionByCharacterIntent({required bool forward, required bool collapseSelection})
  ExtendSelectionByCharacterIntent$Mate({
    /// optionalParameters: {required bool forward} , default:none
    required super.forward,

    /// optionalParameters: {required bool collapseSelection} , default:none
    required super.collapseSelection,
  })  : mateParams = {
          'forward': _i2.BuilderArg<bool>(
            name: 'forward',
            init: forward,
            isNamed: true,
          ),
          'collapseSelection': _i2.BuilderArg<bool>(
            name: 'collapseSelection',
            init: collapseSelection,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'ExtendSelectionByCharacterIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ExtendSelectionByCharacterIntent$Mate(
          forward: p.get('forward').build(),
          collapseSelection: p.get('collapseSelection').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class ExtendSelectionToNextWordBoundaryIntent extends DirectionalCaretMovementIntent
class ExtendSelectionToNextWordBoundaryIntent$Mate
    extends _i1.ExtendSelectionToNextWordBoundaryIntent with _i2.Mate {
  /// ExtendSelectionToNextWordBoundaryIntent ExtendSelectionToNextWordBoundaryIntent({required bool forward, required bool collapseSelection})
  ExtendSelectionToNextWordBoundaryIntent$Mate({
    /// optionalParameters: {required bool forward} , default:none
    required super.forward,

    /// optionalParameters: {required bool collapseSelection} , default:none
    required super.collapseSelection,
  })  : mateParams = {
          'forward': _i2.BuilderArg<bool>(
            name: 'forward',
            init: forward,
            isNamed: true,
          ),
          'collapseSelection': _i2.BuilderArg<bool>(
            name: 'collapseSelection',
            init: collapseSelection,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'ExtendSelectionToNextWordBoundaryIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ExtendSelectionToNextWordBoundaryIntent$Mate(
          forward: p.get('forward').build(),
          collapseSelection: p.get('collapseSelection').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class ExtendSelectionToNextWordBoundaryOrCaretLocationIntent extends DirectionalCaretMovementIntent
class ExtendSelectionToNextWordBoundaryOrCaretLocationIntent$Mate extends _i1
    .ExtendSelectionToNextWordBoundaryOrCaretLocationIntent with _i2.Mate {
  /// ExtendSelectionToNextWordBoundaryOrCaretLocationIntent ExtendSelectionToNextWordBoundaryOrCaretLocationIntent({required bool forward})
  ExtendSelectionToNextWordBoundaryOrCaretLocationIntent$Mate(
      {
      /// optionalParameters: {required bool forward} , default:none
      required super.forward})
      : mateParams = {
          'forward': _i2.BuilderArg<bool>(
            name: 'forward',
            init: forward,
            isNamed: true,
          )
        },
        super() {
    mateBuilderName = 'ExtendSelectionToNextWordBoundaryOrCaretLocationIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) =>
        ExtendSelectionToNextWordBoundaryOrCaretLocationIntent$Mate(
            forward: p.get('forward').build());
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class ExpandSelectionToDocumentBoundaryIntent extends DirectionalCaretMovementIntent
class ExpandSelectionToDocumentBoundaryIntent$Mate
    extends _i1.ExpandSelectionToDocumentBoundaryIntent with _i2.Mate {
  /// ExpandSelectionToDocumentBoundaryIntent ExpandSelectionToDocumentBoundaryIntent({required bool forward})
  ExpandSelectionToDocumentBoundaryIntent$Mate(
      {
      /// optionalParameters: {required bool forward} , default:none
      required super.forward})
      : mateParams = {
          'forward': _i2.BuilderArg<bool>(
            name: 'forward',
            init: forward,
            isNamed: true,
          )
        },
        super() {
    mateBuilderName = 'ExpandSelectionToDocumentBoundaryIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ExpandSelectionToDocumentBoundaryIntent$Mate(
        forward: p.get('forward').build());
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class ExpandSelectionToLineBreakIntent extends DirectionalCaretMovementIntent
class ExpandSelectionToLineBreakIntent$Mate
    extends _i1.ExpandSelectionToLineBreakIntent with _i2.Mate {
  /// ExpandSelectionToLineBreakIntent ExpandSelectionToLineBreakIntent({required bool forward})
  ExpandSelectionToLineBreakIntent$Mate(
      {
      /// optionalParameters: {required bool forward} , default:none
      required super.forward})
      : mateParams = {
          'forward': _i2.BuilderArg<bool>(
            name: 'forward',
            init: forward,
            isNamed: true,
          )
        },
        super() {
    mateBuilderName = 'ExpandSelectionToLineBreakIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ExpandSelectionToLineBreakIntent$Mate(
        forward: p.get('forward').build());
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class ExtendSelectionToLineBreakIntent extends DirectionalCaretMovementIntent
class ExtendSelectionToLineBreakIntent$Mate
    extends _i1.ExtendSelectionToLineBreakIntent with _i2.Mate {
  /// ExtendSelectionToLineBreakIntent ExtendSelectionToLineBreakIntent({required bool forward, required bool collapseSelection, bool collapseAtReversal = false, bool continuesAtWrap = false})
  ExtendSelectionToLineBreakIntent$Mate({
    /// optionalParameters: {required bool forward} , default:none
    required super.forward,

    /// optionalParameters: {required bool collapseSelection} , default:none
    required super.collapseSelection,

    /// optionalParameters: {bool collapseAtReversal = false} , default:processed=BooleanLiteralImpl
    super.collapseAtReversal,

    /// optionalParameters: {bool continuesAtWrap = false} , default:processed=BooleanLiteralImpl
    super.continuesAtWrap,
  })  : mateParams = {
          'forward': _i2.BuilderArg<bool>(
            name: 'forward',
            init: forward,
            isNamed: true,
          ),
          'collapseSelection': _i2.BuilderArg<bool>(
            name: 'collapseSelection',
            init: collapseSelection,
            isNamed: true,
          ),
          'collapseAtReversal': _i2.BuilderArg<bool>(
            name: 'collapseAtReversal',
            init: collapseAtReversal,
            isNamed: true,
            defaultValue: false,
          ),
          'continuesAtWrap': _i2.BuilderArg<bool>(
            name: 'continuesAtWrap',
            init: continuesAtWrap,
            isNamed: true,
            defaultValue: false,
          ),
        },
        super() {
    mateBuilderName = 'ExtendSelectionToLineBreakIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ExtendSelectionToLineBreakIntent$Mate(
          forward: p.get('forward').build(),
          collapseSelection: p.get('collapseSelection').build(),
          collapseAtReversal: p.get('collapseAtReversal').build(),
          continuesAtWrap: p.get('continuesAtWrap').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class ExtendSelectionVerticallyToAdjacentLineIntent extends DirectionalCaretMovementIntent
class ExtendSelectionVerticallyToAdjacentLineIntent$Mate
    extends _i1.ExtendSelectionVerticallyToAdjacentLineIntent with _i2.Mate {
  /// ExtendSelectionVerticallyToAdjacentLineIntent ExtendSelectionVerticallyToAdjacentLineIntent({required bool forward, required bool collapseSelection})
  ExtendSelectionVerticallyToAdjacentLineIntent$Mate({
    /// optionalParameters: {required bool forward} , default:none
    required super.forward,

    /// optionalParameters: {required bool collapseSelection} , default:none
    required super.collapseSelection,
  })  : mateParams = {
          'forward': _i2.BuilderArg<bool>(
            name: 'forward',
            init: forward,
            isNamed: true,
          ),
          'collapseSelection': _i2.BuilderArg<bool>(
            name: 'collapseSelection',
            init: collapseSelection,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'ExtendSelectionVerticallyToAdjacentLineIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ExtendSelectionVerticallyToAdjacentLineIntent$Mate(
          forward: p.get('forward').build(),
          collapseSelection: p.get('collapseSelection').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class ExtendSelectionVerticallyToAdjacentPageIntent extends DirectionalCaretMovementIntent
class ExtendSelectionVerticallyToAdjacentPageIntent$Mate
    extends _i1.ExtendSelectionVerticallyToAdjacentPageIntent with _i2.Mate {
  /// ExtendSelectionVerticallyToAdjacentPageIntent ExtendSelectionVerticallyToAdjacentPageIntent({required bool forward, required bool collapseSelection})
  ExtendSelectionVerticallyToAdjacentPageIntent$Mate({
    /// optionalParameters: {required bool forward} , default:none
    required super.forward,

    /// optionalParameters: {required bool collapseSelection} , default:none
    required super.collapseSelection,
  })  : mateParams = {
          'forward': _i2.BuilderArg<bool>(
            name: 'forward',
            init: forward,
            isNamed: true,
          ),
          'collapseSelection': _i2.BuilderArg<bool>(
            name: 'collapseSelection',
            init: collapseSelection,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'ExtendSelectionVerticallyToAdjacentPageIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ExtendSelectionVerticallyToAdjacentPageIntent$Mate(
          forward: p.get('forward').build(),
          collapseSelection: p.get('collapseSelection').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class ExtendSelectionToNextParagraphBoundaryIntent extends DirectionalCaretMovementIntent
class ExtendSelectionToNextParagraphBoundaryIntent$Mate
    extends _i1.ExtendSelectionToNextParagraphBoundaryIntent with _i2.Mate {
  /// ExtendSelectionToNextParagraphBoundaryIntent ExtendSelectionToNextParagraphBoundaryIntent({required bool forward, required bool collapseSelection})
  ExtendSelectionToNextParagraphBoundaryIntent$Mate({
    /// optionalParameters: {required bool forward} , default:none
    required super.forward,

    /// optionalParameters: {required bool collapseSelection} , default:none
    required super.collapseSelection,
  })  : mateParams = {
          'forward': _i2.BuilderArg<bool>(
            name: 'forward',
            init: forward,
            isNamed: true,
          ),
          'collapseSelection': _i2.BuilderArg<bool>(
            name: 'collapseSelection',
            init: collapseSelection,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'ExtendSelectionToNextParagraphBoundaryIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ExtendSelectionToNextParagraphBoundaryIntent$Mate(
          forward: p.get('forward').build(),
          collapseSelection: p.get('collapseSelection').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent extends DirectionalCaretMovementIntent
class ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent$Mate
    extends _i1.ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent
    with _i2.Mate {
  /// ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent({required bool forward})
  ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent$Mate(
      {
      /// optionalParameters: {required bool forward} , default:none
      required super.forward})
      : mateParams = {
          'forward': _i2.BuilderArg<bool>(
            name: 'forward',
            init: forward,
            isNamed: true,
          )
        },
        super() {
    mateBuilderName =
        'ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) =>
        ExtendSelectionToNextParagraphBoundaryOrCaretLocationIntent$Mate(
            forward: p.get('forward').build());
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class ExtendSelectionToDocumentBoundaryIntent extends DirectionalCaretMovementIntent
class ExtendSelectionToDocumentBoundaryIntent$Mate
    extends _i1.ExtendSelectionToDocumentBoundaryIntent with _i2.Mate {
  /// ExtendSelectionToDocumentBoundaryIntent ExtendSelectionToDocumentBoundaryIntent({required bool forward, required bool collapseSelection})
  ExtendSelectionToDocumentBoundaryIntent$Mate({
    /// optionalParameters: {required bool forward} , default:none
    required super.forward,

    /// optionalParameters: {required bool collapseSelection} , default:none
    required super.collapseSelection,
  })  : mateParams = {
          'forward': _i2.BuilderArg<bool>(
            name: 'forward',
            init: forward,
            isNamed: true,
          ),
          'collapseSelection': _i2.BuilderArg<bool>(
            name: 'collapseSelection',
            init: collapseSelection,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'ExtendSelectionToDocumentBoundaryIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ExtendSelectionToDocumentBoundaryIntent$Mate(
          forward: p.get('forward').build(),
          collapseSelection: p.get('collapseSelection').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class ScrollToDocumentBoundaryIntent extends DirectionalTextEditingIntent
class ScrollToDocumentBoundaryIntent$Mate
    extends _i1.ScrollToDocumentBoundaryIntent with _i2.Mate {
  /// ScrollToDocumentBoundaryIntent ScrollToDocumentBoundaryIntent({required bool forward})
  ScrollToDocumentBoundaryIntent$Mate(
      {
      /// optionalParameters: {required bool forward} , default:none
      required super.forward})
      : mateParams = {
          'forward': _i2.BuilderArg<bool>(
            name: 'forward',
            init: forward,
            isNamed: true,
          )
        },
        super() {
    mateBuilderName = 'ScrollToDocumentBoundaryIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) =>
        ScrollToDocumentBoundaryIntent$Mate(forward: p.get('forward').build());
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class ExtendSelectionByPageIntent extends DirectionalTextEditingIntent
class ExtendSelectionByPageIntent$Mate extends _i1.ExtendSelectionByPageIntent
    with _i2.Mate {
  /// ExtendSelectionByPageIntent ExtendSelectionByPageIntent({required bool forward})
  ExtendSelectionByPageIntent$Mate(
      {
      /// optionalParameters: {required bool forward} , default:none
      required super.forward})
      : mateParams = {
          'forward': _i2.BuilderArg<bool>(
            name: 'forward',
            init: forward,
            isNamed: true,
          )
        },
        super() {
    mateBuilderName = 'ExtendSelectionByPageIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) =>
        ExtendSelectionByPageIntent$Mate(forward: p.get('forward').build());
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class SelectAllTextIntent extends Intent
class SelectAllTextIntent$Mate extends _i1.SelectAllTextIntent with _i2.Mate {
  /// SelectAllTextIntent SelectAllTextIntent(SelectionChangedCause cause)
  SelectAllTextIntent$Mate(

      /// requiredParameters: SelectionChangedCause cause
      super.cause)
      : mateParams = {
          'cause': _i2.BuilderArg<_i3.SelectionChangedCause>(
            name: 'cause',
            init: cause,
            isNamed: false,
          )
        },
        super() {
    mateBuilderName = 'SelectAllTextIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => SelectAllTextIntent$Mate(p.get('cause').value);
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class CopySelectionTextIntent extends Intent
class CopySelectionTextIntent$Mate extends _i1.CopySelectionTextIntent
    with _i2.Mate {
  /// CopySelectionTextIntent CopySelectionTextIntent.cut(SelectionChangedCause cause)
  CopySelectionTextIntent$Mate.cut(

      /// requiredParameters: SelectionChangedCause cause
      super.cause)
      : mateParams = {
          'cause': _i2.BuilderArg<_i3.SelectionChangedCause>(
            name: 'cause',
            init: cause,
            isNamed: false,
          )
        },
        super.cut() {
    mateBuilderName = 'CopySelectionTextIntent.cut';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CopySelectionTextIntent$Mate.cut(p.get('cause').value);
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class PasteTextIntent extends Intent
class PasteTextIntent$Mate extends _i1.PasteTextIntent with _i2.Mate {
  /// PasteTextIntent PasteTextIntent(SelectionChangedCause cause)
  PasteTextIntent$Mate(

      /// requiredParameters: SelectionChangedCause cause
      super.cause)
      : mateParams = {
          'cause': _i2.BuilderArg<_i3.SelectionChangedCause>(
            name: 'cause',
            init: cause,
            isNamed: false,
          )
        },
        super() {
    mateBuilderName = 'PasteTextIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => PasteTextIntent$Mate(p.get('cause').value);
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class RedoTextIntent extends Intent
class RedoTextIntent$Mate extends _i1.RedoTextIntent with _i2.Mate {
  /// RedoTextIntent RedoTextIntent(SelectionChangedCause cause)
  RedoTextIntent$Mate(

      /// requiredParameters: SelectionChangedCause cause
      super.cause)
      : mateParams = {
          'cause': _i2.BuilderArg<_i3.SelectionChangedCause>(
            name: 'cause',
            init: cause,
            isNamed: false,
          )
        },
        super() {
    mateBuilderName = 'RedoTextIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => RedoTextIntent$Mate(p.get('cause').value);
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class ReplaceTextIntent extends Intent
class ReplaceTextIntent$Mate extends _i1.ReplaceTextIntent with _i2.Mate {
  /// ReplaceTextIntent ReplaceTextIntent(TextEditingValue currentTextEditingValue, String replacementText, TextRange replacementRange, SelectionChangedCause cause)
  ReplaceTextIntent$Mate(
    /// requiredParameters: TextEditingValue currentTextEditingValue
    super.currentTextEditingValue,

    /// requiredParameters: String replacementText
    super.replacementText,

    /// requiredParameters: TextRange replacementRange
    super.replacementRange,

    /// requiredParameters: SelectionChangedCause cause
    super.cause,
  )   : mateParams = {
          'currentTextEditingValue': _i2.BuilderArg<_i3.TextEditingValue>(
            name: 'currentTextEditingValue',
            init: currentTextEditingValue,
            isNamed: false,
          ),
          'replacementText': _i2.BuilderArg<String>(
            name: 'replacementText',
            init: replacementText,
            isNamed: false,
          ),
          'replacementRange': _i2.BuilderArg<_i4.TextRange>(
            name: 'replacementRange',
            init: replacementRange,
            isNamed: false,
          ),
          'cause': _i2.BuilderArg<_i3.SelectionChangedCause>(
            name: 'cause',
            init: cause,
            isNamed: false,
          ),
        },
        super() {
    mateBuilderName = 'ReplaceTextIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ReplaceTextIntent$Mate(
          p.get('currentTextEditingValue').value,
          p.get('replacementText').value,
          p.get('replacementRange').value,
          p.get('cause').value,
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class UndoTextIntent extends Intent
class UndoTextIntent$Mate extends _i1.UndoTextIntent with _i2.Mate {
  /// UndoTextIntent UndoTextIntent(SelectionChangedCause cause)
  UndoTextIntent$Mate(

      /// requiredParameters: SelectionChangedCause cause
      super.cause)
      : mateParams = {
          'cause': _i2.BuilderArg<_i3.SelectionChangedCause>(
            name: 'cause',
            init: cause,
            isNamed: false,
          )
        },
        super() {
    mateBuilderName = 'UndoTextIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => UndoTextIntent$Mate(p.get('cause').value);
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class UpdateSelectionIntent extends Intent
class UpdateSelectionIntent$Mate extends _i1.UpdateSelectionIntent
    with _i2.Mate {
  /// UpdateSelectionIntent UpdateSelectionIntent(TextEditingValue currentTextEditingValue, TextSelection newSelection, SelectionChangedCause cause)
  UpdateSelectionIntent$Mate(
    /// requiredParameters: TextEditingValue currentTextEditingValue
    super.currentTextEditingValue,

    /// requiredParameters: TextSelection newSelection
    super.newSelection,

    /// requiredParameters: SelectionChangedCause cause
    super.cause,
  )   : mateParams = {
          'currentTextEditingValue': _i2.BuilderArg<_i3.TextEditingValue>(
            name: 'currentTextEditingValue',
            init: currentTextEditingValue,
            isNamed: false,
          ),
          'newSelection': _i2.BuilderArg<_i5.TextSelection>(
            name: 'newSelection',
            init: newSelection,
            isNamed: false,
          ),
          'cause': _i2.BuilderArg<_i3.SelectionChangedCause>(
            name: 'cause',
            init: cause,
            isNamed: false,
          ),
        },
        super() {
    mateBuilderName = 'UpdateSelectionIntent';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => UpdateSelectionIntent$Mate(
          p.get('currentTextEditingValue').value,
          p.get('newSelection').value,
          p.get('cause').value,
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
