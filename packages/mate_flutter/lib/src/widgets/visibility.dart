// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/visibility.dart' as _i1;
import 'package:note/mate_core.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/widgets/framework.dart' as _i4;

/// class Visibility extends StatelessWidget
class Visibility$Mate extends _i1.Visibility with _i2.Mate {
  /// Visibility Visibility({Key? key, required Widget child, Widget replacement = const SizedBox.shrink(), bool visible = true, bool maintainState = false, bool maintainAnimation = false, bool maintainSize = false, bool maintainSemantics = false, bool maintainInteractivity = false})
  Visibility$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required Widget child} , default:none
    required super.child,

    /// optionalParameters: {Widget replacement = const SizedBox.shrink()} , default:unprocessed=InstanceCreationExpressionImpl
    super.replacement,

    /// optionalParameters: {bool visible = true} , default:processed=BooleanLiteralImpl
    super.visible,

    /// optionalParameters: {bool maintainState = false} , default:processed=BooleanLiteralImpl
    super.maintainState,

    /// optionalParameters: {bool maintainAnimation = false} , default:processed=BooleanLiteralImpl
    super.maintainAnimation,

    /// optionalParameters: {bool maintainSize = false} , default:processed=BooleanLiteralImpl
    super.maintainSize,

    /// optionalParameters: {bool maintainSemantics = false} , default:processed=BooleanLiteralImpl
    super.maintainSemantics,

    /// optionalParameters: {bool maintainInteractivity = false} , default:processed=BooleanLiteralImpl
    super.maintainInteractivity,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i4.Widget>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
          'replacement': _i2.BuilderArg<_i4.Widget>(
            name: 'replacement',
            init: replacement,
            isNamed: true,
          ),
          'visible': _i2.BuilderArg<bool>(
            name: 'visible',
            init: visible,
            isNamed: true,
            defaultValue: true,
          ),
          'maintainState': _i2.BuilderArg<bool>(
            name: 'maintainState',
            init: maintainState,
            isNamed: true,
            defaultValue: false,
          ),
          'maintainAnimation': _i2.BuilderArg<bool>(
            name: 'maintainAnimation',
            init: maintainAnimation,
            isNamed: true,
            defaultValue: false,
          ),
          'maintainSize': _i2.BuilderArg<bool>(
            name: 'maintainSize',
            init: maintainSize,
            isNamed: true,
            defaultValue: false,
          ),
          'maintainSemantics': _i2.BuilderArg<bool>(
            name: 'maintainSemantics',
            init: maintainSemantics,
            isNamed: true,
            defaultValue: false,
          ),
          'maintainInteractivity': _i2.BuilderArg<bool>(
            name: 'maintainInteractivity',
            init: maintainInteractivity,
            isNamed: true,
            defaultValue: false,
          ),
        },
        super() {
    mateBuilderName = 'Visibility';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => Visibility$Mate(
          key: p.get('key').build(),
          child: p.get('child').build(),
          replacement: p.get('replacement').build(),
          visible: p.get('visible').build(),
          maintainState: p.get('maintainState').build(),
          maintainAnimation: p.get('maintainAnimation').build(),
          maintainSize: p.get('maintainSize').build(),
          maintainSemantics: p.get('maintainSemantics').build(),
          maintainInteractivity: p.get('maintainInteractivity').build(),
        );
  }

  /// Visibility Visibility.maintain({Key? key, required Widget child, bool visible = true})
  Visibility$Mate.maintain({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required Widget child} , default:none
    required super.child,

    /// optionalParameters: {bool visible = true} , default:processed=BooleanLiteralImpl
    super.visible,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i4.Widget>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
          'visible': _i2.BuilderArg<bool>(
            name: 'visible',
            init: visible,
            isNamed: true,
            defaultValue: true,
          ),
        },
        super.maintain() {
    mateBuilderName = 'Visibility.maintain';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => Visibility$Mate.maintain(
          key: p.get('key').build(),
          child: p.get('child').build(),
          visible: p.get('visible').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class SliverVisibility extends StatelessWidget
class SliverVisibility$Mate extends _i1.SliverVisibility with _i2.Mate {
  /// SliverVisibility SliverVisibility({Key? key, required Widget sliver, Widget replacementSliver = const SliverToBoxAdapter(), bool visible = true, bool maintainState = false, bool maintainAnimation = false, bool maintainSize = false, bool maintainSemantics = false, bool maintainInteractivity = false})
  SliverVisibility$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required Widget sliver} , default:none
    required super.sliver,

    /// optionalParameters: {Widget replacementSliver = const SliverToBoxAdapter()} , default:unprocessed=InstanceCreationExpressionImpl
    super.replacementSliver,

    /// optionalParameters: {bool visible = true} , default:processed=BooleanLiteralImpl
    super.visible,

    /// optionalParameters: {bool maintainState = false} , default:processed=BooleanLiteralImpl
    super.maintainState,

    /// optionalParameters: {bool maintainAnimation = false} , default:processed=BooleanLiteralImpl
    super.maintainAnimation,

    /// optionalParameters: {bool maintainSize = false} , default:processed=BooleanLiteralImpl
    super.maintainSize,

    /// optionalParameters: {bool maintainSemantics = false} , default:processed=BooleanLiteralImpl
    super.maintainSemantics,

    /// optionalParameters: {bool maintainInteractivity = false} , default:processed=BooleanLiteralImpl
    super.maintainInteractivity,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'sliver': _i2.BuilderArg<_i4.Widget>(
            name: 'sliver',
            init: sliver,
            isNamed: true,
          ),
          'replacementSliver': _i2.BuilderArg<_i4.Widget>(
            name: 'replacementSliver',
            init: replacementSliver,
            isNamed: true,
          ),
          'visible': _i2.BuilderArg<bool>(
            name: 'visible',
            init: visible,
            isNamed: true,
            defaultValue: true,
          ),
          'maintainState': _i2.BuilderArg<bool>(
            name: 'maintainState',
            init: maintainState,
            isNamed: true,
            defaultValue: false,
          ),
          'maintainAnimation': _i2.BuilderArg<bool>(
            name: 'maintainAnimation',
            init: maintainAnimation,
            isNamed: true,
            defaultValue: false,
          ),
          'maintainSize': _i2.BuilderArg<bool>(
            name: 'maintainSize',
            init: maintainSize,
            isNamed: true,
            defaultValue: false,
          ),
          'maintainSemantics': _i2.BuilderArg<bool>(
            name: 'maintainSemantics',
            init: maintainSemantics,
            isNamed: true,
            defaultValue: false,
          ),
          'maintainInteractivity': _i2.BuilderArg<bool>(
            name: 'maintainInteractivity',
            init: maintainInteractivity,
            isNamed: true,
            defaultValue: false,
          ),
        },
        super() {
    mateBuilderName = 'SliverVisibility';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => SliverVisibility$Mate(
          key: p.get('key').build(),
          sliver: p.get('sliver').build(),
          replacementSliver: p.get('replacementSliver').build(),
          visible: p.get('visible').build(),
          maintainState: p.get('maintainState').build(),
          maintainAnimation: p.get('maintainAnimation').build(),
          maintainSize: p.get('maintainSize').build(),
          maintainSemantics: p.get('maintainSemantics').build(),
          maintainInteractivity: p.get('maintainInteractivity').build(),
        );
  }

  /// SliverVisibility SliverVisibility.maintain({Key? key, required Widget sliver, Widget replacementSliver = const SliverToBoxAdapter(), bool visible = true})
  SliverVisibility$Mate.maintain({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required Widget sliver} , default:none
    required super.sliver,

    /// optionalParameters: {Widget replacementSliver = const SliverToBoxAdapter()} , default:unprocessed=InstanceCreationExpressionImpl
    super.replacementSliver,

    /// optionalParameters: {bool visible = true} , default:processed=BooleanLiteralImpl
    super.visible,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'sliver': _i2.BuilderArg<_i4.Widget>(
            name: 'sliver',
            init: sliver,
            isNamed: true,
          ),
          'replacementSliver': _i2.BuilderArg<_i4.Widget>(
            name: 'replacementSliver',
            init: replacementSliver,
            isNamed: true,
          ),
          'visible': _i2.BuilderArg<bool>(
            name: 'visible',
            init: visible,
            isNamed: true,
            defaultValue: true,
          ),
        },
        super.maintain() {
    mateBuilderName = 'SliverVisibility.maintain';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => SliverVisibility$Mate.maintain(
          key: p.get('key').build(),
          sliver: p.get('sliver').build(),
          replacementSliver: p.get('replacementSliver').build(),
          visible: p.get('visible').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
