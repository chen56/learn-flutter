// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/sliver_fill.dart' as _i1;
import 'package:note/mate_core.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/widgets/scroll_delegate.dart' as _i4;
import 'package:flutter/src/widgets/framework.dart' as _i5;

/// class SliverFillViewport extends StatelessWidget
class SliverFillViewport$Mate extends _i1.SliverFillViewport with _i2.Mate {
  /// SliverFillViewport SliverFillViewport({Key? key, required SliverChildDelegate delegate, double viewportFraction = 1.0, bool padEnds = true})
  SliverFillViewport$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required SliverChildDelegate delegate} , default:none
    required super.delegate,

    /// optionalParameters: {double viewportFraction = 1.0} , default:processed=DoubleLiteralImpl
    super.viewportFraction,

    /// optionalParameters: {bool padEnds = true} , default:processed=BooleanLiteralImpl
    super.padEnds,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'delegate': _i2.BuilderArg<_i4.SliverChildDelegate>(
            name: 'delegate',
            init: delegate,
            isNamed: true,
          ),
          'viewportFraction': _i2.BuilderArg<double>(
            name: 'viewportFraction',
            init: viewportFraction,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'padEnds': _i2.BuilderArg<bool>(
            name: 'padEnds',
            init: padEnds,
            isNamed: true,
            defaultValue: true,
          ),
        },
        super() {
    mateBuilderName = 'SliverFillViewport';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => SliverFillViewport$Mate(
          key: p.get('key').build(),
          delegate: p.get('delegate').build(),
          viewportFraction: p.get('viewportFraction').build(),
          padEnds: p.get('padEnds').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class SliverFillRemaining extends StatelessWidget
class SliverFillRemaining$Mate extends _i1.SliverFillRemaining with _i2.Mate {
  /// SliverFillRemaining SliverFillRemaining({Key? key, Widget? child, bool hasScrollBody = true, bool fillOverscroll = false})
  SliverFillRemaining$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {Widget? child} , default:none
    super.child,

    /// optionalParameters: {bool hasScrollBody = true} , default:processed=BooleanLiteralImpl
    super.hasScrollBody,

    /// optionalParameters: {bool fillOverscroll = false} , default:processed=BooleanLiteralImpl
    super.fillOverscroll,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i5.Widget?>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
          'hasScrollBody': _i2.BuilderArg<bool>(
            name: 'hasScrollBody',
            init: hasScrollBody,
            isNamed: true,
            defaultValue: true,
          ),
          'fillOverscroll': _i2.BuilderArg<bool>(
            name: 'fillOverscroll',
            init: fillOverscroll,
            isNamed: true,
            defaultValue: false,
          ),
        },
        super() {
    mateBuilderName = 'SliverFillRemaining';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => SliverFillRemaining$Mate(
          key: p.get('key').build(),
          child: p.get('child').build(),
          hasScrollBody: p.get('hasScrollBody').build(),
          fillOverscroll: p.get('fillOverscroll').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
