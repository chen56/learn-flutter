// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/progress_indicator_theme.dart' as _i1;
import 'package:note/mate_core.dart' as _i2;
import 'dart:ui' as _i3;
import 'package:flutter/src/foundation/key.dart' as _i4;
import 'package:flutter/src/widgets/framework.dart' as _i5;

/// class ProgressIndicatorThemeData with Diagnosticable
class ProgressIndicatorThemeData$Mate extends _i1.ProgressIndicatorThemeData
    with _i2.Mate {
  /// ProgressIndicatorThemeData ProgressIndicatorThemeData({Color? color, Color? linearTrackColor, double? linearMinHeight, Color? circularTrackColor, Color? refreshBackgroundColor})
  ProgressIndicatorThemeData$Mate({
    /// optionalParameters: {Color? color} , default:none
    super.color,

    /// optionalParameters: {Color? linearTrackColor} , default:none
    super.linearTrackColor,

    /// optionalParameters: {double? linearMinHeight} , default:none
    super.linearMinHeight,

    /// optionalParameters: {Color? circularTrackColor} , default:none
    super.circularTrackColor,

    /// optionalParameters: {Color? refreshBackgroundColor} , default:none
    super.refreshBackgroundColor,
  })  : mateParams = {
          'color': _i2.BuilderArg<_i3.Color?>(
            name: 'color',
            init: color,
            isNamed: true,
          ),
          'linearTrackColor': _i2.BuilderArg<_i3.Color?>(
            name: 'linearTrackColor',
            init: linearTrackColor,
            isNamed: true,
          ),
          'linearMinHeight': _i2.BuilderArg<double?>(
            name: 'linearMinHeight',
            init: linearMinHeight,
            isNamed: true,
          ),
          'circularTrackColor': _i2.BuilderArg<_i3.Color?>(
            name: 'circularTrackColor',
            init: circularTrackColor,
            isNamed: true,
          ),
          'refreshBackgroundColor': _i2.BuilderArg<_i3.Color?>(
            name: 'refreshBackgroundColor',
            init: refreshBackgroundColor,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'ProgressIndicatorThemeData';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => ProgressIndicatorThemeData$Mate(
          color: p.get('color').build(),
          linearTrackColor: p.get('linearTrackColor').build(),
          linearMinHeight: p.get('linearMinHeight').build(),
          circularTrackColor: p.get('circularTrackColor').build(),
          refreshBackgroundColor: p.get('refreshBackgroundColor').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class ProgressIndicatorTheme extends InheritedTheme
class ProgressIndicatorTheme$Mate extends _i1.ProgressIndicatorTheme
    with _i2.Mate {
  /// ProgressIndicatorTheme ProgressIndicatorTheme({Key? key, required ProgressIndicatorThemeData data, required Widget child})
  ProgressIndicatorTheme$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required ProgressIndicatorThemeData data} , default:none
    required super.data,

    /// optionalParameters: {required Widget child} , default:none
    required super.child,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i4.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'data': _i2.BuilderArg<_i1.ProgressIndicatorThemeData>(
            name: 'data',
            init: data,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i5.Widget>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'ProgressIndicatorTheme';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => ProgressIndicatorTheme$Mate(
          key: p.get('key').build(),
          data: p.get('data').build(),
          child: p.get('child').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
