// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/data_table_theme.dart' as _i1;
import 'package:mate/mate_core.dart' as _i2;
import 'package:flutter/src/painting/decoration.dart' as _i3;
import 'package:flutter/src/material/material_state.dart' as _i4;
import 'dart:ui' as _i5;
import 'package:flutter/src/painting/text_style.dart' as _i6;
import 'package:flutter/src/services/mouse_cursor.dart' as _i7;
import 'package:flutter/src/foundation/key.dart' as _i8;
import 'package:flutter/src/widgets/framework.dart' as _i9;

/// class DataTableThemeData with Diagnosticable
class DataTableThemeData$Mate extends _i1.DataTableThemeData with _i2.Mate {
  /// DataTableThemeData DataTableThemeData({Decoration? decoration, MaterialStateProperty<Color?>? dataRowColor, double? dataRowHeight, double? dataRowMinHeight, double? dataRowMaxHeight, TextStyle? dataTextStyle, MaterialStateProperty<Color?>? headingRowColor, double? headingRowHeight, TextStyle? headingTextStyle, double? horizontalMargin, double? columnSpacing, double? dividerThickness, double? checkboxHorizontalMargin, MaterialStateProperty<MouseCursor?>? headingCellCursor, MaterialStateProperty<MouseCursor?>? dataRowCursor})
  DataTableThemeData$Mate({
    /// optionalParameters: {Decoration? decoration} , default:none
    super.decoration,

    /// optionalParameters: {MaterialStateProperty<Color?>? dataRowColor} , default:none
    super.dataRowColor,

    /// optionalParameters: {double? dataRowMinHeight} , default:none
    super.dataRowMinHeight,

    /// optionalParameters: {double? dataRowMaxHeight} , default:none
    super.dataRowMaxHeight,

    /// optionalParameters: {TextStyle? dataTextStyle} , default:none
    super.dataTextStyle,

    /// optionalParameters: {MaterialStateProperty<Color?>? headingRowColor} , default:none
    super.headingRowColor,

    /// optionalParameters: {double? headingRowHeight} , default:none
    super.headingRowHeight,

    /// optionalParameters: {TextStyle? headingTextStyle} , default:none
    super.headingTextStyle,

    /// optionalParameters: {double? horizontalMargin} , default:none
    super.horizontalMargin,

    /// optionalParameters: {double? columnSpacing} , default:none
    super.columnSpacing,

    /// optionalParameters: {double? dividerThickness} , default:none
    super.dividerThickness,

    /// optionalParameters: {double? checkboxHorizontalMargin} , default:none
    super.checkboxHorizontalMargin,

    /// optionalParameters: {MaterialStateProperty<MouseCursor?>? headingCellCursor} , default:none
    super.headingCellCursor,

    /// optionalParameters: {MaterialStateProperty<MouseCursor?>? dataRowCursor} , default:none
    super.dataRowCursor,
  })  : mateParams = {
          'decoration': _i2.BuilderArg<_i3.Decoration?>(
            name: 'decoration',
            init: decoration,
            isNamed: true,
          ),
          'dataRowColor':
              _i2.BuilderArg<_i4.MaterialStateProperty<_i5.Color?>?>(
            name: 'dataRowColor',
            init: dataRowColor,
            isNamed: true,
          ),
          'dataRowMinHeight': _i2.BuilderArg<double?>(
            name: 'dataRowMinHeight',
            init: dataRowMinHeight,
            isNamed: true,
          ),
          'dataRowMaxHeight': _i2.BuilderArg<double?>(
            name: 'dataRowMaxHeight',
            init: dataRowMaxHeight,
            isNamed: true,
          ),
          'dataTextStyle': _i2.BuilderArg<_i6.TextStyle?>(
            name: 'dataTextStyle',
            init: dataTextStyle,
            isNamed: true,
          ),
          'headingRowColor':
              _i2.BuilderArg<_i4.MaterialStateProperty<_i5.Color?>?>(
            name: 'headingRowColor',
            init: headingRowColor,
            isNamed: true,
          ),
          'headingRowHeight': _i2.BuilderArg<double?>(
            name: 'headingRowHeight',
            init: headingRowHeight,
            isNamed: true,
          ),
          'headingTextStyle': _i2.BuilderArg<_i6.TextStyle?>(
            name: 'headingTextStyle',
            init: headingTextStyle,
            isNamed: true,
          ),
          'horizontalMargin': _i2.BuilderArg<double?>(
            name: 'horizontalMargin',
            init: horizontalMargin,
            isNamed: true,
          ),
          'columnSpacing': _i2.BuilderArg<double?>(
            name: 'columnSpacing',
            init: columnSpacing,
            isNamed: true,
          ),
          'dividerThickness': _i2.BuilderArg<double?>(
            name: 'dividerThickness',
            init: dividerThickness,
            isNamed: true,
          ),
          'checkboxHorizontalMargin': _i2.BuilderArg<double?>(
            name: 'checkboxHorizontalMargin',
            init: checkboxHorizontalMargin,
            isNamed: true,
          ),
          'headingCellCursor':
              _i2.BuilderArg<_i4.MaterialStateProperty<_i7.MouseCursor?>?>(
            name: 'headingCellCursor',
            init: headingCellCursor,
            isNamed: true,
          ),
          'dataRowCursor':
              _i2.BuilderArg<_i4.MaterialStateProperty<_i7.MouseCursor?>?>(
            name: 'dataRowCursor',
            init: dataRowCursor,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'DataTableThemeData';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => DataTableThemeData$Mate(
          decoration: p.get('decoration').build(),
          dataRowColor: p.get('dataRowColor').build(),
          dataRowMinHeight: p.get('dataRowMinHeight').build(),
          dataRowMaxHeight: p.get('dataRowMaxHeight').build(),
          dataTextStyle: p.get('dataTextStyle').build(),
          headingRowColor: p.get('headingRowColor').build(),
          headingRowHeight: p.get('headingRowHeight').build(),
          headingTextStyle: p.get('headingTextStyle').build(),
          horizontalMargin: p.get('horizontalMargin').build(),
          columnSpacing: p.get('columnSpacing').build(),
          dividerThickness: p.get('dividerThickness').build(),
          checkboxHorizontalMargin: p.get('checkboxHorizontalMargin').build(),
          headingCellCursor: p.get('headingCellCursor').build(),
          dataRowCursor: p.get('dataRowCursor').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class DataTableTheme extends InheritedWidget
class DataTableTheme$Mate extends _i1.DataTableTheme with _i2.Mate {
  /// DataTableTheme DataTableTheme({Key? key, required DataTableThemeData data, required Widget child})
  DataTableTheme$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required DataTableThemeData data} , default:none
    required super.data,

    /// optionalParameters: {required Widget child} , default:none
    required super.child,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i8.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'data': _i2.BuilderArg<_i1.DataTableThemeData>(
            name: 'data',
            init: data,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i9.Widget>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'DataTableTheme';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => DataTableTheme$Mate(
          key: p.get('key').build(),
          data: p.get('data').build(),
          child: p.get('child').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
