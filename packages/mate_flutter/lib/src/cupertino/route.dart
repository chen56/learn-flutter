// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/cupertino/route.dart' as _i1;
import 'package:note/mate_core.dart' as _i2;
import 'package:flutter/src/widgets/framework.dart' as _i3;
import 'package:flutter/src/widgets/navigator.dart' as _i4;
import 'package:flutter/src/foundation/key.dart' as _i5;
import 'package:flutter/src/animation/animation.dart' as _i6;
import 'dart:ui' as _i7;
import 'package:flutter/src/widgets/routes.dart' as _i8;

/// class CupertinoPageRoute<T> extends PageRoute<T> with CupertinoRouteTransitionMixin<T>
class CupertinoPageRoute$Mate<T> extends _i1.CupertinoPageRoute<T>
    with _i2.Mate {
  /// CupertinoPageRoute<T> CupertinoPageRoute({required Widget Function(BuildContext) builder, String? title, RouteSettings? settings, bool maintainState = true, bool fullscreenDialog = false, bool allowSnapshotting = true})
  CupertinoPageRoute$Mate({
    /// optionalParameters: {required Widget Function(BuildContext) builder} , default:none
    required super.builder,

    /// optionalParameters: {String? title} , default:none
    super.title,

    /// optionalParameters: {RouteSettings? settings} , default:none
    super.settings,

    /// optionalParameters: {bool maintainState = true} , default:processed=BooleanLiteralImpl
    super.maintainState,

    /// optionalParameters: {bool fullscreenDialog = false} , default:processed=BooleanLiteralImpl
    super.fullscreenDialog,

    /// optionalParameters: {bool allowSnapshotting = true} , default:processed=BooleanLiteralImpl
    super.allowSnapshotting,
  })  : mateParams = {
          'builder': _i2.BuilderArg<_i3.WidgetBuilder>(
            name: 'builder',
            init: builder,
            isNamed: true,
          ),
          'title': _i2.BuilderArg<String?>(
            name: 'title',
            init: title,
            isNamed: true,
          ),
          'settings': _i2.BuilderArg<_i4.RouteSettings?>(
            name: 'settings',
            init: settings,
            isNamed: true,
          ),
          'maintainState': _i2.BuilderArg<bool>(
            name: 'maintainState',
            init: maintainState,
            isNamed: true,
            defaultValue: true,
          ),
          'fullscreenDialog': _i2.BuilderArg<bool>(
            name: 'fullscreenDialog',
            init: fullscreenDialog,
            isNamed: true,
            defaultValue: false,
          ),
          'allowSnapshotting': _i2.BuilderArg<bool>(
            name: 'allowSnapshotting',
            init: allowSnapshotting,
            isNamed: true,
            defaultValue: true,
          ),
        },
        super() {
    mateBuilderName = 'CupertinoPageRoute';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoPageRoute$Mate<T>(
          builder: p.get('builder').build(),
          title: p.get('title').build(),
          settings: p.get('settings').build(),
          maintainState: p.get('maintainState').build(),
          fullscreenDialog: p.get('fullscreenDialog').build(),
          allowSnapshotting: p.get('allowSnapshotting').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class CupertinoPage<T> extends Page<T>
class CupertinoPage$Mate<T> extends _i1.CupertinoPage<T> with _i2.Mate {
  /// CupertinoPage<T> CupertinoPage({required Widget child, bool maintainState = true, String? title, bool fullscreenDialog = false, bool allowSnapshotting = true, LocalKey? key, String? name, Object? arguments, String? restorationId})
  CupertinoPage$Mate({
    /// optionalParameters: {required Widget child} , default:none
    required super.child,

    /// optionalParameters: {bool maintainState = true} , default:processed=BooleanLiteralImpl
    super.maintainState,

    /// optionalParameters: {String? title} , default:none
    super.title,

    /// optionalParameters: {bool fullscreenDialog = false} , default:processed=BooleanLiteralImpl
    super.fullscreenDialog,

    /// optionalParameters: {bool allowSnapshotting = true} , default:processed=BooleanLiteralImpl
    super.allowSnapshotting,

    /// optionalParameters: {LocalKey? key} , default:none
    super.key,

    /// optionalParameters: {String? name} , default:none
    super.name,

    /// optionalParameters: {Object? arguments} , default:none
    super.arguments,

    /// optionalParameters: {String? restorationId} , default:none
    super.restorationId,
  })  : mateParams = {
          'child': _i2.BuilderArg<_i3.Widget>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
          'maintainState': _i2.BuilderArg<bool>(
            name: 'maintainState',
            init: maintainState,
            isNamed: true,
            defaultValue: true,
          ),
          'title': _i2.BuilderArg<String?>(
            name: 'title',
            init: title,
            isNamed: true,
          ),
          'fullscreenDialog': _i2.BuilderArg<bool>(
            name: 'fullscreenDialog',
            init: fullscreenDialog,
            isNamed: true,
            defaultValue: false,
          ),
          'allowSnapshotting': _i2.BuilderArg<bool>(
            name: 'allowSnapshotting',
            init: allowSnapshotting,
            isNamed: true,
            defaultValue: true,
          ),
          'key': _i2.BuilderArg<_i5.LocalKey?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'name': _i2.BuilderArg<String?>(
            name: 'name',
            init: name,
            isNamed: true,
          ),
          'arguments': _i2.BuilderArg<Object?>(
            name: 'arguments',
            init: arguments,
            isNamed: true,
          ),
          'restorationId': _i2.BuilderArg<String?>(
            name: 'restorationId',
            init: restorationId,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'CupertinoPage';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoPage$Mate<T>(
          child: p.get('child').build(),
          maintainState: p.get('maintainState').build(),
          title: p.get('title').build(),
          fullscreenDialog: p.get('fullscreenDialog').build(),
          allowSnapshotting: p.get('allowSnapshotting').build(),
          key: p.get('key').build(),
          name: p.get('name').build(),
          arguments: p.get('arguments').build(),
          restorationId: p.get('restorationId').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class CupertinoPageTransition extends StatelessWidget
class CupertinoPageTransition$Mate extends _i1.CupertinoPageTransition
    with _i2.Mate {
  /// CupertinoPageTransition CupertinoPageTransition({Key? key, required Animation<double> primaryRouteAnimation, required Animation<double> secondaryRouteAnimation, required Widget child, required bool linearTransition})
  CupertinoPageTransition$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required Animation<double> primaryRouteAnimation} , default:none
    required super.primaryRouteAnimation,

    /// optionalParameters: {required Animation<double> secondaryRouteAnimation} , default:none
    required super.secondaryRouteAnimation,

    /// optionalParameters: {required Widget child} , default:none
    required super.child,

    /// optionalParameters: {required bool linearTransition} , default:none
    required super.linearTransition,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i5.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'primaryRouteAnimation': _i2.BuilderArg<_i6.Animation<double>>(
            name: 'primaryRouteAnimation',
            init: primaryRouteAnimation,
            isNamed: true,
          ),
          'secondaryRouteAnimation': _i2.BuilderArg<_i6.Animation<double>>(
            name: 'secondaryRouteAnimation',
            init: secondaryRouteAnimation,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i3.Widget>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
          'linearTransition': _i2.BuilderArg<bool>(
            name: 'linearTransition',
            init: linearTransition,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'CupertinoPageTransition';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoPageTransition$Mate(
          key: p.get('key').build(),
          primaryRouteAnimation: p.get('primaryRouteAnimation').build(),
          secondaryRouteAnimation: p.get('secondaryRouteAnimation').build(),
          child: p.get('child').build(),
          linearTransition: p.get('linearTransition').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class CupertinoFullscreenDialogTransition extends StatelessWidget
class CupertinoFullscreenDialogTransition$Mate
    extends _i1.CupertinoFullscreenDialogTransition with _i2.Mate {
  /// CupertinoFullscreenDialogTransition CupertinoFullscreenDialogTransition({Key? key, required Animation<double> primaryRouteAnimation, required Animation<double> secondaryRouteAnimation, required Widget child, required bool linearTransition})
  CupertinoFullscreenDialogTransition$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required Animation<double> primaryRouteAnimation} , default:none
    required super.primaryRouteAnimation,

    /// optionalParameters: {required Animation<double> secondaryRouteAnimation} , default:none
    required super.secondaryRouteAnimation,

    /// optionalParameters: {required Widget child} , default:none
    required super.child,

    /// optionalParameters: {required bool linearTransition} , default:none
    required super.linearTransition,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i5.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'primaryRouteAnimation': _i2.BuilderArg<_i6.Animation<double>>(
            name: 'primaryRouteAnimation',
            init: primaryRouteAnimation,
            isNamed: true,
          ),
          'secondaryRouteAnimation': _i2.BuilderArg<_i6.Animation<double>>(
            name: 'secondaryRouteAnimation',
            init: secondaryRouteAnimation,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i3.Widget>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
          'linearTransition': _i2.BuilderArg<bool>(
            name: 'linearTransition',
            init: linearTransition,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'CupertinoFullscreenDialogTransition';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoFullscreenDialogTransition$Mate(
          key: p.get('key').build(),
          primaryRouteAnimation: p.get('primaryRouteAnimation').build(),
          secondaryRouteAnimation: p.get('secondaryRouteAnimation').build(),
          child: p.get('child').build(),
          linearTransition: p.get('linearTransition').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class CupertinoModalPopupRoute<T> extends PopupRoute<T>
class CupertinoModalPopupRoute$Mate<T> extends _i1.CupertinoModalPopupRoute<T>
    with _i2.Mate {
  /// CupertinoModalPopupRoute<T> CupertinoModalPopupRoute({required Widget Function(BuildContext) builder, String barrierLabel = 'Dismiss', Color? barrierColor = kCupertinoModalBarrierColor, bool barrierDismissible = true, bool semanticsDismissible = false, ImageFilter? filter, RouteSettings? settings, Offset? anchorPoint})
  CupertinoModalPopupRoute$Mate({
    /// optionalParameters: {required Widget Function(BuildContext) builder} , default:none
    required super.builder,

    /// optionalParameters: {String barrierLabel = 'Dismiss'} , default:processed=SimpleStringLiteralImpl
    super.barrierLabel,

    /// optionalParameters: {Color? barrierColor = kCupertinoModalBarrierColor} , default:unprocessed=SimpleIdentifierImpl
    super.barrierColor,

    /// optionalParameters: {bool barrierDismissible = true} , default:processed=BooleanLiteralImpl
    super.barrierDismissible,

    /// optionalParameters: {bool semanticsDismissible = false} , default:processed=BooleanLiteralImpl
    super.semanticsDismissible,

    /// optionalParameters: {ImageFilter? filter} , default:none
    super.filter,

    /// optionalParameters: {RouteSettings? settings} , default:none
    super.settings,

    /// optionalParameters: {Offset? anchorPoint} , default:none
    super.anchorPoint,
  })  : mateParams = {
          'builder': _i2.BuilderArg<_i3.WidgetBuilder>(
            name: 'builder',
            init: builder,
            isNamed: true,
          ),
          'barrierLabel': _i2.BuilderArg<String>(
            name: 'barrierLabel',
            init: barrierLabel,
            isNamed: true,
            defaultValue: 'Dismiss',
          ),
          'barrierColor': _i2.BuilderArg<_i7.Color?>(
            name: 'barrierColor',
            init: barrierColor,
            isNamed: true,
          ),
          'barrierDismissible': _i2.BuilderArg<bool>(
            name: 'barrierDismissible',
            init: barrierDismissible,
            isNamed: true,
            defaultValue: true,
          ),
          'semanticsDismissible': _i2.BuilderArg<bool>(
            name: 'semanticsDismissible',
            init: semanticsDismissible,
            isNamed: true,
            defaultValue: false,
          ),
          'filter': _i2.BuilderArg<_i7.ImageFilter?>(
            name: 'filter',
            init: filter,
            isNamed: true,
          ),
          'settings': _i2.BuilderArg<_i4.RouteSettings?>(
            name: 'settings',
            init: settings,
            isNamed: true,
          ),
          'anchorPoint': _i2.BuilderArg<_i7.Offset?>(
            name: 'anchorPoint',
            init: anchorPoint,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'CupertinoModalPopupRoute';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoModalPopupRoute$Mate<T>(
          builder: p.get('builder').build(),
          barrierLabel: p.get('barrierLabel').build(),
          barrierColor: p.get('barrierColor').build(),
          barrierDismissible: p.get('barrierDismissible').build(),
          semanticsDismissible: p.get('semanticsDismissible').build(),
          filter: p.get('filter').build(),
          settings: p.get('settings').build(),
          anchorPoint: p.get('anchorPoint').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class CupertinoDialogRoute<T> extends RawDialogRoute<T>
class CupertinoDialogRoute$Mate<T> extends _i1.CupertinoDialogRoute<T>
    with _i2.Mate {
  /// CupertinoDialogRoute<T> CupertinoDialogRoute({required Widget Function(BuildContext) builder, required BuildContext context, bool barrierDismissible = true, Color? barrierColor, String? barrierLabel, Duration transitionDuration = const Duration(milliseconds: 250), Widget Function(BuildContext, Animation<double>, Animation<double>, Widget)? transitionBuilder = _buildCupertinoDialogTransitions, RouteSettings? settings, Offset? anchorPoint})
  CupertinoDialogRoute$Mate({
    /// optionalParameters: {required Widget Function(BuildContext) builder} , default:none
    required super.builder,

    /// optionalParameters: {required BuildContext context} , default:none
    required super.context,

    /// optionalParameters: {bool barrierDismissible = true} , default:processed=BooleanLiteralImpl
    super.barrierDismissible,

    /// optionalParameters: {Color? barrierColor} , default:none
    super.barrierColor,

    /// optionalParameters: {String? barrierLabel} , default:none
    super.barrierLabel,

    /// optionalParameters: {Duration transitionDuration = const Duration(milliseconds: 250)} , default:unprocessed=InstanceCreationExpressionImpl
    super.transitionDuration,

    /// optionalParameters: {Widget Function(BuildContext, Animation<double>, Animation<double>, Widget)? transitionBuilder = _buildCupertinoDialogTransitions} , default:unprocessed=SimpleIdentifierImpl
    super.transitionBuilder,

    /// optionalParameters: {RouteSettings? settings} , default:none
    super.settings,

    /// optionalParameters: {Offset? anchorPoint} , default:none
    super.anchorPoint,
  })  : mateParams = {
          'builder': _i2.BuilderArg<_i3.WidgetBuilder>(
            name: 'builder',
            init: builder,
            isNamed: true,
          ),
          'context': _i2.BuilderArg<_i3.BuildContext>(
            name: 'context',
            init: context,
            isNamed: true,
          ),
          'barrierDismissible': _i2.BuilderArg<bool>(
            name: 'barrierDismissible',
            init: barrierDismissible,
            isNamed: true,
            defaultValue: true,
          ),
          'barrierColor': _i2.BuilderArg<_i7.Color?>(
            name: 'barrierColor',
            init: barrierColor,
            isNamed: true,
          ),
          'barrierLabel': _i2.BuilderArg<String?>(
            name: 'barrierLabel',
            init: barrierLabel,
            isNamed: true,
          ),
          'transitionDuration': _i2.BuilderArg<Duration>(
            name: 'transitionDuration',
            init: transitionDuration,
            isNamed: true,
          ),
          'transitionBuilder': _i2.BuilderArg<_i8.RouteTransitionsBuilder?>(
            name: 'transitionBuilder',
            init: transitionBuilder,
            isNamed: true,
          ),
          'settings': _i2.BuilderArg<_i4.RouteSettings?>(
            name: 'settings',
            init: settings,
            isNamed: true,
          ),
          'anchorPoint': _i2.BuilderArg<_i7.Offset?>(
            name: 'anchorPoint',
            init: anchorPoint,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'CupertinoDialogRoute';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoDialogRoute$Mate<T>(
          builder: p.get('builder').build(),
          context: p.get('context').build(),
          barrierDismissible: p.get('barrierDismissible').build(),
          barrierColor: p.get('barrierColor').build(),
          barrierLabel: p.get('barrierLabel').build(),
          transitionDuration: p.get('transitionDuration').build(),
          transitionBuilder: p.get('transitionBuilder').build(),
          settings: p.get('settings').build(),
          anchorPoint: p.get('anchorPoint').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
