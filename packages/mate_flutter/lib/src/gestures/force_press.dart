// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/gestures/force_press.dart' as _i1;
import 'package:note/mate_core.dart' as _i2;
import 'dart:ui' as _i3;
import 'package:flutter/src/gestures/recognizer.dart' as _i4;

/// class ForcePressDetails
class ForcePressDetails$Mate extends _i1.ForcePressDetails with _i2.Mate {
  /// ForcePressDetails ForcePressDetails({required Offset globalPosition, Offset? localPosition, required double pressure})
  ForcePressDetails$Mate({
    /// optionalParameters: {required Offset globalPosition} , default:none
    required super.globalPosition,

    /// optionalParameters: {Offset? localPosition} , default:none
    super.localPosition,

    /// optionalParameters: {required double pressure} , default:none
    required super.pressure,
  })  : mateParams = {
          'globalPosition': _i2.BuilderArg<_i3.Offset>(
            name: 'globalPosition',
            init: globalPosition,
            isNamed: true,
          ),
          'localPosition': _i2.BuilderArg<_i3.Offset?>(
            name: 'localPosition',
            init: localPosition,
            isNamed: true,
          ),
          'pressure': _i2.BuilderArg<double>(
            name: 'pressure',
            init: pressure,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'ForcePressDetails';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ForcePressDetails$Mate(
          globalPosition: p.get('globalPosition').build(),
          localPosition: p.get('localPosition').build(),
          pressure: p.get('pressure').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class ForcePressGestureRecognizer extends OneSequenceGestureRecognizer
class ForcePressGestureRecognizer$Mate extends _i1.ForcePressGestureRecognizer
    with _i2.Mate {
  /// ForcePressGestureRecognizer ForcePressGestureRecognizer({double startPressure = 0.4, double peakPressure = 0.85, double Function(double, double, double) interpolation = _inverseLerp, Object? debugOwner, Set<PointerDeviceKind>? supportedDevices, bool Function(int)? allowedButtonsFilter})
  ForcePressGestureRecognizer$Mate({
    /// optionalParameters: {double startPressure = 0.4} , default:processed=DoubleLiteralImpl
    super.startPressure,

    /// optionalParameters: {double peakPressure = 0.85} , default:processed=DoubleLiteralImpl
    super.peakPressure,

    /// optionalParameters: {double Function(double, double, double) interpolation = _inverseLerp} , default:unprocessed=SimpleIdentifierImpl
    super.interpolation,

    /// optionalParameters: {Object? debugOwner} , default:none
    super.debugOwner,

    /// optionalParameters: {Set<PointerDeviceKind>? supportedDevices} , default:none
    super.supportedDevices,

    /// optionalParameters: {bool Function(int)? allowedButtonsFilter} , default:none
    super.allowedButtonsFilter,
  })  : mateParams = {
          'startPressure': _i2.BuilderArg<double>(
            name: 'startPressure',
            init: startPressure,
            isNamed: true,
            defaultValue: 0.4,
          ),
          'peakPressure': _i2.BuilderArg<double>(
            name: 'peakPressure',
            init: peakPressure,
            isNamed: true,
            defaultValue: 0.85,
          ),
          'interpolation': _i2.BuilderArg<_i1.GestureForceInterpolation>(
            name: 'interpolation',
            init: interpolation,
            isNamed: true,
          ),
          'debugOwner': _i2.BuilderArg<Object?>(
            name: 'debugOwner',
            init: debugOwner,
            isNamed: true,
          ),
          'supportedDevices': _i2.BuilderArg<Set<_i3.PointerDeviceKind>?>(
            name: 'supportedDevices',
            init: supportedDevices,
            isNamed: true,
          ),
          'allowedButtonsFilter': _i2.BuilderArg<_i4.AllowedButtonsFilter?>(
            name: 'allowedButtonsFilter',
            init: allowedButtonsFilter,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'ForcePressGestureRecognizer';
    matePackageUrl = 'package:flutter/gestures.dart';
    mateBuilder = (p) => ForcePressGestureRecognizer$Mate(
          startPressure: p.get('startPressure').build(),
          peakPressure: p.get('peakPressure').build(),
          interpolation: p.get('interpolation').build(),
          debugOwner: p.get('debugOwner').build(),
          supportedDevices: p.get('supportedDevices').build(),
          allowedButtonsFilter: p.get('allowedButtonsFilter').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
