#!/usr/bin/env bash

########################################################
# 范例：示范父子命令
# 运行 ./bake -h 查看本文件的效果和帮助
########################################################


########################################################
# 本节为模版代码，每个copy一下即可，主要是自动下载bake.bash依赖
########################################################


# 模版脚本，用来获取本脚本的realpath
# 我在我的所有脚本头都会放这个函数，方便得到真正的当前脚本目录
# On Mac OS, readlink -f doesn't work, so use._real_path get the real path of the file
_real_path() (
  cd "$(dirname "$1")" || exit 200
  declare file
  file="$PWD/$(basename "$1")"
  while [[ -L "$file" ]]; do
    file="$(readlink "$file")"
    cd -P "$(dirname "$file")" || exit 200
    file="$PWD/$(basename "$file")"
  done
  echo "$file"
)

SCRIPT_PATH="$(_real_path "${BASH_SOURCE[0]}")"
SCRIPT_DIR="$(dirname "$SCRIPT_PATH")"

# 脚本动态安装bake.bash依赖到: vendor/bake.bash
_install_bake(){
  mkdir -p "$SCRIPT_DIR/vendor"
  echo "$SCRIPT_PATH -> _install_bake ▶︎【curl -o $SCRIPT_DIR/bake.bash https://github.com/chen56/you/raw/main/packages/you_bake/bake.bash】"
  curl -L -o  "$SCRIPT_DIR/vendor/bake.bash" https://github.com/chen56/you/raw/main/packages/you_bake/bake.bash ;
}
if ! [[ -f "$SCRIPT_DIR/vendor/bake.bash" ]]; then
  _install_bake
fi

# include common script
source "$SCRIPT_DIR/vendor/bake.bash"


##########################################
# app cmd script
# 应用的命令脚本
##########################################

install(){         _install_bake ; }
clean(){           echo "clean project"; }
dev(){             echo "run dev mode"; }
preview(){         echo "run preview mode"; }
test(){            echo "test project"; }

# 更深层的子命令: `./bake build -h` , `./bake build all`
build.all(){       echo "build all"; }
build.macos(){     echo "build macos package"; }
build.web(){       echo "build web package"; }
build.android(){   echo "build android package"; }
build.ios(){       echo "build ios package"; }


####################################################
# bake entry
####################################################
bake.go "$@"
