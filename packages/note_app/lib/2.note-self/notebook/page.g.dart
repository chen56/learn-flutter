// /// Generated by gen_maters.dart, please don't edit!

// ignore: always_use_package_imports
import 'page.dart';

final noteInfo = (
  /// you need define page variable in page.dart
  /// it is use to register page meta info
  meta: page,
  cells: [
    /// ()
    (
      cellType: 'header',
      offset: 0,
      end: 481,
      statementCount: 0,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(r''' # Notebook)
    (
      cellType: 'body',
      offset: 481,
      end: 631,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print("hello flutter-note , i , print("today is ${DateTime.now)
    (
      cellType: 'body',
      offset: 709,
      end: 797,
      statementCount: 2,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(r''' notebook的方)
    (
      cellType: 'body',
      offset: 875,
      end: 1062,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print(ToggleButtons(isSelected)
    (
      cellType: 'body',
      offset: 1140,
      end: 1318,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(r''' 或者，发现[Time)
    (
      cellType: 'body',
      offset: 1396,
      end: 1538,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (ValueNotifier<int> times = Val, int maxTimes = 600;, var random = Random(1);, Timer.periodic(const Duration(, print(ListenableBuilder(listen)
    (
      cellType: 'body',
      offset: 1616,
      end: 2343,
      statementCount: 5,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(""" notebook模式的)
    (
      cellType: 'body',
      offset: 2421,
      end: 2801,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print(ObjectContent("hello"));, print("hello");)
    (
      cellType: 'body',
      offset: 2879,
      end: 2991,
      statementCount: 2,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(""" ### Markdow)
    (
      cellType: 'body',
      offset: 3069,
      end: 3172,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print(MarkdownContent("""hello, print.markdown("""hello 形式2""")
    (
      cellType: 'body',
      offset: 3250,
      end: 3356,
      statementCount: 2,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(""" ### WidgetC)
    (
      cellType: 'body',
      offset: 3434,
      end: 3484,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print(WidgetContent(Container(, print(Container(width: 100, he)
    (
      cellType: 'body',
      offset: 3562,
      end: 3777,
      statementCount: 2,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(""" ### SampleC)
    (
      cellType: 'body',
      offset: 3855,
      end: 4098,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print(MateSample(Container$Mat, print(Container$Mate(width: 10)
    (
      cellType: 'body',
      offset: 4176,
      end: 4396,
      statementCount: 2,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[
        (
          nodeType: 'MateSample.new.firstParentStatement',
          offset: 4189,
          end: 4281,
        )
      ],
    ),

    /// (print.markdown(""" ## 事件回调的问题 )
    (
      cellType: 'body',
      offset: 4474,
      end: 4572,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// ({int count = 0; print(Elevated)
    (
      cellType: 'body',
      offset: 4650,
      end: 4864,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(""" 问题原因：onPres)
    (
      cellType: 'body',
      offset: 4942,
      end: 5220,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (int i = 0;, print(StatefulBuilder(builder:)
    (
      cellType: 'body',
      offset: 5298,
      end: 5507,
      statementCount: 2,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(""" ### 处理方案2  )
    (
      cellType: 'body',
      offset: 5585,
      end: 5666,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// ((NoteCell print) {int i = 0; p)
    (
      cellType: 'body',
      offset: 5744,
      end: 5967,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(""" 或用runInCurr)
    (
      cellType: 'body',
      offset: 6045,
      end: 6134,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.runInCurrentCell((NoteCe)
    (
      cellType: 'body',
      offset: 6212,
      end: 6436,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[
        (
          nodeType: 'Pen.runInCurrentCell',
          offset: 6215,
          end: 6432,
        )
      ],
    ),

    /// (print.markdown(""" ## cell的元信息)
    (
      cellType: 'body',
      offset: 6514,
      end: 6557,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print("源文件中当前cell的index：${prin, print("源文件中当前cell的起始字符位置：${pri, print("源文件中当前cell的结束字符位置：${pri, print("源文件中当前cell的代码块：${print.)
    (
      cellType: 'body',
      offset: 6635,
      end: 6911,
      statementCount: 4,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(""" ## 结束  上面回调)
    (
      cellType: 'body',
      offset: 6989,
      end: 7061,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// ()
    (
      cellType: 'tail',
      offset: 7061,
      end: 7063,
      statementCount: 0,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    )
  ],
  encodedCode:
      ""
);
