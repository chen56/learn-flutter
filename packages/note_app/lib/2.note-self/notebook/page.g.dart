// /// Generated by gen_maters.dart, please don't edit!

// ignore: always_use_package_imports
import 'page.dart';

final noteInfo = (
  /// you need define page variable in page.dart
  /// it is use to register page meta info
  meta: page,
  cells: [
    /// ()
    (
      cellType: 'header',
      offset: 0,
      end: 426,
      statementCount: 0,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(r''' # Notebook)
    (
      cellType: 'body',
      offset: 426,
      end: 576,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print("hello flutter-note , i , print("today is ${DateTime.now)
    (
      cellType: 'body',
      offset: 654,
      end: 742,
      statementCount: 2,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(r''' notebook的方)
    (
      cellType: 'body',
      offset: 820,
      end: 1007,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print(ToggleButtons(isSelected)
    (
      cellType: 'body',
      offset: 1085,
      end: 1263,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(r''' 或者，发现[Time)
    (
      cellType: 'body',
      offset: 1341,
      end: 1483,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (ValueNotifier<int> times = Val, int maxTimes = 600;, var random = Random(1);, Timer.periodic(const Duration(, print(ListenableBuilder(listen)
    (
      cellType: 'body',
      offset: 1561,
      end: 2288,
      statementCount: 5,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(""" notebook模式的)
    (
      cellType: 'body',
      offset: 2366,
      end: 2746,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print(ObjectContent("hello"));, print("hello");)
    (
      cellType: 'body',
      offset: 2824,
      end: 2936,
      statementCount: 2,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(""" ### Markdow)
    (
      cellType: 'body',
      offset: 3014,
      end: 3117,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print(MarkdownContent("""hello, print.markdown("""hello 形式2""")
    (
      cellType: 'body',
      offset: 3195,
      end: 3301,
      statementCount: 2,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(""" ### WidgetC)
    (
      cellType: 'body',
      offset: 3379,
      end: 3429,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print(WidgetContent(Container(, print(Container(width: 100, he)
    (
      cellType: 'body',
      offset: 3507,
      end: 3722,
      statementCount: 2,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(""" ### SampleC)
    (
      cellType: 'body',
      offset: 3800,
      end: 4043,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print(MateSample(Container$Mat, print(Container$Mate(width: 10)
    (
      cellType: 'body',
      offset: 4121,
      end: 4341,
      statementCount: 2,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[
        (
          nodeType: 'MateSample.new.firstParentStatement',
          offset: 4134,
          end: 4226,
        )
      ],
    ),

    /// (print.markdown(""" ## 事件回调的问题 )
    (
      cellType: 'body',
      offset: 4419,
      end: 4517,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// ({int count = 0; print(Elevated)
    (
      cellType: 'body',
      offset: 4595,
      end: 4809,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(""" 问题原因：onPres)
    (
      cellType: 'body',
      offset: 4887,
      end: 5165,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (int i = 0;, print(StatefulBuilder(builder:)
    (
      cellType: 'body',
      offset: 5243,
      end: 5452,
      statementCount: 2,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(""" ### 处理方案2  )
    (
      cellType: 'body',
      offset: 5530,
      end: 5611,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// ((NoteCell print) {int i = 0; p)
    (
      cellType: 'body',
      offset: 5689,
      end: 5912,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(""" 或用runInCurr)
    (
      cellType: 'body',
      offset: 5990,
      end: 6079,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.runInCurrentCell((NoteCe)
    (
      cellType: 'body',
      offset: 6157,
      end: 6381,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[
        (
          nodeType: 'Pen.runInCurrentCell',
          offset: 6160,
          end: 6377,
        )
      ],
    ),

    /// (print.markdown(""" ## cell的元信息)
    (
      cellType: 'body',
      offset: 6459,
      end: 6502,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print("源文件中当前cell的index：${prin, print("源文件中当前cell的起始字符位置：${pri, print("源文件中当前cell的结束字符位置：${pri, print("源文件中当前cell的代码块：${print.)
    (
      cellType: 'body',
      offset: 6580,
      end: 6856,
      statementCount: 4,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(""" ## 结束  上面回调)
    (
      cellType: 'body',
      offset: 6934,
      end: 7006,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// ()
    (
      cellType: 'tail',
      offset: 7006,
      end: 7008,
      statementCount: 0,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    )
  ],
  encodedCode:
      ""
);
