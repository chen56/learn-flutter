// /// Generated by gen_maters.dart, please don't edit!

// ignore: always_use_package_imports
import 'page.dart';

final noteInfo = (
  /// you need define page variable in page.dart
  /// it is use to register page meta info
  meta: page,
  cells: [
    /// ()
    (
      cellType: 'header',
      offset: 0,
      end: 341,
      statementCount: 0,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// ()
    (
      cellType: 'body',
      offset: 341,
      end: 344,
      statementCount: 0,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(r''' ## 其他特性  #)
    (
      cellType: 'body',
      offset: 422,
      end: 597,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (var showAbout = () {showAboutD, print(MateSample(ElevatedButto)
    (
      cellType: 'body',
      offset: 675,
      end: 989,
      statementCount: 2,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[
        (
          nodeType: 'MateSample.new.firstParentStatement',
          offset: 835,
          end: 985,
        )
      ],
    ),

    /// (print.markdown(''' # 参数化范例  ##)
    (
      cellType: 'body',
      offset: 1067,
      end: 1537,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print(MateSample(Container$Mat)
    (
      cellType: 'body',
      offset: 1615,
      end: 1718,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[
        (
          nodeType: 'MateSample.new.firstParentStatement',
          offset: 1618,
          end: 1714,
        )
      ],
    ),

    /// (print.markdown(''' ### String参)
    (
      cellType: 'body',
      offset: 1796,
      end: 1842,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print(MateSample(Text$Mate("我是)
    (
      cellType: 'body',
      offset: 1920,
      end: 1975,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[
        (
          nodeType: 'MateSample.new.firstParentStatement',
          offset: 1923,
          end: 1971,
        )
      ],
    ),

    /// (print.markdown(''' ### Color参数)
    (
      cellType: 'body',
      offset: 2053,
      end: 2117,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print(MateSample(Container$Mat)
    (
      cellType: 'body',
      offset: 2195,
      end: 2515,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[
        (
          nodeType: 'MateSample.new.firstParentStatement',
          offset: 2198,
          end: 2511,
        )
      ],
    ),

    /// (print.markdown(''' ### bool参数 )
    (
      cellType: 'body',
      offset: 2593,
      end: 2637,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print(MateSample(Container$Mat)
    (
      cellType: 'body',
      offset: 2715,
      end: 2893,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[
        (
          nodeType: 'MateSample.new.firstParentStatement',
          offset: 2718,
          end: 2889,
        )
      ],
    ),

    /// (print.markdown(r''' ### 枚举参数  )
    (
      cellType: 'body',
      offset: 2971,
      end: 3038,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print(MateSample(Row$Mate(main)
    (
      cellType: 'body',
      offset: 3116,
      end: 3381,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[
        (
          nodeType: 'MateSample.new.firstParentStatement',
          offset: 3119,
          end: 3377,
        )
      ],
    ),

    /// (print.markdown(r''' ### 用循环一次性)
    (
      cellType: 'body',
      offset: 3459,
      end: 3510,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (for (var mainAxisAlignment in )
    (
      cellType: 'body',
      offset: 3588,
      end: 4018,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[
        (
          nodeType: 'MateSample.new.firstParentStatement',
          offset: 3653,
          end: 4013,
        )
      ],
    ),

    /// ()
    (
      cellType: 'tail',
      offset: 4018,
      end: 4020,
      statementCount: 0,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    )
  ],
  encodedCode:
      "aW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CmltcG9ydCAncGFja2FnZTpub3RlL3BhZ2VfY29yZS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOm5vdGVfYXBwL25vdGVfYXBwLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6bm90ZV9tYXRlX2ZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CgpQYWdlTWV0YSBwYWdlID0gUGFnZU1ldGEoCiAgc2hvcnRUaXRsZTogIuWPguaVsOWMluiMg+S+i+acuuWItiIsCiAgbGF5b3V0OiBMYXlvdXRzLmRlZmF1bHRMYXlvdXQoZGVmYXVsdENvZGVFeHBhbmQ6IHRydWUpLAogIGJ1aWxkZXI6IGJ1aWxkLAopOwoKYnVpbGQoQnVpbGRDb250ZXh0IGNvbnRleHQsIFBlbiBwcmludCkgewogIHByaW50LiRfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXygpOwogIHByaW50Lm1hcmtkb3duKHInJycKIyMg5YW25LuW54m55oCnCgojIyMg5oyJY2VsbOaooeeJiOeUn+aIkOiMg+S+i+S7o+eggQoK5oiR5Lus55qE6IyD5L6L5Luj56CB55Sf5oiQ5py65Yi26Jm954S255yL6LW35p2l6L+Y5LiN6ZSZ77yM5L2G5pyJ5Liq5bCP6Zeu6aKY77yM5Ye95pWw5Luj56CB5peg5rOV55Sf5oiQ77yM5L2G5oiR5Lus6YCa6L+H5o+Q5Y+WCk5vdGVib29rIOW9k+WJjWNlbGznmoTku6PnoIHkvZzkuLrmqKHniYjvvIzphY3lkIjku6PnoIHnlJ/miJDkuIDotbfvvIzlj6/ku6Xop6PlhrPmraTnlpHpmr7vvIzmgqjlj6/ku6Xop4Llr5/kuItjZWxs5pys6Lqr55qE5Luj56CBCuWSjOiMg+S+i+eUn+aIkOeahOS7o+eggeeahOW8guWQjO+8mgogICcnJyk7CgogIHByaW50LiRfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXygpOwogIHZhciBzaG93QWJvdXQgPSAoKSB7CiAgICBzaG93QWJvdXREaWFsb2coCiAgICAgIGNvbnRleHQ6IGNvbnRleHQsCiAgICAgIGFwcGxpY2F0aW9uTmFtZTogJ01lbnVCYXIgU2FtcGxlJywKICAgICAgYXBwbGljYXRpb25WZXJzaW9uOiAnMS4wLjAnLAogICAgKTsKICB9OwoKICBwcmludCgKICAgIE1hdGVTYW1wbGUoCiAgICAgIEVsZXZhdGVkQnV0dG9uJE1hdGUob25QcmVzc2VkOiBzaG93QWJvdXQsIGNoaWxkOiBUZXh0JE1hdGUoIkJ1dHRvbjEiKSksCiAgICAgIHRlbXBsYXRlOiBNYXRlU2FtcGxlLnRlbXBsYXRlMSwKICAgICksCiAgKTsKCiAgcHJpbnQuJF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fKCk7CiAgcHJpbnQubWFya2Rvd24oJycnCiMg5Y+C5pWw5YyW6IyD5L6LCgojIyDlj6/osIPlj4LojIPkvosKCuWtpuS5oGZsdXR0ZXIvZGFydOi/meexu1VJ5oqA5pyv77yM5aaC5p6c5pyJ5aW955qE6IyD5L6L6K6y6Kej5bGV56S677yM5Lya5p6B5aSn5Yqg6YCf5a2m5Lmg44CCCgo+IPCflJQgIOeOi+mBk+iMg+S+i+S4ieimgee0oO+8jOWSjOS4gOmhueW/heWkh+adoeS7tu+8muimgeW/q+S4jeimgem+n+OAggo+IC0g6IyD5L6L5Y+v5bGV56S677yM6K6y6KejVUnmioDmnK/vvIzkuI3lsZXnpLrlh7rmnaXvvIzotLTkuKrlm77miJbljYrlpKnmmL7npLrkuI3lh7rmnaXmgKXmrbvkuroKPiAtIOWPguaVsOWPr+iwg+aVtO+8jOiMg+S+i3dpZHRoOjIwMCzmiJHmlLkyMDAw5Lya5LiN5Lya5oql6ZSZCj4gLSDku6PnoIHlj6/lkIzmraXvvIzosIPlj4LlkI7nmoTku6PnoIHopoHog73liqjmgIHlkIzmraUKCuWumOe9keWPiuW+iOWkmmdpdGh1YuiMg+S+i+W6k+W5tuS4jeWFt+Wkh+S7peS4iuimgee0oO+8jOimgeS5iOS4gOWghuiMg+S+i+S7o+eggeaXoOiusuino++8jOaXoOWxleekuu+8jOimgeS5iOS4gOWghuWPr+Wxleekuu+8jOWNiuWkqeaJvuS4jeWIsOS7o+egge+8jArov5jmnInlrpjnvZHlpKfph49EYXJ0UGFk6IyD5L6L77yM5a6M576O5L2T546w5LqGZGFydOe8luivkemAn+W6puaFoui/meenjeivreiogOeJueeCue+8jOm+n+mAn+S4gOagt++8jOafpemYhVVJ5paH5qGj77yM5bCx5piv5oOz5b+r6YCfCue6teiniOWFtuWkluinguW9oueKtu+8jOe7k+aenOetieWNiuWkqe+8jOmVv+WVpeagt+mDveWHuuS4jeadpe+8jOaApeatu+S6uu+8jOWcqOiAkOW/g+S4p+WkseWJjeeahOWKoOi9veaIkOWKn+eOh+S4ujEzJSBvKOS4gO+4v+S4gCspbwoK5pysbm90ZeS4reeahFVJ6IyD5L6L77yM5pSv5oyB5Y+C5pWw6LCD6IqC77yM5Y+v5b+r6YCf5bGV56S65a6e6aqM44CCCgojIyMgbnVt5Y+C5pWwCgror7fmgqjngrnlh7vlvIDkuIvpnaLojIPkvovlsI/nrq3lpLTvvIzkv67mlLlDb250YWluZXIuaGVpZ2h077yM6KeC5a+f6IyD5L6L5bGV56S65Y+K5Luj56CB55qE5Y+Y5YyW77yaCiAgJycnKTsKCiAgcHJpbnQuJF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fKCk7CiAgcHJpbnQoTWF0ZVNhbXBsZShDb250YWluZXIkTWF0ZSgKICAgIGhlaWdodDogMTAwLAogICAgY2hpbGQ6IFRleHQkTWF0ZSgi6K+35L+u5pS5aGVpZ2h0LOiwg+iKgumrmOW6piIpLAogICkpKTsKCiAgcHJpbnQuJF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fKCk7CiAgcHJpbnQubWFya2Rvd24oJycnCiMjIyBTdHJpbmflj4LmlbAKICAnJycpOwoKICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKICBwcmludChNYXRlU2FtcGxlKFRleHQkTWF0ZSgi5oiR5pivVGV4dC5kYXRhLOS/ruaUueaIkSIpKSk7CgogIHByaW50LiRfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXygpOwogIHByaW50Lm1hcmtkb3duKCcnJwojIyMgQ29sb3Llj4LmlbAKClRPRE8g5pqC5pe25Y+q6IO95pi+56S677yM6L+Y5LiN6IO957yW6L6RCiAgJycnKTsKCiAgcHJpbnQuJF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fKCk7CiAgcHJpbnQoTWF0ZVNhbXBsZShDb250YWluZXIkTWF0ZSgKICAgIHdpZHRoOiAyMDAsCiAgICBoZWlnaHQ6IDEwMCwKICAgIGNvbG9yOiBDb2xvcnMuZ3JlZW4uc2hhZGU0MDAsCiAgICBjbGlwQmVoYXZpb3I6IENsaXAubm9uZSwKICAgIGNoaWxkOiBDZW50ZXIkTWF0ZSgKICAgICAgY2hpbGQ6IENvbnRhaW5lciRNYXRlKAogICAgICAgIHdpZHRoOiAxMDAsCiAgICAgICAgaGVpZ2h0OiA1MCwKICAgICAgICBjb2xvcjogQ29sb3JzLnJlZC5zaGFkZTQwMCwKICAgICAgICBjbGlwQmVoYXZpb3I6IENsaXAubm9uZSwKICAgICAgKSwKICAgICksCiAgKSkpOwoKICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKICBwcmludC5tYXJrZG93bignJycKIyMjIGJvb2zlj4LmlbAKICAnJycpOwoKICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKICBwcmludChNYXRlU2FtcGxlKENvbnRhaW5lciRNYXRlKAogICAgd2lkdGg6IDEwMCwKICAgIC8vIGhlaWdodDogMTAwLAogICAgY29sb3I6IENvbG9ycy5ibHVlLnNoYWRlMTAwLAogICAgY2hpbGQ6IFRleHQkTWF0ZSgi5L+u5pS5VGV4dC5zb2Z0V3JhcDog6Ieq5Yqo5o2i6KGMIiwgc29mdFdyYXA6IHRydWUpLAogICkpKTsKCiAgcHJpbnQuJF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fKCk7CiAgcHJpbnQubWFya2Rvd24ocicnJwojIyMg5p6a5Li+5Y+C5pWwIAoK5L+u5pS55LiLbWFpbkF4aXNBbGlnbm1lbnTvvJoKICAnJycpOwoKICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKICBwcmludChNYXRlU2FtcGxlKFJvdyRNYXRlKAogICAgbWFpbkF4aXNBbGlnbm1lbnQ6IE1haW5BeGlzQWxpZ25tZW50LnNwYWNlQXJvdW5kLAogICAgY2hpbGRyZW46IFsKICAgICAgRWxldmF0ZWRCdXR0b24kTWF0ZShvblByZXNzZWQ6ICgpIHt9LCBjaGlsZDogVGV4dCRNYXRlKCJCdXR0b24xIikpLAogICAgICBFbGV2YXRlZEJ1dHRvbiRNYXRlKG9uUHJlc3NlZDogKCkge30sIGNoaWxkOiBUZXh0JE1hdGUoIkJ1dHRvbjIiKSksCiAgICBdLAogICkpKTsKCiAgcHJpbnQuJF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fKCk7CiAgcHJpbnQubWFya2Rvd24ocicnJwojIyMg55So5b6q546v5LiA5qyh5oCn5p6E6YCg5LiA57uE6IyD5L6LCiAgJycnKTsKCiAgcHJpbnQuJF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fKCk7CiAgZm9yICh2YXIgbWFpbkF4aXNBbGlnbm1lbnQgaW4gTWFpbkF4aXNBbGlnbm1lbnQudmFsdWVzKSB7CiAgICBwcmludChNYXRlU2FtcGxlKFJvdyRNYXRlKAogICAgICBtYWluQXhpc0FsaWdubWVudDogbWFpbkF4aXNBbGlnbm1lbnQsCiAgICAgIGNoaWxkcmVuOiBbCiAgICAgICAgRWxldmF0ZWRCdXR0b24kTWF0ZSgKICAgICAgICAgICAgb25QcmVzc2VkOiAoKSB7fSwKICAgICAgICAgICAgY2hpbGQ6IFRleHQkTWF0ZSgiJHttYWluQXhpc0FsaWdubWVudC5uYW1lfTpCdXR0b24xIikpLAogICAgICAgIEVsZXZhdGVkQnV0dG9uJE1hdGUoCiAgICAgICAgICAgIG9uUHJlc3NlZDogKCkge30sCiAgICAgICAgICAgIGNoaWxkOiBUZXh0JE1hdGUoIiR7bWFpbkF4aXNBbGlnbm1lbnQubmFtZX06QnV0dG9uMiIpKSwKICAgICAgXSwKICAgICkpKTsKICB9Cn0K"
);
