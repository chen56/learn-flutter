// /// Generated by gen_maters.dart, please don't edit!

// ignore: always_use_package_imports
import 'page.dart';

final noteInfo = (
  /// you need define page variable in page.dart
  /// it is use to register page meta info
  meta: page,
  cells: [
    /// ()
    (
      cellType: 'header',
      offset: 0,
      end: 732,
      statementCount: 0,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(''' # Material )
    (
      cellType: 'body',
      offset: 732,
      end: 834,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (const access_time__icons = {"a, for (var name in access_time__)
    (
      cellType: 'body',
      offset: 912,
      end: 1337,
      statementCount: 2,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[
        (
          nodeType: 'MateSample.new.firstParentStatement',
          offset: 1130,
          end: 1329,
        )
      ],
    ),

    /// (print.markdown(''' ## 图标浏览  pa)
    (
      cellType: 'body',
      offset: 1415,
      end: 1703,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (ValueNotifier<Set<String>> cur, print(ValueListenableBuilder(v)
    (
      cellType: 'body',
      offset: 1781,
      end: 3741,
      statementCount: 2,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// ()
    (
      cellType: 'tail',
      offset: 3741,
      end: 3743,
      statementCount: 0,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    )
  ],
  encodedCode:
      "aW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CmltcG9ydCAncGFja2FnZTpub3RlL21hdGUuZGFydCc7CmltcG9ydCAncGFja2FnZTpub3RlL3BhZ2VfY29yZS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOm5vdGVfbWF0ZV9mbHV0dGVyL21hdGVfaWNvbnMuZy5kYXJ0JyBhcyBtYXRlX2ljb25zOwppbXBvcnQgJ3BhY2thZ2U6bm90ZV9tYXRlX2ZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CgpQYWdlTWV0YSBwYWdlID0gUGFnZU1ldGEoCiAgc2hvcnRUaXRsZTogIkljb24iLAogIGJ1aWxkZXI6IGJ1aWxkLAopOwoKU2V0PFN0cmluZz4gaWNvblR5cGVzID0geyJzaGFycCIsICJyb3VuZGVkIiwgIm91dGxpbmVkIn07Ckljb25SZWdpc3RlciBtYXRlcmlhbEljb25SZWdpc3RlciA9IG1hdGVfaWNvbnMucmVnaXN0ZXJJY29uKCk7Ck1hcDxTdHJpbmcsIEljb25EYXRhPiBpY29ucyA9CiAgICBtYXRlcmlhbEljb25SZWdpc3Rlci5pY29ucy5tYXAoKGtleSwgdmFsdWUpID0+IE1hcEVudHJ5KHZhbHVlLCBrZXkpKTsKTGlzdDxTdHJpbmc+IG1haW5JY29uTmFtZXMgPSBpY29ucy5rZXlzCiAgICAud2hlcmUoKG5hbWUpID0+IGljb25UeXBlcy5ldmVyeSgoaWNvbkV4dCkgPT4gIW5hbWUuZW5kc1dpdGgoaWNvbkV4dCkpKQogICAgLnRvTGlzdCgpCiAgLi5zb3J0KChhLCBiKSA9PiBhLmNvbXBhcmVUbyhiKSk7CgpidWlsZChCdWlsZENvbnRleHQgY29udGV4dCwgUGVuIHByaW50KSB7CiAgcHJpbnQubWFya2Rvd24oJycnCiMgTWF0ZXJpYWwgSWNvbgoK5a6Y5pa55Zu+5qCH5bqT77yacGFja2FnZTpmbHV0dGVyL21hdGVyaWFsL2ljb25zLmRhcnQKCiMjIOWfuuacrOeUqOazlQoKICAnJycpOwoKICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKICAvLyBpZ25vcmU6IGNvbnN0YW50X2lkZW50aWZpZXJfbmFtZXMKICBjb25zdCBhY2Nlc3NfdGltZV9faWNvbnMgPSB7CiAgICAiYWNjZXNzX3RpbWUiLAogICAgImFjY2Vzc190aW1lX291dGxpbmVkIiwKICAgICJhY2Nlc3NfdGltZV9zaGFycCIsCiAgICAiYWNjZXNzX3RpbWVfZmlsbGVkIgogIH07CiAgZm9yICh2YXIgbmFtZSBpbiBhY2Nlc3NfdGltZV9faWNvbnMpIHsKICAgIHByaW50KE1hdGVTYW1wbGUoUm93JE1hdGUoCiAgICAgIGNoaWxkcmVuOiBbCiAgICAgICAgSWNvbiRNYXRlKAogICAgICAgICAgaWNvbnNbbmFtZV0sCiAgICAgICAgICBzaXplOiAyNCwKICAgICAgICAgIGNvbG9yOiBDb2xvcnMuYmx1ZSwKICAgICAgICApLAogICAgICAgIFRleHQkTWF0ZSgiSWNvbnMuJG5hbWUiKSwKICAgICAgXSwKICAgICkpKTsKICB9CgogIHByaW50LiRfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXygpOwogIHByaW50Lm1hcmtkb3duKCcnJwojIyDlm77moIfmtY/op4gKCnBhY2thZ2U6Zmx1dHRlci9tYXRlcmlhbC9pY29ucy5kYXJ0IOWbvuagh+W6k++8jOWFseWbvuaghyAke2ljb25zLmxlbmd0aH3kuKrvvIzlpKflpJrlkb3lkI3kuLrku6XkuIvop4TlvovvvJoKCi0gSWNvbnMuZGVsZXRlICAo5Li75Zu+5qCHKQotIEljb25zLmRlbGV0ZV9zaGFycCAo5Yqg5ZCO57yA55qE5omp5bGV5Zu+5qCHKQotIEljb25zLmRlbGV0ZV9yb3VuZGVkICjliqDlkI7nvIDnmoTmianlsZXlm77moIcpCi0gSWNvbnMuZGVsZXRlX291dGxpbmVkICjliqDlkI7nvIDnmoTmianlsZXlm77moIcpCgrmjInmraTop4TlvovvvIzlhbHmnIkgJHttYWluSWNvbk5hbWVzLmxlbmd0aH3nu4TvvIwg5LiN56ym5ZCI5q2k6KeE5b6L55qE5Zu+5qCH5pqC5pyq5pS25b2VLgogICcnJyk7CgogIHByaW50LiRfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXygpOwogIFZhbHVlTm90aWZpZXI8U2V0PFN0cmluZz4+IGN1cnJlbnRTZWxlY3QgPSBWYWx1ZU5vdGlmaWVyKHsiIn0pOwogIHByaW50KFZhbHVlTGlzdGVuYWJsZUJ1aWxkZXIoCiAgICAgIHZhbHVlTGlzdGVuYWJsZTogY3VycmVudFNlbGVjdCwKICAgICAgYnVpbGRlcjogKGNvbnRleHQsIHZhbHVlLCBjaGlsZCkgewogICAgICAgIC8vIOaJqeWxleWQjue8gOmAieaLqeWZqAogICAgICAgIHZhciBpY29uU2VsZWN0ID0gUm93KGNoaWxkcmVuOiBbCiAgICAgICAgICBTZWdtZW50ZWRCdXR0b24oCiAgICAgICAgICAgIHNlZ21lbnRzOiBjb25zdCBbCiAgICAgICAgICAgICAgQnV0dG9uU2VnbWVudCgKICAgICAgICAgICAgICAgIHZhbHVlOiAnJywKICAgICAgICAgICAgICAgIGljb246IEljb24oSWNvbnMud29ya19oaXN0b3J5KSwKICAgICAgICAgICAgICAgIGxhYmVsOiBUZXh0KCfkuLvlm77moIcnKSwKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIEJ1dHRvblNlZ21lbnQoCiAgICAgICAgICAgICAgICB2YWx1ZTogJ19vdXRsaW5lZCcsCiAgICAgICAgICAgICAgICBpY29uOiBJY29uKEljb25zLndvcmtfaGlzdG9yeV9vdXRsaW5lZCksCiAgICAgICAgICAgICAgICBsYWJlbDogVGV4dCgnb3V0bGluZWQnKSwKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIEJ1dHRvblNlZ21lbnQoCiAgICAgICAgICAgICAgICB2YWx1ZTogJ19yb3VuZGVkJywKICAgICAgICAgICAgICAgIGljb246IEljb24oSWNvbnMud29ya19oaXN0b3J5X3JvdW5kZWQpLAogICAgICAgICAgICAgICAgbGFiZWw6IFRleHQoJ3JvdW5kZWQnKSwKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIEJ1dHRvblNlZ21lbnQoCiAgICAgICAgICAgICAgICB2YWx1ZTogJ19zaGFycCcsCiAgICAgICAgICAgICAgICBpY29uOiBJY29uKEljb25zLndvcmtfaGlzdG9yeV9zaGFycCksCiAgICAgICAgICAgICAgICBsYWJlbDogVGV4dCgnc2hhcnAnKSwKICAgICAgICAgICAgICApLAogICAgICAgICAgICBdLAogICAgICAgICAgICBzZWxlY3RlZDogY3VycmVudFNlbGVjdC52YWx1ZSwKICAgICAgICAgICAgb25TZWxlY3Rpb25DaGFuZ2VkOiAoU2V0PFN0cmluZz4gZXh0U3VmZml4cykgewogICAgICAgICAgICAgIGN1cnJlbnRTZWxlY3QudmFsdWUgPSBleHRTdWZmaXhzOwogICAgICAgICAgICB9LAogICAgICAgICAgICBtdWx0aVNlbGVjdGlvbkVuYWJsZWQ6IHRydWUsCiAgICAgICAgICApCiAgICAgICAgXSk7CiAgICAgICAgdmFyIHNlbGVjdGVkUmVzdWx0ID0gV3JhcCgKICAgICAgICAgIGNoaWxkcmVuOiBbCiAgICAgICAgICAgIC4uLm1haW5JY29uTmFtZXMKICAgICAgICAgICAgICAgIC5leHBhbmQoKG1haW5OYW1lKSA9PgogICAgICAgICAgICAgICAgICAgIGN1cnJlbnRTZWxlY3QudmFsdWUubWFwKChzdWZmaXgpID0+ICIkbWFpbk5hbWUkc3VmZml4IikpCiAgICAgICAgICAgICAgICAud2hlcmUoKG5hbWUpID0+IGljb25zLmNvbnRhaW5zS2V5KG5hbWUpKQogICAgICAgICAgICAgICAgLm1hcCgobmFtZSkgewogICAgICAgICAgICAgIGFzc2VydChpY29ucy5jb250YWluc0tleShuYW1lKSwgImljb24gJG5hbWUgc2hvdWxkIGJlIGV4aXN0cyIpOwogICAgICAgICAgICAgIHZhciBpY29uID0gaWNvbnNbbmFtZV07CiAgICAgICAgICAgICAgdmFyIGljb25XaXRoVGlwID0gVG9vbHRpcCgKICAgICAgICAgICAgICAgIG1lc3NhZ2U6IG5hbWUsCiAgICAgICAgICAgICAgICBjaGlsZDogSWNvbihpY29uKSwKICAgICAgICAgICAgICApOwogICAgICAgICAgICAgIHJldHVybiBpY29uV2l0aFRpcDsKICAgICAgICAgICAgfSksCiAgICAgICAgICBdLAogICAgICAgICk7CiAgICAgICAgcmV0dXJuIENvbHVtbigKICAgICAgICAgIGNoaWxkcmVuOiBbCiAgICAgICAgICAgIGljb25TZWxlY3QsCiAgICAgICAgICAgIHNlbGVjdGVkUmVzdWx0LAogICAgICAgICAgXSwKICAgICAgICApOwogICAgICB9KSk7Cn0K"
);
