// /// Generated by gen_maters.dart, please don't edit!

noteInfo() => (
      cells: [
        /// ()
        (
          cellType: 'header',
          offset: 0,
          end: 489,
          statementCount: 0,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(''' # Platform和)
        (
          cellType: 'body',
          offset: 489,
          end: 549,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (ThemeData theme = Theme.of(con, MediaQueryData mediaQuery = Me, print.markdown(''' | name     )
        (
          cellType: 'body',
          offset: 627,
          end: 3058,
          statementCount: 3,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(''' ## path  pa)
        (
          cellType: 'body',
          offset: 3136,
          end: 3217,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(Platform.script.toFilePa)
        (
          cellType: 'body',
          offset: 3295,
          end: 3337,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(path.absolute("./"));)
        (
          cellType: 'body',
          offset: 3415,
          end: 3449,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(path.absolute("a.dart")))
        (
          cellType: 'body',
          offset: 3527,
          end: 3564,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const LocalFileSystem().)
        (
          cellType: 'body',
          offset: 3642,
          end: 3697,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(''' ## environm)
        (
          cellType: 'body',
          offset: 3775,
          end: 3832,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (if (kIsWeb) {print("web版无法使用环境)
        (
          cellType: 'body',
          offset: 3910,
          end: 4284,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// ()
        (
          cellType: 'tail',
          offset: 4284,
          end: 4286,
          statementCount: 0,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        )
      ],
      encodedCode:
          "Ly8gaWdub3JlX2Zvcl9maWxlOiBmaWxlX25hbWVzCgppbXBvcnQgJ2RhcnQ6aW8nOwppbXBvcnQgJ2RhcnQ6dWknOwoKaW1wb3J0ICdwYWNrYWdlOmZpbGUvbG9jYWwuZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyL2ZvdW5kYXRpb24uZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyL21hdGVyaWFsLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6bm90ZS9ub3RlX2NvcmUuZGFydCc7CmltcG9ydCAncGFja2FnZTpub3RlX2FwcC9ub3RlX2FwcC5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOnBhdGgvcGF0aC5kYXJ0JyBhcyBwYXRoOwoKTm90ZUNvbmZQYXJ0IHBhZ2UgPSBOb3RlQ29uZlBhcnQoCiAgc2hvcnRUaXRsZTogIlBsYXRmb3Jt5ZKM6K6+5aSHIiwKICBidWlsZGVyOiBidWlsZCwKICBsYXlvdXQ6IExheW91dHMuZGVmYXVsdExheW91dChkZWZhdWx0Q29kZUV4cGFuZDogdHJ1ZSksCik7CgpidWlsZChCdWlsZENvbnRleHQgY29udGV4dCwgUGVuIHByaW50KSB7CiAgcHJpbnQubWFya2Rvd24oJycnCiMgUGxhdGZvcm3lkozorr7lpIfkv6Hmga85CgojIyDlubPlj7Dlj4LmlbAgCiAgJycnKTsKCiAgcHJpbnQuJF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fKCk7CiAgVGhlbWVEYXRhIHRoZW1lID0gVGhlbWUub2YoY29udGV4dCk7CiAgTWVkaWFRdWVyeURhdGEgbWVkaWFRdWVyeSA9IE1lZGlhUXVlcnkub2YoY29udGV4dCk7CiAgcHJpbnQubWFya2Rvd24oJycnCnwgbmFtZSAgICAgICAgICAgICAgICAgICAgfCB2YWx1ZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8IGNvbW1lbnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAp8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXwKfCBrSXNXZWIgICAgICAgICAgICAgICAgICB8ICR7a0lzV2VifSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgYm9vbC5mcm9tRW52aXJvbm1lbnQoJ2RhcnQubGlicmFyeS5qc191dGlsJykgICAgICB8Cnwga1JlbGVhc2VNb2RlICAgICAgICAgICAgfCAke2tSZWxlYXNlTW9kZX0gICAgICAgICAgICAgICAgICAgICAgICB8IGJvb2wuZnJvbUVudmlyb25tZW50KCdkYXJ0LnZtLnByb2R1Y3QnKSAgICAgICAgICAgfAp8IGtQcm9maWxlTW9kZSAgICAgICAgICAgIHwgJHtrUHJvZmlsZU1vZGV9ICAgICAgICAgICAgICAgICAgICAgICAgfCBib29sLmZyb21FbnZpcm9ubWVudCgnZGFydC52bS5wcm9maWxlJykgICAgICAgICAgIHwKfCBrRGVidWdNb2RlICAgICAgICAgICAgICB8ICR7a0RlYnVnTW9kZX0gICAgICAgICAgICAgICAgICAgICAgICAgIHwgIWtSZWxlYXNlTW9kZSAmJiAha1Byb2ZpbGVNb2RlICAgICAgICAgICAgICAgICAgICB8CnwgdGhlbWUucGxhdGZvcm0ubmFtZSAgICAgfCAke3RoZW1lLnBsYXRmb3JtLm5hbWV9ICAgICAgICAgICAgICAgICB8ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAp8IHRoZW1lLnZpc3VhbERlbnNpdHkgICAgIHwgJHt0aGVtZS52aXN1YWxEZW5zaXR5LnRvU3RyaW5nU2hvcnQoKX0gfCDop4bop4nlr4bluqYgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAp8IG1lZGlhUXVlcnkub3JpZW50YXRpb24gIHwgJHttZWRpYVF1ZXJ5Lm9yaWVudGF0aW9ufSAgICAgICAgICAgICAgfCBsYW5kc2NhcGUvcG9ydHJhaXQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwKfCBtZWRpYVF1ZXJ5LnNpemUgICAgICAgICB8ICR7bWVkaWFRdWVyeS5zaXplfSAgICAgICAgICAgICAgICAgICAgIHwgbG9naWNhbCBwaXhlbCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8Cnwgd2luZG93LnBoeXNpY2FsU2l6ZSAgICAgfCAke3dpbmRvdy5waHlzaWNhbFNpemV9ICAgICAgICAgICAgICAgICB8IHBoeXNpY2FsIHBpeGVsICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfAp8IHdpbmRvdy5kZXZpY2VQaXhlbFJhdGlvIHwgJHt3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpb30gICAgICAgICAgICAgfCBwaHlzaWNhbCBwaXhlbD0gbG9naWNhbCBwaXhlbCAqICBkZXZpY2VQaXhlbFJhdGlvIHwKfCBQbGF0Zm9ybS5pc01hY09TIHwgJHtQbGF0Zm9ybS5pc01hY09TfSAgICAgICAgICAgICB8ICAgfAp8IFBsYXRmb3JtLmlzQW5kcm9pZCB8ICR7UGxhdGZvcm0uaXNBbmRyb2lkfSAgICAgICAgICAgICB8ICAgfAp8IFBsYXRmb3JtLmlzRnVjaHNpYSB8ICR7UGxhdGZvcm0uaXNGdWNoc2lhfSAgICAgICAgICAgICB8ICAgfAp8IFBsYXRmb3JtLmlzSU9TIHwgJHtQbGF0Zm9ybS5pc0lPU30gICAgICAgICAgICAgfCAgIHwKfCBQbGF0Zm9ybS5pc0xpbnV4IHwgJHtQbGF0Zm9ybS5pc0xpbnV4fSAgICAgICAgICAgICB8ICAgfAp8IFBsYXRmb3JtLmlzV2luZG93cyB8ICR7UGxhdGZvcm0uaXNXaW5kb3dzfSAgICAgICAgICAgICB8ICAgfAp8IFBsYXRmb3JtLmV4ZWN1dGFibGUgfCAke1BsYXRmb3JtLmV4ZWN1dGFibGV9ICAgICAgICAgICAgIHwgICB8CnwgUGxhdGZvcm0ubG9jYWxlTmFtZSB8ICR7UGxhdGZvcm0ubG9jYWxlTmFtZX0gICAgICAgICAgICAgfCAgIHwKfCBQbGF0Zm9ybS5vcGVyYXRpbmdTeXN0ZW0gfCAke1BsYXRmb3JtLm9wZXJhdGluZ1N5c3RlbX0gICAgICAgICAgICAgfCAgIHwKfCBQbGF0Zm9ybS5vcGVyYXRpbmdTeXN0ZW1WZXJzaW9uIHwgJHtQbGF0Zm9ybS5vcGVyYXRpbmdTeXN0ZW1WZXJzaW9ufSAgICAgICAgICAgICB8ICAgfAp8IFBsYXRmb3JtLnJlc29sdmVkRXhlY3V0YWJsZSB8ICR7UGxhdGZvcm0ucmVzb2x2ZWRFeGVjdXRhYmxlfSAgICAgICAgICAgICB8ICAgfAp8IFBsYXRmb3JtLnNjcmlwdCB8ICR7UGxhdGZvcm0uc2NyaXB0fSAgICAgICAgICAgICB8ICAgfAp8IFBsYXRmb3JtLnZlcnNpb24gfCAke1BsYXRmb3JtLnZlcnNpb259ICAgICAgICAgICAgIHwgICB8CiAgJycnKTsKCiAgcHJpbnQuJF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fKCk7CiAgcHJpbnQubWFya2Rvd24oJycnCiMjIHBhdGgKCnBhdGjlvojmnInmhI/mgJ0KCi0gd2Vi54mI5Lya5Y+Y5Li6dXJsCi0gbWFjb3PniYjmraPluLjmma7pgJrnm67lvZXlkI0KCiAgJycnKTsKICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKICBwcmludChQbGF0Zm9ybS5zY3JpcHQudG9GaWxlUGF0aCgpKTsKICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKICBwcmludChwYXRoLmFic29sdXRlKCIuLyIpKTsKCiAgcHJpbnQuJF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fKCk7CiAgcHJpbnQocGF0aC5hYnNvbHV0ZSgiYS5kYXJ0IikpOwogIHByaW50LiRfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXygpOwogIHByaW50KGNvbnN0IExvY2FsRmlsZVN5c3RlbSgpLmN1cnJlbnREaXJlY3RvcnkpOwoKICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKICBwcmludC5tYXJrZG93bignJycKIyMgZW52aXJvbm1lbnQod2Vi5LiN5Y+v55SoKQoKICAnJycpOwoKICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKICBpZiAoa0lzV2ViKSB7CiAgICBwcmludCgid2Vi54mI5peg5rOV5L2/55So546v5aKD5Y+Y6YePLOS8muaKpemUme+8mlVuc3VwcG9ydGVkIG9wZXJhdGlvbjogUGxhdGZvcm0uX2Vudmlyb25tZW50Iik7CiAgfSBlbHNlIHsKICAgIE1hcDxTdHJpbmcsIFN0cmluZz4gZW52ID0gUGxhdGZvcm0uZW52aXJvbm1lbnQ7CiAgICBwcmludChUYWJsZSgKICAgICAgYm9yZGVyOiBUYWJsZUJvcmRlci5hbGwoKSwKICAgICAgY2hpbGRyZW46IGVudi5lbnRyaWVzCiAgICAgICAgICAubWFwKChlKSA9PiBUYWJsZVJvdygKICAgICAgICAgICAgICBjaGlsZHJlbjogW1NlbGVjdGFibGVUZXh0KGUua2V5KSwgU2VsZWN0YWJsZVRleHQoZS52YWx1ZSldKSkKICAgICAgICAgIC50b0xpc3QoKSwKICAgICkpOwogIH0KfQo="
    );
