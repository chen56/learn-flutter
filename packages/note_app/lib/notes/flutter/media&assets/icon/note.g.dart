// /// Generated by gen_maters.dart, please don't edit!

final noteInfo = (
  cells: [
    /// ()
    (
      cellType: 'header',
      offset: 0,
      end: 633,
      statementCount: 0,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (print.markdown(''' # Material )
    (
      cellType: 'body',
      offset: 633,
      end: 735,
      statementCount: 1,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    ),

    /// (var sampleIcons = {"access_tim, for (var entry in sampleIcons.)
    (
      cellType: 'body',
      offset: 813,
      end: 2656,
      statementCount: 2,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[
        (
          nodeType: 'MateSample.new.firstParentStatement',
          offset: 1175,
          end: 1330,
        )
      ],
    ),

    /// ()
    (
      cellType: 'tail',
      offset: 2656,
      end: 4943,
      statementCount: 0,
      specialNodes: <({
        String nodeType,
        int end,
        int offset,
      })>[],
    )
  ],
  encodedCode:
      "aW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CmltcG9ydCAncGFja2FnZTpub3RlL21hdGUuZGFydCc7CmltcG9ydCAncGFja2FnZTpub3RlL25vdGVfY29yZS5kYXJ0JzsKCi8vIFsgICArNCBtc10gRm9udCBhc3NldCAiTWF0ZXJpYWxJY29ucy1SZWd1bGFyLm90ZiIgd2FzIHRyZWUtc2hha2VuLAovLyByZWR1Y2luZyBpdCBmcm9tIDE2NDUxODQgdG8gMTAyNzIgYnl0ZXMgKDk5LjQlIHJlZHVjdGlvbikuCi8vIFRyZWUtc2hha2luZyBjYW4gYmUgZGlzYWJsZWQgYnkgcHJvdmlkaW5nIHRoZSAtLW5vLXRyZWUtc2hha2UtaWNvbnMgZmxhZwovLyBpbXBvcnQgJ3BhY2thZ2U6bm90ZV9tYXRlX2ZsdXR0ZXIvbWF0ZV9pY29ucy5nLmRhcnQnIGRlZmVycmVkIGFzIGRlZmVycmVkX2ljb25zOwoKaW1wb3J0ICdwYWNrYWdlOm5vdGVfbWF0ZV9mbHV0dGVyL21hdGVyaWFsLmRhcnQnOwoKTm90ZUNvbmZQYXJ0IHBhZ2UgPSBOb3RlQ29uZlBhcnQoCiAgc2hvcnRUaXRsZTogIkljb24iLAogIGJ1aWxkZXI6IGJ1aWxkLAopOwoKU2V0PFN0cmluZz4gaWNvblR5cGVzID0geyJzaGFycCIsICJyb3VuZGVkIiwgIm91dGxpbmVkIn07CgpidWlsZChCdWlsZENvbnRleHQgY29udGV4dCwgUGVuIHByaW50KSB7CiAgcHJpbnQubWFya2Rvd24oJycnCiMgTWF0ZXJpYWwgSWNvbgoK5a6Y5pa55Zu+5qCH5bqT77yacGFja2FnZTpmbHV0dGVyL21hdGVyaWFsL2ljb25zLmRhcnQKCiMjIOWfuuacrOeUqOazlQoKICAnJycpOwoKICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKICAvLyBpZ25vcmU6IGNvbnN0YW50X2lkZW50aWZpZXJfbmFtZXMKICB2YXIgc2FtcGxlSWNvbnMgPSB7CiAgICAiYWNjZXNzX3RpbWUiOiBJY29ucy5hY2Nlc3NfdGltZSwKICAgICJhY2Nlc3NfdGltZV9vdXRsaW5lZCI6IEljb25zLmFjY2Vzc190aW1lX291dGxpbmVkLAogICAgImFjY2Vzc190aW1lX3NoYXJwIjogSWNvbnMuYWNjZXNzX3RpbWVfc2hhcnAsCiAgICAiYWNjZXNzX3RpbWVfZmlsbGVkIjogSWNvbnMuYWNjZXNzX3RpbWVfZmlsbGVkCiAgfTsKICBmb3IgKHZhciBlbnRyeSBpbiBzYW1wbGVJY29ucy5lbnRyaWVzKSB7CiAgICB2YXIgKG5hbWUsIGljb25EYXRhKSA9IChlbnRyeS5rZXksIGVudHJ5LnZhbHVlKTsKICAgIHByaW50KE1hdGVTYW1wbGUoUm93JE1hdGUoCiAgICAgIGNoaWxkcmVuOiBbCiAgICAgICAgSWNvbiRNYXRlKGljb25EYXRhLCBzaXplOiAyNCwgY29sb3I6IENvbG9ycy5ibHVlKSwKICAgICAgICBUZXh0JE1hdGUoIkljb25zLiRuYW1lIiksCiAgICAgIF0sCiAgICApKSk7CiAgfQovLyDmmoLml7bmlL7lvIPmraTojIPkvovvvIzlm6DkuLrlm77moIflupPlpKrlpKcKLy8gICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKLy8gICBwcmludC5tYXJrZG93bignJycKLy8gIyMg5Zu+5qCH5rWP6KeICi8vCi8vIOS4u+Wbvuagh+WPiuaJqeWxleWbvuagh+eahOiMg+S+i++8mgovLwovLyAtIEljb25zLmRlbGV0ZSAgKOS4u+WbvuaghykKLy8gLSBJY29ucy5kZWxldGVfc2hhcnAgKOWKoOWQjue8gOeahOaJqeWxleWbvuaghykKLy8gLSBJY29ucy5kZWxldGVfcm91bmRlZCAo5Yqg5ZCO57yA55qE5omp5bGV5Zu+5qCHKQovLyAtIEljb25zLmRlbGV0ZV9vdXRsaW5lZCAo5Yqg5ZCO57yA55qE5omp5bGV5Zu+5qCHKQovLwovLyDkuIvpnaLliqDovb3miYDmnInlm77moIflupPvvIzpnIDopoHlh6Dnp5Lpkp/vvIzor7fogJDlv4PnrYnlvoXvvJoKLy8gICAnJycpOwovLyAgIC8vIOaMieatpOinhOW+i++8jOWFseaciSAke21haW5JY29uTmFtZXMubGVuZ3Rofee7hO+8jCDkuI3nrKblkIjmraTop4TlvovnmoTlm77moIfmmoLmnKrmlLblvZUuCi8vICAgLy8gcGFja2FnZTpmbHV0dGVyL21hdGVyaWFsL2ljb25zLmRhcnQg5Zu+5qCH5bqT77yM5YWx5Zu+5qCHICR7aWNvbnMubGVuZ3RofeS4qu+8jOWkp+WkmuWRveWQjeS4uuS7peS4i+inhOW+i++8mgovLyAgIHByaW50LiRfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXygpOwovLyAgIC8vIHdoeSB3YWl0IDMgc2Vjb25kcz8gYmVjYXVzZSBsb2FkIGxpYnJhcnkgd2lsbCBzdHVjayB0aGUgdWkgdGhyZWFkLgovLyAgIHZhciBpY29uc0Z1dHJ1ZSA9IEZ1dHVyZS5kZWxheWVkKGNvbnN0IER1cmF0aW9uKHNlY29uZHM6IDMpKS50aGVuKCh2YWx1ZSkgPT4KLy8gICAgICAgZGVmZXJyZWRfaWNvbnMKLy8gICAgICAgICAgIC5sb2FkTGlicmFyeSgpCi8vICAgICAgICAgICAudGhlbigodmFsdWUpID0+IGRlZmVycmVkX2ljb25zLnJlZ2lzdGVySWNvbigpKSk7Ci8vICAgcHJpbnQoRnV0dXJlQnVpbGRlcigKLy8gICAgICAgZnV0dXJlOiBpY29uc0Z1dHJ1ZSwKLy8gICAgICAgYnVpbGRlcjogKGNvbnRleHQsIHNuYXBzaG90KSB7Ci8vICAgICAgICAgaWYgKHNuYXBzaG90LmNvbm5lY3Rpb25TdGF0ZSA9PSBDb25uZWN0aW9uU3RhdGUuZG9uZSkgewovLyAgICAgICAgICAgaWYgKHNuYXBzaG90Lmhhc0Vycm9yKSB7Ci8vICAgICAgICAgICAgIHJldHVybiBUZXh0KAovLyAgICAgICAgICAgICAgICAgJ2ljb25zIGxvYWQgZXJyb3IgOiR7c25hcHNob3QuZXJyb3J9IFxuICR7c25hcHNob3Quc3RhY2tUcmFjZX0gJyk7Ci8vICAgICAgICAgICB9Ci8vICAgICAgICAgICB2YXIgcmVzdWx0ID0gaWNvbnNXaWRnZXQoc25hcHNob3QuZGF0YSEpOwovLyAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsKLy8gICAgICAgICB9Ci8vICAgICAgICAgcmV0dXJuIGNvbnN0IENpcmN1bGFyUHJvZ3Jlc3NJbmRpY2F0b3IoKTsKLy8gICAgICAgfSkpOwp9CgpXaWRnZXQgaWNvbnNXaWRnZXQoSWNvblJlZ2lzdGVyIGljb25SZWdpc3RlcikgewogIFZhbHVlTm90aWZpZXI8U2V0PFN0cmluZz4+IGN1cnJlbnRTZWxlY3QgPSBWYWx1ZU5vdGlmaWVyKHsiIn0pOwogIE1hcDxTdHJpbmcsIEljb25EYXRhPiBpY29ucyA9CiAgICAgIGljb25SZWdpc3Rlci5pY29ucy5tYXAoKGtleSwgdmFsdWUpID0+IE1hcEVudHJ5KHZhbHVlLCBrZXkpKTsKICBMaXN0PFN0cmluZz4gbWFpbkljb25OYW1lcyA9IGljb25zLmtleXMKICAgICAgLndoZXJlKChuYW1lKSA9PiBpY29uVHlwZXMuZXZlcnkoKGljb25FeHQpID0+ICFuYW1lLmVuZHNXaXRoKGljb25FeHQpKSkKICAgICAgLnRvTGlzdCgpCiAgICAuLnNvcnQoKGEsIGIpID0+IGEuY29tcGFyZVRvKGIpKTsKCiAgcmV0dXJuIFZhbHVlTGlzdGVuYWJsZUJ1aWxkZXIoCiAgICAgIHZhbHVlTGlzdGVuYWJsZTogY3VycmVudFNlbGVjdCwKICAgICAgYnVpbGRlcjogKGNvbnRleHQsIHZhbHVlLCBjaGlsZCkgewogICAgICAgIC8vIOaJqeWxleWQjue8gOmAieaLqeWZqAogICAgICAgIHZhciBpY29uU2VsZWN0ID0gUm93KGNoaWxkcmVuOiBbCiAgICAgICAgICBTZWdtZW50ZWRCdXR0b24oCiAgICAgICAgICAgIHNlZ21lbnRzOiBjb25zdCBbCiAgICAgICAgICAgICAgQnV0dG9uU2VnbWVudCgKICAgICAgICAgICAgICAgIHZhbHVlOiAnJywKICAgICAgICAgICAgICAgIGljb246IEljb24oSWNvbnMud29ya19oaXN0b3J5KSwKICAgICAgICAgICAgICAgIGxhYmVsOiBUZXh0KCfkuLvlm77moIcnKSwKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIEJ1dHRvblNlZ21lbnQoCiAgICAgICAgICAgICAgICB2YWx1ZTogJ19vdXRsaW5lZCcsCiAgICAgICAgICAgICAgICBpY29uOiBJY29uKEljb25zLndvcmtfaGlzdG9yeV9vdXRsaW5lZCksCiAgICAgICAgICAgICAgICBsYWJlbDogVGV4dCgnb3V0bGluZWQnKSwKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIEJ1dHRvblNlZ21lbnQoCiAgICAgICAgICAgICAgICB2YWx1ZTogJ19yb3VuZGVkJywKICAgICAgICAgICAgICAgIGljb246IEljb24oSWNvbnMud29ya19oaXN0b3J5X3JvdW5kZWQpLAogICAgICAgICAgICAgICAgbGFiZWw6IFRleHQoJ3JvdW5kZWQnKSwKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIEJ1dHRvblNlZ21lbnQoCiAgICAgICAgICAgICAgICB2YWx1ZTogJ19zaGFycCcsCiAgICAgICAgICAgICAgICBpY29uOiBJY29uKEljb25zLndvcmtfaGlzdG9yeV9zaGFycCksCiAgICAgICAgICAgICAgICBsYWJlbDogVGV4dCgnc2hhcnAnKSwKICAgICAgICAgICAgICApLAogICAgICAgICAgICBdLAogICAgICAgICAgICBzZWxlY3RlZDogY3VycmVudFNlbGVjdC52YWx1ZSwKICAgICAgICAgICAgb25TZWxlY3Rpb25DaGFuZ2VkOiAoU2V0PFN0cmluZz4gZXh0U3VmZml4cykgewogICAgICAgICAgICAgIGN1cnJlbnRTZWxlY3QudmFsdWUgPSBleHRTdWZmaXhzOwogICAgICAgICAgICB9LAogICAgICAgICAgICBtdWx0aVNlbGVjdGlvbkVuYWJsZWQ6IHRydWUsCiAgICAgICAgICApCiAgICAgICAgXSk7CiAgICAgICAgdmFyIHNlbGVjdGVkUmVzdWx0ID0gV3JhcCgKICAgICAgICAgIGNoaWxkcmVuOiBbCiAgICAgICAgICAgIC4uLm1haW5JY29uTmFtZXMKICAgICAgICAgICAgICAgIC5leHBhbmQoKG1haW5OYW1lKSA9PgogICAgICAgICAgICAgICAgICAgIGN1cnJlbnRTZWxlY3QudmFsdWUubWFwKChzdWZmaXgpID0+ICIkbWFpbk5hbWUkc3VmZml4IikpCiAgICAgICAgICAgICAgICAud2hlcmUoKG5hbWUpID0+IGljb25zLmNvbnRhaW5zS2V5KG5hbWUpKQogICAgICAgICAgICAgICAgLm1hcCgobmFtZSkgewogICAgICAgICAgICAgIGFzc2VydChpY29ucy5jb250YWluc0tleShuYW1lKSwgImljb24gJG5hbWUgc2hvdWxkIGJlIGV4aXN0cyIpOwogICAgICAgICAgICAgIHZhciBpY29uID0gaWNvbnNbbmFtZV07CiAgICAgICAgICAgICAgdmFyIGljb25XaXRoVGlwID0gVG9vbHRpcCgKICAgICAgICAgICAgICAgIG1lc3NhZ2U6IG5hbWUsCiAgICAgICAgICAgICAgICBjaGlsZDogSWNvbihpY29uKSwKICAgICAgICAgICAgICApOwogICAgICAgICAgICAgIHJldHVybiBpY29uV2l0aFRpcDsKICAgICAgICAgICAgfSksCiAgICAgICAgICBdLAogICAgICAgICk7CiAgICAgICAgcmV0dXJuIENvbHVtbigKICAgICAgICAgIGNoaWxkcmVuOiBbCiAgICAgICAgICAgIGljb25TZWxlY3QsCiAgICAgICAgICAgIHNlbGVjdGVkUmVzdWx0LAogICAgICAgICAgXSwKICAgICAgICApOwogICAgICB9KTsKfQo="
);
