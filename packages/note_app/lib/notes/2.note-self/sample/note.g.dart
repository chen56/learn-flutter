// /// Generated by gen_maters.dart, please don't edit!

noteInfo() => (
      cells: [
        /// ()
        (
          cellType: 'header',
          offset: 0,
          end: 432,
          statementCount: 0,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// ()
        (
          cellType: 'body',
          offset: 432,
          end: 435,
          statementCount: 0,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(''' # 参数化范例  ##)
        (
          cellType: 'body',
          offset: 513,
          end: 983,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(MateSample(Container$Mat)
        (
          cellType: 'body',
          offset: 1061,
          end: 1164,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(''' ### String参)
        (
          cellType: 'body',
          offset: 1242,
          end: 1288,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(MateSample(Text$Mate("我是)
        (
          cellType: 'body',
          offset: 1366,
          end: 1421,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(''' ### Color参数)
        (
          cellType: 'body',
          offset: 1499,
          end: 1563,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(MateSample(Container$Mat)
        (
          cellType: 'body',
          offset: 1641,
          end: 1961,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(''' ### bool参数 )
        (
          cellType: 'body',
          offset: 2039,
          end: 2083,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(MateSample(Container$Mat)
        (
          cellType: 'body',
          offset: 2161,
          end: 2339,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(r''' ### 枚举参数  )
        (
          cellType: 'body',
          offset: 2417,
          end: 2484,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(MateSample(Row$Mate(main)
        (
          cellType: 'body',
          offset: 2562,
          end: 2880,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(r''' ## 其他特性  #)
        (
          cellType: 'body',
          offset: 2958,
          end: 3135,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (showAbout() {showAboutDialog(c, print(MateSample(ElevatedButto)
        (
          cellType: 'body',
          offset: 3213,
          end: 3625,
          statementCount: 2,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(r''' ### 用循环一次性)
        (
          cellType: 'body',
          offset: 3703,
          end: 3754,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (for (var mainAxisAlignment in )
        (
          cellType: 'body',
          offset: 3832,
          end: 4310,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// ()
        (
          cellType: 'tail',
          offset: 4310,
          end: 4312,
          statementCount: 0,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        )
      ],
      encodedCode:
          "aW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CmltcG9ydCAncGFja2FnZTpub3RlL21hdGVfbm90ZS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOm5vdGUvbm90ZV9jb3JlLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6bm90ZV9hcHAvbm90ZV9hcHAuZGFydCc7CmltcG9ydCAncGFja2FnZTptYXRlX2ZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CmltcG9ydCAncGFja2FnZTpjb2RlX2J1aWxkZXIvY29kZV9idWlsZGVyLmRhcnQnOwoKTm90ZUNvbmZQYXJ0IHBhZ2UgPSBOb3RlQ29uZlBhcnQoCiAgc2hvcnRUaXRsZTogIuWPguaVsOWMluiMg+S+i+acuuWItiIsCiAgbGF5b3V0OiBMYXlvdXRzLmRlZmF1bHRMYXlvdXQoZGVmYXVsdENvZGVFeHBhbmQ6IGZhbHNlKSwKICBidWlsZGVyOiBidWlsZCwKKTsKCmJ1aWxkKEJ1aWxkQ29udGV4dCBjb250ZXh0LCBQZW4gcHJpbnQpIHsKICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKICBwcmludC5tYXJrZG93bignJycKIyDlj4LmlbDljJbojIPkvosKCiMjIOWPr+iwg+WPguiMg+S+iwoK5a2m5LmgZmx1dHRlci9kYXJ06L+Z57G7VUnmioDmnK/vvIzlpoLmnpzmnInlpb3nmoTojIPkvovorrLop6PlsZXnpLrvvIzkvJrmnoHlpKfliqDpgJ/lrabkuaDjgIIKCj4g8J+UlCAg546L6YGT6IyD5L6L5LiJ6KaB57Sg77yM5ZKM5LiA6aG55b+F5aSH5p2h5Lu277ya6KaB5b+r5LiN6KaB6b6f44CCCj4gLSDojIPkvovlj6/lsZXnpLrvvIzorrLop6NVSeaKgOacr++8jOS4jeWxleekuuWHuuadpe+8jOi0tOS4quWbvuaIluWNiuWkqeaYvuekuuS4jeWHuuadpeaApeatu+S6ugo+IC0g5Y+C5pWw5Y+v6LCD5pW077yM6IyD5L6Ld2lkdGg6MjAwLOaIkeaUuTIwMDDkvJrkuI3kvJrmiqXplJkKPiAtIOS7o+eggeWPr+WQjOatpe+8jOiwg+WPguWQjueahOS7o+eggeimgeiDveWKqOaAgeWQjOatpQoK5a6Y572R5Y+K5b6I5aSaZ2l0aHVi6IyD5L6L5bqT5bm25LiN5YW35aSH5Lul5LiK6KaB57Sg77yM6KaB5LmI5LiA5aCG6IyD5L6L5Luj56CB5peg6K6y6Kej77yM5peg5bGV56S677yM6KaB5LmI5LiA5aCG5Y+v5bGV56S677yM5Y2K5aSp5om+5LiN5Yiw5Luj56CB77yMCui/mOacieWumOe9keWkp+mHj0RhcnRQYWTojIPkvovvvIzlroznvo7kvZPnjrDkuoZkYXJ057yW6K+R6YCf5bqm5oWi6L+Z56eN6K+t6KiA54m554K577yM6b6f6YCf5LiA5qC377yM5p+l6ZiFVUnmlofmoaPvvIzlsLHmmK/mg7Plv6vpgJ8K57q16KeI5YW25aSW6KeC5b2i54q277yM57uT5p6c562J5Y2K5aSp77yM6ZW/5ZWl5qC36YO95Ye65LiN5p2l77yM5oCl5q275Lq677yM5Zyo6ICQ5b+D5Lin5aSx5YmN55qE5Yqg6L295oiQ5Yqf546H5Li6MTMlIG8o5LiA77i/5LiAKylvCgrmnKxub3Rl5Lit55qEVUnojIPkvovvvIzmlK/mjIHlj4LmlbDosIPoioLvvIzlj6/lv6vpgJ/lsZXnpLrlrp7pqozjgIIKCiMjIyBudW3lj4LmlbAKCuivt+aCqOeCueWHu+W8gOS4i+mdouiMg+S+i+Wwj+eureWktO+8jOS/ruaUuUNvbnRhaW5lci5oZWlnaHTvvIzop4Llr5/ojIPkvovlsZXnpLrlj4rku6PnoIHnmoTlj5jljJbvvJoKICAnJycpOwoKICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKICBwcmludChNYXRlU2FtcGxlKENvbnRhaW5lciRNYXRlKAogICAgaGVpZ2h0OiAxMDAsCiAgICBjaGlsZDogVGV4dCRNYXRlKCLor7fkv67mlLloZWlnaHQs6LCD6IqC6auY5bqmIiksCiAgKSkpOwoKICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKICBwcmludC5tYXJrZG93bignJycKIyMjIFN0cmluZ+WPguaVsAogICcnJyk7CgogIHByaW50LiRfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXygpOwogIHByaW50KE1hdGVTYW1wbGUoVGV4dCRNYXRlKCLmiJHmmK9UZXh0LmRhdGEs5L+u5pS55oiRIikpKTsKCiAgcHJpbnQuJF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fKCk7CiAgcHJpbnQubWFya2Rvd24oJycnCiMjIyBDb2xvcuWPguaVsAoKVE9ETyDmmoLml7blj6rog73mmL7npLrvvIzov5jkuI3og73nvJbovpEKICAnJycpOwoKICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKICBwcmludChNYXRlU2FtcGxlKENvbnRhaW5lciRNYXRlKAogICAgd2lkdGg6IDIwMCwKICAgIGhlaWdodDogMTAwLAogICAgY29sb3I6IENvbG9ycy5ncmVlbi5zaGFkZTQwMCwKICAgIGNsaXBCZWhhdmlvcjogQ2xpcC5ub25lLAogICAgY2hpbGQ6IENlbnRlciRNYXRlKAogICAgICBjaGlsZDogQ29udGFpbmVyJE1hdGUoCiAgICAgICAgd2lkdGg6IDEwMCwKICAgICAgICBoZWlnaHQ6IDUwLAogICAgICAgIGNvbG9yOiBDb2xvcnMucmVkLnNoYWRlNDAwLAogICAgICAgIGNsaXBCZWhhdmlvcjogQ2xpcC5ub25lLAogICAgICApLAogICAgKSwKICApKSk7CgogIHByaW50LiRfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXygpOwogIHByaW50Lm1hcmtkb3duKCcnJwojIyMgYm9vbOWPguaVsAogICcnJyk7CgogIHByaW50LiRfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXygpOwogIHByaW50KE1hdGVTYW1wbGUoQ29udGFpbmVyJE1hdGUoCiAgICB3aWR0aDogMTAwLAogICAgLy8gaGVpZ2h0OiAxMDAsCiAgICBjb2xvcjogQ29sb3JzLmJsdWUuc2hhZGUxMDAsCiAgICBjaGlsZDogVGV4dCRNYXRlKCLkv67mlLlUZXh0LnNvZnRXcmFwOiDoh6rliqjmjaLooYwiLCBzb2Z0V3JhcDogdHJ1ZSksCiAgKSkpOwoKICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKICBwcmludC5tYXJrZG93bihyJycnCiMjIyDmnprkuL7lj4LmlbAgCgrkv67mlLnkuIttYWluQXhpc0FsaWdubWVudO+8mgogICcnJyk7CgogIHByaW50LiRfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXygpOwogIHByaW50KE1hdGVTYW1wbGUoUm93JE1hdGUoCiAgICBtYWluQXhpc0FsaWdubWVudDogTWFpbkF4aXNBbGlnbm1lbnQuc3BhY2VBcm91bmQsCiAgICBjaGlsZHJlbjogWwogICAgICBDb250YWluZXIkTWF0ZSgKICAgICAgICB3aWR0aDogMTAwLAogICAgICAgIGhlaWdodDogMTAwLAogICAgICAgIGNvbG9yOiBDb2xvcnMuYmx1ZSwKICAgICAgKSwKICAgICAgQ29udGFpbmVyJE1hdGUoCiAgICAgICAgd2lkdGg6IDEwMCwKICAgICAgICBoZWlnaHQ6IDEwMCwKICAgICAgICBjb2xvcjogQ29sb3JzLmdyZWVuLAogICAgICApLAogICAgXSwKICApKSk7CgogIHByaW50LiRfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXygpOwogIHByaW50Lm1hcmtkb3duKHInJycKIyMg5YW25LuW54m55oCnCgojIyMg5oyJY2VsbOaooeeJiOeUn+aIkOiMg+S+i+S7o+eggQoK5oiR5Lus55qE6IyD5L6L5Luj56CB55Sf5oiQ5py65Yi26Jm954S255yL6LW35p2l6L+Y5LiN6ZSZ77yM5L2G5pyJ5Liq5bCP6Zeu6aKY77yM5Ye95pWw5Luj56CB6L6D6Zq+5aSE55CG77yM55uu5YmN55qE5YGa5rOV5piv77ya5o+Q5Y+WCk5vdGVib29rIOW9k+WJjWNlbGznmoTku6PnoIHkvZzkuLrmqKHniYjvvIzphY3lkIjku6PnoIHnlJ/miJDkuIDotbfvvIzlj6/ku6Xop6PlhrPmraTnlpHpmr7vvIzmgqjlj6/ku6Xop4Llr5/kuItjZWxs5pys6Lqr55qE5Luj56CBCuWSjOiMg+S+i+eUn+aIkOeahOS7o+eggeeahOW8guWQjO+8mgogICcnJyk7CgogIHByaW50LiRfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXygpOwogIHNob3dBYm91dCgpIHsKICAgIHNob3dBYm91dERpYWxvZygKICAgICAgY29udGV4dDogY29udGV4dCwKICAgICAgYXBwbGljYXRpb25OYW1lOiAnTWVudUJhciBTYW1wbGUnLAogICAgICBhcHBsaWNhdGlvblZlcnNpb246ICcxLjAuMCcsCiAgICApOwogIH0KCiAgLy8g5YyF5ZCrTWF0ZVNhbXBsZeiwg+eUqOeahOivreWPpeS8muiiq+iMg+S+i+S7o+eggeaTpumZpAogIHByaW50KAogICAgTWF0ZVNhbXBsZSgKICAgICAgRWxldmF0ZWRCdXR0b24kTWF0ZSgKICAgICAgICAgIG9uUHJlc3NlZDogc2hvd0Fib3V0Li5zYW1wbGVDb2RlID0gcmVmZXIoInNob3dBYm91dCIpLAogICAgICAgICAgY2hpbGQ6IFRleHQkTWF0ZSgiQnV0dG9uMSIpKSwKICAgICAgc2FtcGxlVGVtcGxhdGU6IFNhbXBsZVRlbXBsYXRlLmluY2x1ZGVDbGVhbkNlbGxDb2RlLAogICAgKSwKICApOwoKICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKICBwcmludC5tYXJrZG93bihyJycnCiMjIyDnlKjlvqrnjq/kuIDmrKHmgKfmnoTpgKDkuIDnu4TojIPkvosKICAnJycpOwoKICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKICBmb3IgKHZhciBtYWluQXhpc0FsaWdubWVudCBpbiBNYWluQXhpc0FsaWdubWVudC52YWx1ZXMpIHsKICAgIHByaW50KE1hdGVTYW1wbGUoUm93JE1hdGUoCiAgICAgIG1haW5BeGlzQWxpZ25tZW50OiBtYWluQXhpc0FsaWdubWVudCwKICAgICAgY2hpbGRyZW46IFsKICAgICAgICBFbGV2YXRlZEJ1dHRvbiRNYXRlKAogICAgICAgICAgICBvblByZXNzZWQ6ICgpIHt9Li5zYW1wbGVDb2RlU3RyID0gIigpe30iLAogICAgICAgICAgICBjaGlsZDogVGV4dCRNYXRlKCIke21haW5BeGlzQWxpZ25tZW50Lm5hbWV9OkJ1dHRvbjEiKSksCiAgICAgICAgRWxldmF0ZWRCdXR0b24kTWF0ZSgKICAgICAgICAgICAgb25QcmVzc2VkOiAoKSB7fS4uc2FtcGxlQ29kZVN0ciA9ICIoKXt9IiwKICAgICAgICAgICAgY2hpbGQ6IFRleHQkTWF0ZSgiJHttYWluQXhpc0FsaWdubWVudC5uYW1lfTpCdXR0b24yIikpLAogICAgICBdLAogICAgKSkpOwogIH0KfQo="
    );
