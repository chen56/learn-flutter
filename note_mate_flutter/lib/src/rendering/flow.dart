// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/rendering/flow.dart';
import 'dart:core';
import 'package:flutter/src/rendering/box.dart';
import 'dart:ui';
import 'package:note/mate.dart';

/// class RenderFlow extends RenderBox with ContainerRenderObjectMixin<RenderBox, FlowParentData>, RenderBoxContainerDefaultsMixin<RenderBox, FlowParentData> implements FlowPaintingContext
class RenderFlow$Mate extends RenderFlow with Mate<RenderFlow$Mate> {
  /// RenderFlow RenderFlow({List<RenderBox>? children, required FlowDelegate delegate, Clip clipBehavior = Clip.hardEdge})
  RenderFlow$Mate({
    /// optionalParameters: {List<RenderBox>? children} , hasDefaultValue:false, defaultValueCode:null
    List<RenderBox>? children,

    /// optionalParameters: {required FlowDelegate delegate} , hasDefaultValue:false, defaultValueCode:null
    required FlowDelegate delegate,

    /// optionalParameters: {Clip clipBehavior = Clip.hardEdge} , hasDefaultValue:true, defaultValueCode:Clip.hardEdge
    required Clip clipBehavior,
  }) : super(
          children: children,
          delegate: delegate,
          clipBehavior: clipBehavior,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => RenderFlow$Mate(
        children: p.get('children').value,
        delegate: p.get('delegate').value,
        clipBehavior: p.get('clipBehavior').value,
      ),
    );
    mateParams.putList('children', children);
    mateParams.put('delegate', delegate);
    mateParams.put('clipBehavior', clipBehavior);
  }
}
