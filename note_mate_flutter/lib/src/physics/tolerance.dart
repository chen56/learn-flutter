// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/physics/tolerance.dart';
import 'dart:core';
import 'package:note/mate.dart';

/// class Tolerance
class Tolerance$Mate extends Tolerance with Mate<Tolerance$Mate> {
  /// Tolerance Tolerance({double distance = _epsilonDefault, double time = _epsilonDefault, double velocity = _epsilonDefault})
  Tolerance$Mate({
    /// optionalParameters: {double distance = _epsilonDefault} , hasDefaultValue:true, defaultValueCode:_epsilonDefault
    required double distance,

    /// optionalParameters: {double time = _epsilonDefault} , hasDefaultValue:true, defaultValueCode:_epsilonDefault
    required double time,

    /// optionalParameters: {double velocity = _epsilonDefault} , hasDefaultValue:true, defaultValueCode:_epsilonDefault
    required double velocity,
  }) : super(
          distance: distance,
          time: time,
          velocity: velocity,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => Tolerance$Mate(
        distance: p.get('distance').value,
        time: p.get('time').value,
        velocity: p.get('velocity').value,
      ),
    );
    mateParams.put('distance', distance);
    mateParams.put('time', time);
    mateParams.put('velocity', velocity);
  }
}
