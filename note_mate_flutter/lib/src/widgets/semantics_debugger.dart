// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/widgets/semantics_debugger.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/painting/text_style.dart';
import 'package:note/mate.dart';

/// class SemanticsDebugger extends StatefulWidget
class SemanticsDebugger$Mate extends SemanticsDebugger with WidgetMate<SemanticsDebugger$Mate> {
  /// SemanticsDebugger SemanticsDebugger({Key? key, required Widget child, TextStyle labelStyle = const TextStyle(color: Color(0xFF000000), fontSize: 10.0, height: 0.8)})
  SemanticsDebugger$Mate({
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {required Widget child} , hasDefaultValue:false, defaultValueCode:null
    required Widget child,

    /// optionalParameters: {TextStyle labelStyle = const TextStyle(color: Color(0xFF000000), fontSize: 10.0, height: 0.8)} , hasDefaultValue:true, defaultValueCode:const TextStyle(color: Color(0xFF000000), fontSize: 10.0, height: 0.8)
    required TextStyle labelStyle,
  }) : super(
          key: key,
          child: child,
          labelStyle: labelStyle,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => SemanticsDebugger$Mate(
        key: p.get('key').value,
        child: p.get('child').value,
        labelStyle: p.get('labelStyle').value,
      ),
    );
    mateParams.put('key', key);
    mateParams.put('child', child);
    mateParams.put('labelStyle', labelStyle);
  }
}
