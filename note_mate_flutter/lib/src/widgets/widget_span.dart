// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/widgets/widget_span.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'dart:ui';
import 'package:flutter/src/painting/text_style.dart';
import 'package:note/mate.dart';

/// class WidgetSpan extends PlaceholderSpan
class WidgetSpan$Mate extends WidgetSpan with Mate<WidgetSpan$Mate> {
  /// WidgetSpan WidgetSpan({required Widget child, PlaceholderAlignment alignment = ui.PlaceholderAlignment.bottom, TextBaseline? baseline, TextStyle? style})
  WidgetSpan$Mate({
    /// optionalParameters: {required Widget child} , hasDefaultValue:false, defaultValueCode:null
    required Widget child,

    /// optionalParameters: {PlaceholderAlignment alignment = ui.PlaceholderAlignment.bottom} , hasDefaultValue:true, defaultValueCode:ui.PlaceholderAlignment.bottom
    required PlaceholderAlignment alignment,

    /// optionalParameters: {TextBaseline? baseline} , hasDefaultValue:false, defaultValueCode:null
    TextBaseline? baseline,

    /// optionalParameters: {TextStyle? style} , hasDefaultValue:false, defaultValueCode:null
    TextStyle? style,
  }) : super(
          child: child,
          alignment: alignment,
          baseline: baseline,
          style: style,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => WidgetSpan$Mate(
        child: p.get('child').build(),
        alignment: p.get('alignment').build(),
        baseline: p.get('baseline').build(),
        style: p.get('style').build(),
      ),
    );
    mateParams.put('child', child);
    mateParams.put('alignment', alignment);
    mateParams.put('baseline', baseline);
    mateParams.put('style', style);
  }
}
