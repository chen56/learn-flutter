// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/widgets/overflow_bar.dart';
import 'package:flutter/src/foundation/key.dart';
import 'dart:core';
import 'package:flutter/src/rendering/flex.dart';
import 'package:flutter/src/painting/basic_types.dart';
import 'dart:ui';
import 'package:flutter/src/widgets/framework.dart';
import 'package:note/mate.dart';

/// class OverflowBar extends MultiChildRenderObjectWidget
class OverflowBar$Mate extends OverflowBar with WidgetMate<OverflowBar$Mate> {
  /// OverflowBar OverflowBar({Key? key, double spacing = 0.0, MainAxisAlignment? alignment, double overflowSpacing = 0.0, OverflowBarAlignment overflowAlignment = OverflowBarAlignment.start, VerticalDirection overflowDirection = VerticalDirection.down, TextDirection? textDirection, Clip clipBehavior = Clip.none, List<Widget> children = const <Widget>[]})
  OverflowBar$Mate({
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {double spacing = 0.0} , hasDefaultValue:true, defaultValueCode:0.0
    required double spacing,

    /// optionalParameters: {MainAxisAlignment? alignment} , hasDefaultValue:false, defaultValueCode:null
    MainAxisAlignment? alignment,

    /// optionalParameters: {double overflowSpacing = 0.0} , hasDefaultValue:true, defaultValueCode:0.0
    required double overflowSpacing,

    /// optionalParameters: {OverflowBarAlignment overflowAlignment = OverflowBarAlignment.start} , hasDefaultValue:true, defaultValueCode:OverflowBarAlignment.start
    required OverflowBarAlignment overflowAlignment,

    /// optionalParameters: {VerticalDirection overflowDirection = VerticalDirection.down} , hasDefaultValue:true, defaultValueCode:VerticalDirection.down
    required VerticalDirection overflowDirection,

    /// optionalParameters: {TextDirection? textDirection} , hasDefaultValue:false, defaultValueCode:null
    TextDirection? textDirection,

    /// optionalParameters: {Clip clipBehavior = Clip.none} , hasDefaultValue:true, defaultValueCode:Clip.none
    required Clip clipBehavior,

    /// optionalParameters: {List<Widget> children = const <Widget>[]} , hasDefaultValue:true, defaultValueCode:const <Widget>[]
    required List<Widget> children,
  }) : super(
          key: key,
          spacing: spacing,
          alignment: alignment,
          overflowSpacing: overflowSpacing,
          overflowAlignment: overflowAlignment,
          overflowDirection: overflowDirection,
          textDirection: textDirection,
          clipBehavior: clipBehavior,
          children: children,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => OverflowBar$Mate(
        key: p.get('key').value,
        spacing: p.get('spacing').value,
        alignment: p.get('alignment').value,
        overflowSpacing: p.get('overflowSpacing').value,
        overflowAlignment: p.get('overflowAlignment').value,
        overflowDirection: p.get('overflowDirection').value,
        textDirection: p.get('textDirection').value,
        clipBehavior: p.get('clipBehavior').value,
        children: p.get('children').value,
      ),
    );
    mateParams.put('key', key);
    mateParams.put('spacing', spacing);
    mateParams.put('alignment', alignment);
    mateParams.put('overflowSpacing', overflowSpacing);
    mateParams.put('overflowAlignment', overflowAlignment);
    mateParams.put('overflowDirection', overflowDirection);
    mateParams.put('textDirection', textDirection);
    mateParams.put('clipBehavior', clipBehavior);
    mateParams.put('children', children);
  }
}
