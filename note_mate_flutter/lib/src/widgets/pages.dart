// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/widgets/pages.dart';
import 'package:flutter/src/widgets/navigator.dart';
import 'package:flutter/src/widgets/routes.dart';
import 'dart:core';
import 'dart:ui';
import 'package:note/mate.dart';

/// class PageRouteBuilder<T> extends PageRoute<T>
class PageRouteBuilder$Mate<T> extends PageRouteBuilder<T> with Mate<PageRouteBuilder$Mate> {
  /// PageRouteBuilder<T> PageRouteBuilder({RouteSettings? settings, required Widget Function(BuildContext, Animation<double>, Animation<double>) pageBuilder, Widget Function(BuildContext, Animation<double>, Animation<double>, Widget) transitionsBuilder = _defaultTransitionsBuilder, Duration transitionDuration = const Duration(milliseconds: 300), Duration reverseTransitionDuration = const Duration(milliseconds: 300), bool opaque = true, bool barrierDismissible = false, Color? barrierColor, String? barrierLabel, bool maintainState = true, bool fullscreenDialog = false, bool allowSnapshotting = true})
  PageRouteBuilder$Mate({
    /// optionalParameters: {RouteSettings? settings} , hasDefaultValue:false, defaultValueCode:null
    RouteSettings? settings,

    /// optionalParameters: {required Widget Function(BuildContext, Animation<double>, Animation<double>) pageBuilder} , hasDefaultValue:false, defaultValueCode:null
    required RoutePageBuilder pageBuilder,

    /// optionalParameters: {Widget Function(BuildContext, Animation<double>, Animation<double>, Widget) transitionsBuilder = _defaultTransitionsBuilder} , hasDefaultValue:true, defaultValueCode:_defaultTransitionsBuilder
    required RouteTransitionsBuilder transitionsBuilder,

    /// optionalParameters: {Duration transitionDuration = const Duration(milliseconds: 300)} , hasDefaultValue:true, defaultValueCode:const Duration(milliseconds: 300)
    required Duration transitionDuration,

    /// optionalParameters: {Duration reverseTransitionDuration = const Duration(milliseconds: 300)} , hasDefaultValue:true, defaultValueCode:const Duration(milliseconds: 300)
    required Duration reverseTransitionDuration,

    /// optionalParameters: {bool opaque = true} , hasDefaultValue:true, defaultValueCode:true
    required bool opaque,

    /// optionalParameters: {bool barrierDismissible = false} , hasDefaultValue:true, defaultValueCode:false
    required bool barrierDismissible,

    /// optionalParameters: {Color? barrierColor} , hasDefaultValue:false, defaultValueCode:null
    Color? barrierColor,

    /// optionalParameters: {String? barrierLabel} , hasDefaultValue:false, defaultValueCode:null
    String? barrierLabel,

    /// optionalParameters: {bool maintainState = true} , hasDefaultValue:true, defaultValueCode:true
    required bool maintainState,

    /// optionalParameters: {bool fullscreenDialog = false} , hasDefaultValue:true, defaultValueCode:false
    required bool fullscreenDialog,

    /// optionalParameters: {bool allowSnapshotting = true} , hasDefaultValue:true, defaultValueCode:true
    required bool allowSnapshotting,
  }) : super(
          settings: settings,
          pageBuilder: pageBuilder,
          transitionsBuilder: transitionsBuilder,
          transitionDuration: transitionDuration,
          reverseTransitionDuration: reverseTransitionDuration,
          opaque: opaque,
          barrierDismissible: barrierDismissible,
          barrierColor: barrierColor,
          barrierLabel: barrierLabel,
          maintainState: maintainState,
          fullscreenDialog: fullscreenDialog,
          allowSnapshotting: allowSnapshotting,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => PageRouteBuilder$Mate(
        settings: p.get('settings').value,
        pageBuilder: p.get('pageBuilder').value,
        transitionsBuilder: p.get('transitionsBuilder').value,
        transitionDuration: p.get('transitionDuration').value,
        reverseTransitionDuration: p.get('reverseTransitionDuration').value,
        opaque: p.get('opaque').value,
        barrierDismissible: p.get('barrierDismissible').value,
        barrierColor: p.get('barrierColor').value,
        barrierLabel: p.get('barrierLabel').value,
        maintainState: p.get('maintainState').value,
        fullscreenDialog: p.get('fullscreenDialog').value,
        allowSnapshotting: p.get('allowSnapshotting').value,
      ),
    );
    mateParams.put('settings', settings);
    mateParams.put('pageBuilder', pageBuilder);
    mateParams.put('transitionsBuilder', transitionsBuilder);
    mateParams.put('transitionDuration', transitionDuration);
    mateParams.put('reverseTransitionDuration', reverseTransitionDuration);
    mateParams.put('opaque', opaque);
    mateParams.put('barrierDismissible', barrierDismissible);
    mateParams.put('barrierColor', barrierColor);
    mateParams.put('barrierLabel', barrierLabel);
    mateParams.put('maintainState', maintainState);
    mateParams.put('fullscreenDialog', fullscreenDialog);
    mateParams.put('allowSnapshotting', allowSnapshotting);
  }
}
