// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/cupertino/search_field.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/editable_text.dart';
import 'package:flutter/src/foundation/basic_types.dart';
import 'dart:core';
import 'package:flutter/src/painting/text_style.dart';
import 'package:flutter/src/painting/box_decoration.dart';
import 'dart:ui';
import 'package:flutter/src/painting/border_radius.dart';
import 'package:flutter/src/services/text_input.dart';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:flutter/src/widgets/icon.dart';
import 'package:flutter/src/cupertino/text_field.dart';
import 'package:flutter/src/widgets/focus_manager.dart';
import 'package:note/mate.dart';

/// class CupertinoSearchTextField extends StatefulWidget
class CupertinoSearchTextField$Mate extends CupertinoSearchTextField with WidgetMate<CupertinoSearchTextField$Mate> {
  /// CupertinoSearchTextField CupertinoSearchTextField({Key? key, TextEditingController? controller, void Function(String)? onChanged, void Function(String)? onSubmitted, TextStyle? style, String? placeholder, TextStyle? placeholderStyle, BoxDecoration? decoration, Color? backgroundColor, BorderRadius? borderRadius, TextInputType? keyboardType = TextInputType.text, EdgeInsetsGeometry padding = const EdgeInsetsDirectional.fromSTEB(5.5, 8, 5.5, 8), Color itemColor = CupertinoColors.secondaryLabel, double itemSize = 20.0, EdgeInsetsGeometry prefixInsets = const EdgeInsetsDirectional.fromSTEB(6, 0, 0, 3), Widget prefixIcon = const Icon(CupertinoIcons.search), EdgeInsetsGeometry suffixInsets = const EdgeInsetsDirectional.fromSTEB(0, 0, 5, 2), Icon suffixIcon = const Icon(CupertinoIcons.xmark_circle_fill), OverlayVisibilityMode suffixMode = OverlayVisibilityMode.editing, void Function()? onSuffixTap, String? restorationId, FocusNode? focusNode, SmartQuotesType? smartQuotesType, SmartDashesType? smartDashesType, bool enableIMEPersonalizedLearning = true, bool autofocus = false, void Function()? onTap, bool autocorrect = true, bool? enabled})
  CupertinoSearchTextField$Mate({
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {TextEditingController? controller} , hasDefaultValue:false, defaultValueCode:null
    TextEditingController? controller,

    /// optionalParameters: {void Function(String)? onChanged} , hasDefaultValue:false, defaultValueCode:null
    ValueChanged<String>? onChanged,

    /// optionalParameters: {void Function(String)? onSubmitted} , hasDefaultValue:false, defaultValueCode:null
    ValueChanged<String>? onSubmitted,

    /// optionalParameters: {TextStyle? style} , hasDefaultValue:false, defaultValueCode:null
    TextStyle? style,

    /// optionalParameters: {String? placeholder} , hasDefaultValue:false, defaultValueCode:null
    String? placeholder,

    /// optionalParameters: {TextStyle? placeholderStyle} , hasDefaultValue:false, defaultValueCode:null
    TextStyle? placeholderStyle,

    /// optionalParameters: {BoxDecoration? decoration} , hasDefaultValue:false, defaultValueCode:null
    BoxDecoration? decoration,

    /// optionalParameters: {Color? backgroundColor} , hasDefaultValue:false, defaultValueCode:null
    Color? backgroundColor,

    /// optionalParameters: {BorderRadius? borderRadius} , hasDefaultValue:false, defaultValueCode:null
    BorderRadius? borderRadius,

    /// optionalParameters: {TextInputType? keyboardType = TextInputType.text} , hasDefaultValue:true, defaultValueCode:TextInputType.text
    TextInputType? keyboardType,

    /// optionalParameters: {EdgeInsetsGeometry padding = const EdgeInsetsDirectional.fromSTEB(5.5, 8, 5.5, 8)} , hasDefaultValue:true, defaultValueCode:const EdgeInsetsDirectional.fromSTEB(5.5, 8, 5.5, 8)
    required EdgeInsetsGeometry padding,

    /// optionalParameters: {Color itemColor = CupertinoColors.secondaryLabel} , hasDefaultValue:true, defaultValueCode:CupertinoColors.secondaryLabel
    required Color itemColor,

    /// optionalParameters: {double itemSize = 20.0} , hasDefaultValue:true, defaultValueCode:20.0
    required double itemSize,

    /// optionalParameters: {EdgeInsetsGeometry prefixInsets = const EdgeInsetsDirectional.fromSTEB(6, 0, 0, 3)} , hasDefaultValue:true, defaultValueCode:const EdgeInsetsDirectional.fromSTEB(6, 0, 0, 3)
    required EdgeInsetsGeometry prefixInsets,

    /// optionalParameters: {Widget prefixIcon = const Icon(CupertinoIcons.search)} , hasDefaultValue:true, defaultValueCode:const Icon(CupertinoIcons.search)
    required Widget prefixIcon,

    /// optionalParameters: {EdgeInsetsGeometry suffixInsets = const EdgeInsetsDirectional.fromSTEB(0, 0, 5, 2)} , hasDefaultValue:true, defaultValueCode:const EdgeInsetsDirectional.fromSTEB(0, 0, 5, 2)
    required EdgeInsetsGeometry suffixInsets,

    /// optionalParameters: {Icon suffixIcon = const Icon(CupertinoIcons.xmark_circle_fill)} , hasDefaultValue:true, defaultValueCode:const Icon(CupertinoIcons.xmark_circle_fill)
    required Icon suffixIcon,

    /// optionalParameters: {OverlayVisibilityMode suffixMode = OverlayVisibilityMode.editing} , hasDefaultValue:true, defaultValueCode:OverlayVisibilityMode.editing
    required OverlayVisibilityMode suffixMode,

    /// optionalParameters: {void Function()? onSuffixTap} , hasDefaultValue:false, defaultValueCode:null
    VoidCallback? onSuffixTap,

    /// optionalParameters: {String? restorationId} , hasDefaultValue:false, defaultValueCode:null
    String? restorationId,

    /// optionalParameters: {FocusNode? focusNode} , hasDefaultValue:false, defaultValueCode:null
    FocusNode? focusNode,

    /// optionalParameters: {SmartQuotesType? smartQuotesType} , hasDefaultValue:false, defaultValueCode:null
    SmartQuotesType? smartQuotesType,

    /// optionalParameters: {SmartDashesType? smartDashesType} , hasDefaultValue:false, defaultValueCode:null
    SmartDashesType? smartDashesType,

    /// optionalParameters: {bool enableIMEPersonalizedLearning = true} , hasDefaultValue:true, defaultValueCode:true
    required bool enableIMEPersonalizedLearning,

    /// optionalParameters: {bool autofocus = false} , hasDefaultValue:true, defaultValueCode:false
    required bool autofocus,

    /// optionalParameters: {void Function()? onTap} , hasDefaultValue:false, defaultValueCode:null
    VoidCallback? onTap,

    /// optionalParameters: {bool autocorrect = true} , hasDefaultValue:true, defaultValueCode:true
    required bool autocorrect,

    /// optionalParameters: {bool? enabled} , hasDefaultValue:false, defaultValueCode:null
    bool? enabled,
  }) : super(
          key: key,
          controller: controller,
          onChanged: onChanged,
          onSubmitted: onSubmitted,
          style: style,
          placeholder: placeholder,
          placeholderStyle: placeholderStyle,
          decoration: decoration,
          backgroundColor: backgroundColor,
          borderRadius: borderRadius,
          keyboardType: keyboardType,
          padding: padding,
          itemColor: itemColor,
          itemSize: itemSize,
          prefixInsets: prefixInsets,
          prefixIcon: prefixIcon,
          suffixInsets: suffixInsets,
          suffixIcon: suffixIcon,
          suffixMode: suffixMode,
          onSuffixTap: onSuffixTap,
          restorationId: restorationId,
          focusNode: focusNode,
          smartQuotesType: smartQuotesType,
          smartDashesType: smartDashesType,
          enableIMEPersonalizedLearning: enableIMEPersonalizedLearning,
          autofocus: autofocus,
          onTap: onTap,
          autocorrect: autocorrect,
          enabled: enabled,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => CupertinoSearchTextField$Mate(
        key: p.get('key').value,
        controller: p.get('controller').value,
        onChanged: p.get('onChanged').value,
        onSubmitted: p.get('onSubmitted').value,
        style: p.get('style').value,
        placeholder: p.get('placeholder').value,
        placeholderStyle: p.get('placeholderStyle').value,
        decoration: p.get('decoration').value,
        backgroundColor: p.get('backgroundColor').value,
        borderRadius: p.get('borderRadius').value,
        keyboardType: p.get('keyboardType').value,
        padding: p.get('padding').value,
        itemColor: p.get('itemColor').value,
        itemSize: p.get('itemSize').value,
        prefixInsets: p.get('prefixInsets').value,
        prefixIcon: p.get('prefixIcon').value,
        suffixInsets: p.get('suffixInsets').value,
        suffixIcon: p.get('suffixIcon').value,
        suffixMode: p.get('suffixMode').value,
        onSuffixTap: p.get('onSuffixTap').value,
        restorationId: p.get('restorationId').value,
        focusNode: p.get('focusNode').value,
        smartQuotesType: p.get('smartQuotesType').value,
        smartDashesType: p.get('smartDashesType').value,
        enableIMEPersonalizedLearning: p.get('enableIMEPersonalizedLearning').value,
        autofocus: p.get('autofocus').value,
        onTap: p.get('onTap').value,
        autocorrect: p.get('autocorrect').value,
        enabled: p.get('enabled').value,
      ),
    );
    mateParams.put('key', init: key);
    mateParams.put('controller', init: controller);
    mateParams.put('onChanged', init: onChanged);
    mateParams.put('onSubmitted', init: onSubmitted);
    mateParams.put('style', init: style);
    mateParams.put('placeholder', init: placeholder);
    mateParams.put('placeholderStyle', init: placeholderStyle);
    mateParams.put('decoration', init: decoration);
    mateParams.put('backgroundColor', init: backgroundColor);
    mateParams.put('borderRadius', init: borderRadius);
    mateParams.put('keyboardType', init: keyboardType);
    mateParams.put('padding', init: padding);
    mateParams.put('itemColor', init: itemColor);
    mateParams.put('itemSize', init: itemSize);
    mateParams.put('prefixInsets', init: prefixInsets);
    mateParams.put('prefixIcon', init: prefixIcon);
    mateParams.put('suffixInsets', init: suffixInsets);
    mateParams.put('suffixIcon', init: suffixIcon);
    mateParams.put('suffixMode', init: suffixMode);
    mateParams.put('onSuffixTap', init: onSuffixTap);
    mateParams.put('restorationId', init: restorationId);
    mateParams.put('focusNode', init: focusNode);
    mateParams.put('smartQuotesType', init: smartQuotesType);
    mateParams.put('smartDashesType', init: smartDashesType);
    mateParams.put('enableIMEPersonalizedLearning', init: enableIMEPersonalizedLearning);
    mateParams.put('autofocus', init: autofocus);
    mateParams.put('onTap', init: onTap);
    mateParams.put('autocorrect', init: autocorrect);
    mateParams.put('enabled', init: enabled);
  }
}
