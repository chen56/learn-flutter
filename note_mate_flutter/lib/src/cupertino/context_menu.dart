// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/cupertino/context_menu.dart';
import 'package:flutter/src/foundation/key.dart';
import 'dart:core';
import 'package:flutter/src/widgets/framework.dart';
import 'package:note/mate.dart';

/// class CupertinoContextMenu extends StatefulWidget
class CupertinoContextMenu$Mate extends CupertinoContextMenu with WidgetMate<CupertinoContextMenu$Mate> {
  /// CupertinoContextMenu CupertinoContextMenu({Key? key, required List<Widget> actions, required Widget child, bool enableHapticFeedback = false, Widget Function(BuildContext, Animation<double>, Widget)? previewBuilder = _defaultPreviewBuilder})
  CupertinoContextMenu$Mate({
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {required List<Widget> actions} , hasDefaultValue:false, defaultValueCode:null
    required List<Widget> actions,

    /// optionalParameters: {required Widget child} , hasDefaultValue:false, defaultValueCode:null
    required Widget child,

    /// optionalParameters: {bool enableHapticFeedback = false} , hasDefaultValue:true, defaultValueCode:false
    required bool enableHapticFeedback,
  }) : super(
          key: key,
          actions: actions,
          child: child,
          enableHapticFeedback: enableHapticFeedback,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => CupertinoContextMenu$Mate(
        key: p.get('key').value,
        actions: p.get('actions').value,
        child: p.get('child').value,
        enableHapticFeedback: p.get('enableHapticFeedback').value,
      ),
    );
    mateParams.put('key', key);
    mateParams.putList('actions', actions);
    mateParams.put('child', child);
    mateParams.put('enableHapticFeedback', enableHapticFeedback);
  }

  /// CupertinoContextMenu CupertinoContextMenu.builder({Key? key, required List<Widget> actions, required Widget Function(BuildContext, Animation<double>) builder, bool enableHapticFeedback = false})
  CupertinoContextMenu$Mate.builder({
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {required List<Widget> actions} , hasDefaultValue:false, defaultValueCode:null
    required List<Widget> actions,

    /// optionalParameters: {required Widget Function(BuildContext, Animation<double>) builder} , hasDefaultValue:false, defaultValueCode:null
    required CupertinoContextMenuBuilder builder,

    /// optionalParameters: {bool enableHapticFeedback = false} , hasDefaultValue:true, defaultValueCode:false
    required bool enableHapticFeedback,
  }) : super.builder(
          key: key,
          actions: actions,
          builder: builder,
          enableHapticFeedback: enableHapticFeedback,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => CupertinoContextMenu$Mate.builder(
        key: p.get('key').value,
        actions: p.get('actions').value,
        builder: p.get('builder').value,
        enableHapticFeedback: p.get('enableHapticFeedback').value,
      ),
    );
    mateParams.put('key', key);
    mateParams.putList('actions', actions);
    mateParams.put('builder', builder);
    mateParams.put('enableHapticFeedback', enableHapticFeedback);
  }
}
