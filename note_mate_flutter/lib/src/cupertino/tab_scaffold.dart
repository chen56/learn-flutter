// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/cupertino/tab_scaffold.dart';
import 'dart:core';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/cupertino/bottom_tab_bar.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'dart:ui';

/// class CupertinoTabController extends ChangeNotifier
class CupertinoTabController$Mate extends CupertinoTabController with Mate<CupertinoTabController$Mate> {
  /// CupertinoTabController CupertinoTabController({int initialIndex = 0})
  CupertinoTabController$Mate(
      {
      /// optionalParameters: {int initialIndex = 0} , hasDefaultValue:true, defaultValueCode:0
      required int initialIndex})
      : super(initialIndex: initialIndex) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => CupertinoTabController$Mate(initialIndex: p.get('initialIndex').value),
    );
    mateParams.put('initialIndex', init: initialIndex);
  }
}

/// class CupertinoTabScaffold extends StatefulWidget
class CupertinoTabScaffold$Mate extends CupertinoTabScaffold with WidgetMate<CupertinoTabScaffold$Mate> {
  /// CupertinoTabScaffold CupertinoTabScaffold({Key? key, required CupertinoTabBar tabBar, required Widget Function(BuildContext, int) tabBuilder, CupertinoTabController? controller, Color? backgroundColor, bool resizeToAvoidBottomInset = true, String? restorationId})
  CupertinoTabScaffold$Mate({
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {required CupertinoTabBar tabBar} , hasDefaultValue:false, defaultValueCode:null
    required CupertinoTabBar tabBar,

    /// optionalParameters: {required Widget Function(BuildContext, int) tabBuilder} , hasDefaultValue:false, defaultValueCode:null
    required IndexedWidgetBuilder tabBuilder,

    /// optionalParameters: {CupertinoTabController? controller} , hasDefaultValue:false, defaultValueCode:null
    CupertinoTabController? controller,

    /// optionalParameters: {Color? backgroundColor} , hasDefaultValue:false, defaultValueCode:null
    Color? backgroundColor,

    /// optionalParameters: {bool resizeToAvoidBottomInset = true} , hasDefaultValue:true, defaultValueCode:true
    required bool resizeToAvoidBottomInset,

    /// optionalParameters: {String? restorationId} , hasDefaultValue:false, defaultValueCode:null
    String? restorationId,
  }) : super(
          key: key,
          tabBar: tabBar,
          tabBuilder: tabBuilder,
          controller: controller,
          backgroundColor: backgroundColor,
          resizeToAvoidBottomInset: resizeToAvoidBottomInset,
          restorationId: restorationId,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => CupertinoTabScaffold$Mate(
        key: p.get('key').value,
        tabBar: p.get('tabBar').value,
        tabBuilder: p.get('tabBuilder').value,
        controller: p.get('controller').value,
        backgroundColor: p.get('backgroundColor').value,
        resizeToAvoidBottomInset: p.get('resizeToAvoidBottomInset').value,
        restorationId: p.get('restorationId').value,
      ),
    );
    mateParams.put('key', init: key);
    mateParams.put('tabBar', init: tabBar);
    mateParams.put('tabBuilder', init: tabBuilder);
    mateParams.put('controller', init: controller);
    mateParams.put('backgroundColor', init: backgroundColor);
    mateParams.put('resizeToAvoidBottomInset', init: resizeToAvoidBottomInset);
    mateParams.put('restorationId', init: restorationId);
  }
}

/// class RestorableCupertinoTabController extends RestorableChangeNotifier<CupertinoTabController>
class RestorableCupertinoTabController$Mate extends RestorableCupertinoTabController
    with Mate<RestorableCupertinoTabController$Mate> {
  /// RestorableCupertinoTabController RestorableCupertinoTabController({int initialIndex = 0})
  RestorableCupertinoTabController$Mate(
      {
      /// optionalParameters: {int initialIndex = 0} , hasDefaultValue:true, defaultValueCode:0
      required int initialIndex})
      : super(initialIndex: initialIndex) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => RestorableCupertinoTabController$Mate(initialIndex: p.get('initialIndex').value),
    );
    mateParams.put('initialIndex', init: initialIndex);
  }
}
