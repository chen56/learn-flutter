// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/cupertino/switch.dart';
import 'package:flutter/src/foundation/key.dart';
import 'dart:core';
import 'package:flutter/src/foundation/basic_types.dart';
import 'dart:ui';
import 'package:flutter/src/gestures/recognizer.dart';
import 'package:note/mate.dart';

/// class CupertinoSwitch extends StatefulWidget
class CupertinoSwitch$Mate extends CupertinoSwitch with WidgetMate<CupertinoSwitch$Mate> {
  /// CupertinoSwitch CupertinoSwitch({Key? key, required bool value, required void Function(bool)? onChanged, Color? activeColor, Color? trackColor, Color? thumbColor, bool? applyTheme, Color? focusColor, DragStartBehavior dragStartBehavior = DragStartBehavior.start})
  CupertinoSwitch$Mate({
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {required bool value} , hasDefaultValue:false, defaultValueCode:null
    required bool value,

    /// optionalParameters: {required void Function(bool)? onChanged} , hasDefaultValue:false, defaultValueCode:null
    required ValueChanged<bool>? onChanged,

    /// optionalParameters: {Color? activeColor} , hasDefaultValue:false, defaultValueCode:null
    Color? activeColor,

    /// optionalParameters: {Color? trackColor} , hasDefaultValue:false, defaultValueCode:null
    Color? trackColor,

    /// optionalParameters: {Color? thumbColor} , hasDefaultValue:false, defaultValueCode:null
    Color? thumbColor,

    /// optionalParameters: {bool? applyTheme} , hasDefaultValue:false, defaultValueCode:null
    bool? applyTheme,

    /// optionalParameters: {Color? focusColor} , hasDefaultValue:false, defaultValueCode:null
    Color? focusColor,

    /// optionalParameters: {DragStartBehavior dragStartBehavior = DragStartBehavior.start} , hasDefaultValue:true, defaultValueCode:DragStartBehavior.start
    required DragStartBehavior dragStartBehavior,
  }) : super(
          key: key,
          value: value,
          onChanged: onChanged,
          activeColor: activeColor,
          trackColor: trackColor,
          thumbColor: thumbColor,
          applyTheme: applyTheme,
          focusColor: focusColor,
          dragStartBehavior: dragStartBehavior,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => CupertinoSwitch$Mate(
        key: p.get('key').value,
        value: p.get('value').value,
        onChanged: p.get('onChanged').value,
        activeColor: p.get('activeColor').value,
        trackColor: p.get('trackColor').value,
        thumbColor: p.get('thumbColor').value,
        applyTheme: p.get('applyTheme').value,
        focusColor: p.get('focusColor').value,
        dragStartBehavior: p.get('dragStartBehavior').value,
      ),
    );
    mateParams.put('key', key);
    mateParams.put('value', value);
    mateParams.put('onChanged', onChanged);
    mateParams.put('activeColor', activeColor);
    mateParams.put('trackColor', trackColor);
    mateParams.put('thumbColor', thumbColor);
    mateParams.put('applyTheme', applyTheme);
    mateParams.put('focusColor', focusColor);
    mateParams.put('dragStartBehavior', dragStartBehavior);
  }
}
