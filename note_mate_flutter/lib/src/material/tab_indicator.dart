// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/tab_indicator.dart';
import 'package:flutter/src/painting/border_radius.dart';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:note/mate.dart';

/// class UnderlineTabIndicator extends Decoration
class UnderlineTabIndicator$Mate extends UnderlineTabIndicator with Mate<UnderlineTabIndicator$Mate> {
  /// UnderlineTabIndicator UnderlineTabIndicator({BorderRadius? borderRadius, BorderSide borderSide = const BorderSide(width: 2.0, color: Colors.white), EdgeInsetsGeometry insets = EdgeInsets.zero})
  UnderlineTabIndicator$Mate({
    /// optionalParameters: {BorderRadius? borderRadius} , hasDefaultValue:false, defaultValueCode:null
    BorderRadius? borderRadius,

    /// optionalParameters: {BorderSide borderSide = const BorderSide(width: 2.0, color: Colors.white)} , hasDefaultValue:true, defaultValueCode:const BorderSide(width: 2.0, color: Colors.white)
    required BorderSide borderSide,

    /// optionalParameters: {EdgeInsetsGeometry insets = EdgeInsets.zero} , hasDefaultValue:true, defaultValueCode:EdgeInsets.zero
    required EdgeInsetsGeometry insets,
  }) : super(
          borderRadius: borderRadius,
          borderSide: borderSide,
          insets: insets,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => UnderlineTabIndicator$Mate(
        borderRadius: p.get('borderRadius').value,
        borderSide: p.get('borderSide').value,
        insets: p.get('insets').value,
      ),
    );
    mateParams.put('borderRadius', borderRadius);
    mateParams.put('borderSide', borderSide);
    mateParams.put('insets', insets);
  }
}
