// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/popup_menu_theme.dart';
import 'dart:ui';
import 'package:flutter/src/painting/borders.dart';
import 'dart:core';
import 'package:flutter/src/painting/text_style.dart';
import 'package:flutter/src/material/material_state.dart';
import 'package:flutter/src/services/mouse_cursor.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';
import 'package:flutter/src/widgets/framework.dart';

/// class PopupMenuThemeData with Diagnosticable
class PopupMenuThemeData$Mate extends PopupMenuThemeData with Mate<PopupMenuThemeData$Mate> {
  /// PopupMenuThemeData PopupMenuThemeData({Color? color, ShapeBorder? shape, double? elevation, Color? shadowColor, Color? surfaceTintColor, TextStyle? textStyle, MaterialStateProperty<TextStyle?>? labelTextStyle, bool? enableFeedback, MaterialStateProperty<MouseCursor?>? mouseCursor, PopupMenuPosition? position})
  PopupMenuThemeData$Mate({
    /// optionalParameters: {Color? color} , hasDefaultValue:false, defaultValueCode:null
    Color? color,

    /// optionalParameters: {ShapeBorder? shape} , hasDefaultValue:false, defaultValueCode:null
    ShapeBorder? shape,

    /// optionalParameters: {double? elevation} , hasDefaultValue:false, defaultValueCode:null
    double? elevation,

    /// optionalParameters: {Color? shadowColor} , hasDefaultValue:false, defaultValueCode:null
    Color? shadowColor,

    /// optionalParameters: {Color? surfaceTintColor} , hasDefaultValue:false, defaultValueCode:null
    Color? surfaceTintColor,

    /// optionalParameters: {TextStyle? textStyle} , hasDefaultValue:false, defaultValueCode:null
    TextStyle? textStyle,

    /// optionalParameters: {MaterialStateProperty<TextStyle?>? labelTextStyle} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<TextStyle?>? labelTextStyle,

    /// optionalParameters: {bool? enableFeedback} , hasDefaultValue:false, defaultValueCode:null
    bool? enableFeedback,

    /// optionalParameters: {MaterialStateProperty<MouseCursor?>? mouseCursor} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<MouseCursor?>? mouseCursor,

    /// optionalParameters: {PopupMenuPosition? position} , hasDefaultValue:false, defaultValueCode:null
    PopupMenuPosition? position,
  }) : super(
          color: color,
          shape: shape,
          elevation: elevation,
          shadowColor: shadowColor,
          surfaceTintColor: surfaceTintColor,
          textStyle: textStyle,
          labelTextStyle: labelTextStyle,
          enableFeedback: enableFeedback,
          mouseCursor: mouseCursor,
          position: position,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => PopupMenuThemeData$Mate(
        color: p.get('color').value,
        shape: p.get('shape').value,
        elevation: p.get('elevation').value,
        shadowColor: p.get('shadowColor').value,
        surfaceTintColor: p.get('surfaceTintColor').value,
        textStyle: p.get('textStyle').value,
        labelTextStyle: p.get('labelTextStyle').value,
        enableFeedback: p.get('enableFeedback').value,
        mouseCursor: p.get('mouseCursor').value,
        position: p.get('position').value,
      ),
    );
    mateParams.put('color', init: color);
    mateParams.put('shape', init: shape);
    mateParams.put('elevation', init: elevation);
    mateParams.put('shadowColor', init: shadowColor);
    mateParams.put('surfaceTintColor', init: surfaceTintColor);
    mateParams.put('textStyle', init: textStyle);
    mateParams.put('labelTextStyle', init: labelTextStyle);
    mateParams.put('enableFeedback', init: enableFeedback);
    mateParams.put('mouseCursor', init: mouseCursor);
    mateParams.put('position', init: position);
  }
}

/// class PopupMenuTheme extends InheritedTheme
class PopupMenuTheme$Mate extends PopupMenuTheme with WidgetMate<PopupMenuTheme$Mate> {
  /// PopupMenuTheme PopupMenuTheme({Key? key, required PopupMenuThemeData data, required Widget child})
  PopupMenuTheme$Mate({
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {required PopupMenuThemeData data} , hasDefaultValue:false, defaultValueCode:null
    required PopupMenuThemeData data,

    /// optionalParameters: {required Widget child} , hasDefaultValue:false, defaultValueCode:null
    required Widget child,
  }) : super(
          key: key,
          data: data,
          child: child,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => PopupMenuTheme$Mate(
        key: p.get('key').value,
        data: p.get('data').value,
        child: p.get('child').value,
      ),
    );
    mateParams.put('key', init: key);
    mateParams.put('data', init: data);
    mateParams.put('child', init: child);
  }
}
