// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/action_icons_theme.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:note/mate.dart';
import 'package:flutter/src/foundation/key.dart';

/// class ActionIconThemeData with Diagnosticable
class ActionIconThemeData$Mate extends ActionIconThemeData with Mate<ActionIconThemeData$Mate> {
  /// ActionIconThemeData ActionIconThemeData({Widget Function(BuildContext)? backButtonIconBuilder, Widget Function(BuildContext)? closeButtonIconBuilder, Widget Function(BuildContext)? drawerButtonIconBuilder, Widget Function(BuildContext)? endDrawerButtonIconBuilder})
  ActionIconThemeData$Mate({
    /// optionalParameters: {Widget Function(BuildContext)? backButtonIconBuilder} , hasDefaultValue:false, defaultValueCode:null
    WidgetBuilder? backButtonIconBuilder,

    /// optionalParameters: {Widget Function(BuildContext)? closeButtonIconBuilder} , hasDefaultValue:false, defaultValueCode:null
    WidgetBuilder? closeButtonIconBuilder,

    /// optionalParameters: {Widget Function(BuildContext)? drawerButtonIconBuilder} , hasDefaultValue:false, defaultValueCode:null
    WidgetBuilder? drawerButtonIconBuilder,

    /// optionalParameters: {Widget Function(BuildContext)? endDrawerButtonIconBuilder} , hasDefaultValue:false, defaultValueCode:null
    WidgetBuilder? endDrawerButtonIconBuilder,
  }) : super(
          backButtonIconBuilder: backButtonIconBuilder,
          closeButtonIconBuilder: closeButtonIconBuilder,
          drawerButtonIconBuilder: drawerButtonIconBuilder,
          endDrawerButtonIconBuilder: endDrawerButtonIconBuilder,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => ActionIconThemeData$Mate(
        backButtonIconBuilder: p.get('backButtonIconBuilder').value,
        closeButtonIconBuilder: p.get('closeButtonIconBuilder').value,
        drawerButtonIconBuilder: p.get('drawerButtonIconBuilder').value,
        endDrawerButtonIconBuilder: p.get('endDrawerButtonIconBuilder').value,
      ),
    );
    mateParams.put('backButtonIconBuilder', backButtonIconBuilder);
    mateParams.put('closeButtonIconBuilder', closeButtonIconBuilder);
    mateParams.put('drawerButtonIconBuilder', drawerButtonIconBuilder);
    mateParams.put('endDrawerButtonIconBuilder', endDrawerButtonIconBuilder);
  }
}

/// class ActionIconTheme extends InheritedTheme
class ActionIconTheme$Mate extends ActionIconTheme with WidgetMate<ActionIconTheme$Mate> {
  /// ActionIconTheme ActionIconTheme({Key? key, required ActionIconThemeData data, required Widget child})
  ActionIconTheme$Mate({
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {required ActionIconThemeData data} , hasDefaultValue:false, defaultValueCode:null
    required ActionIconThemeData data,

    /// optionalParameters: {required Widget child} , hasDefaultValue:false, defaultValueCode:null
    required Widget child,
  }) : super(
          key: key,
          data: data,
          child: child,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => ActionIconTheme$Mate(
        key: p.get('key').value,
        data: p.get('data').value,
        child: p.get('child').value,
      ),
    );
    mateParams.put('key', key);
    mateParams.put('data', data);
    mateParams.put('child', child);
  }
}
