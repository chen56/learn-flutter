// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/app_bar_theme.dart';
import 'dart:ui';
import 'dart:core';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/widgets/icon_theme_data.dart';
import 'package:flutter/src/painting/text_style.dart';
import 'package:flutter/src/services/system_chrome.dart';
import 'package:note/mate.dart';

/// class AppBarTheme with Diagnosticable
class AppBarTheme$Mate extends AppBarTheme with Mate<AppBarTheme$Mate> {
  /// AppBarTheme AppBarTheme({Brightness? brightness, Color? color, Color? backgroundColor, Color? foregroundColor, double? elevation, double? scrolledUnderElevation, Color? shadowColor, Color? surfaceTintColor, ShapeBorder? shape, IconThemeData? iconTheme, IconThemeData? actionsIconTheme, bool? centerTitle, double? titleSpacing, double? toolbarHeight, TextStyle? toolbarTextStyle, TextStyle? titleTextStyle, SystemUiOverlayStyle? systemOverlayStyle, bool? backwardsCompatibility})
  AppBarTheme$Mate({
    /// optionalParameters: {Color? color} , hasDefaultValue:false, defaultValueCode:null
    Color? color,

    /// optionalParameters: {Color? backgroundColor} , hasDefaultValue:false, defaultValueCode:null
    Color? backgroundColor,

    /// optionalParameters: {Color? foregroundColor} , hasDefaultValue:false, defaultValueCode:null
    Color? foregroundColor,

    /// optionalParameters: {double? elevation} , hasDefaultValue:false, defaultValueCode:null
    double? elevation,

    /// optionalParameters: {double? scrolledUnderElevation} , hasDefaultValue:false, defaultValueCode:null
    double? scrolledUnderElevation,

    /// optionalParameters: {Color? shadowColor} , hasDefaultValue:false, defaultValueCode:null
    Color? shadowColor,

    /// optionalParameters: {Color? surfaceTintColor} , hasDefaultValue:false, defaultValueCode:null
    Color? surfaceTintColor,

    /// optionalParameters: {ShapeBorder? shape} , hasDefaultValue:false, defaultValueCode:null
    ShapeBorder? shape,

    /// optionalParameters: {IconThemeData? iconTheme} , hasDefaultValue:false, defaultValueCode:null
    IconThemeData? iconTheme,

    /// optionalParameters: {IconThemeData? actionsIconTheme} , hasDefaultValue:false, defaultValueCode:null
    IconThemeData? actionsIconTheme,

    /// optionalParameters: {bool? centerTitle} , hasDefaultValue:false, defaultValueCode:null
    bool? centerTitle,

    /// optionalParameters: {double? titleSpacing} , hasDefaultValue:false, defaultValueCode:null
    double? titleSpacing,

    /// optionalParameters: {double? toolbarHeight} , hasDefaultValue:false, defaultValueCode:null
    double? toolbarHeight,

    /// optionalParameters: {TextStyle? toolbarTextStyle} , hasDefaultValue:false, defaultValueCode:null
    TextStyle? toolbarTextStyle,

    /// optionalParameters: {TextStyle? titleTextStyle} , hasDefaultValue:false, defaultValueCode:null
    TextStyle? titleTextStyle,

    /// optionalParameters: {SystemUiOverlayStyle? systemOverlayStyle} , hasDefaultValue:false, defaultValueCode:null
    SystemUiOverlayStyle? systemOverlayStyle,
  }) : super(
          color: color,
          backgroundColor: backgroundColor,
          foregroundColor: foregroundColor,
          elevation: elevation,
          scrolledUnderElevation: scrolledUnderElevation,
          shadowColor: shadowColor,
          surfaceTintColor: surfaceTintColor,
          shape: shape,
          iconTheme: iconTheme,
          actionsIconTheme: actionsIconTheme,
          centerTitle: centerTitle,
          titleSpacing: titleSpacing,
          toolbarHeight: toolbarHeight,
          toolbarTextStyle: toolbarTextStyle,
          titleTextStyle: titleTextStyle,
          systemOverlayStyle: systemOverlayStyle,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => AppBarTheme$Mate(
        color: p.get('color').value,
        backgroundColor: p.get('backgroundColor').value,
        foregroundColor: p.get('foregroundColor').value,
        elevation: p.get('elevation').value,
        scrolledUnderElevation: p.get('scrolledUnderElevation').value,
        shadowColor: p.get('shadowColor').value,
        surfaceTintColor: p.get('surfaceTintColor').value,
        shape: p.get('shape').value,
        iconTheme: p.get('iconTheme').value,
        actionsIconTheme: p.get('actionsIconTheme').value,
        centerTitle: p.get('centerTitle').value,
        titleSpacing: p.get('titleSpacing').value,
        toolbarHeight: p.get('toolbarHeight').value,
        toolbarTextStyle: p.get('toolbarTextStyle').value,
        titleTextStyle: p.get('titleTextStyle').value,
        systemOverlayStyle: p.get('systemOverlayStyle').value,
      ),
    );
    mateParams.put('color', init: color);
    mateParams.put('backgroundColor', init: backgroundColor);
    mateParams.put('foregroundColor', init: foregroundColor);
    mateParams.put('elevation', init: elevation);
    mateParams.put('scrolledUnderElevation', init: scrolledUnderElevation);
    mateParams.put('shadowColor', init: shadowColor);
    mateParams.put('surfaceTintColor', init: surfaceTintColor);
    mateParams.put('shape', init: shape);
    mateParams.put('iconTheme', init: iconTheme);
    mateParams.put('actionsIconTheme', init: actionsIconTheme);
    mateParams.put('centerTitle', init: centerTitle);
    mateParams.put('titleSpacing', init: titleSpacing);
    mateParams.put('toolbarHeight', init: toolbarHeight);
    mateParams.put('toolbarTextStyle', init: toolbarTextStyle);
    mateParams.put('titleTextStyle', init: titleTextStyle);
    mateParams.put('systemOverlayStyle', init: systemOverlayStyle);
  }
}
