// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/menu_style.dart';
import 'package:flutter/src/material/material_state.dart';
import 'dart:ui';
import 'dart:core';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/services/mouse_cursor.dart';
import 'package:flutter/src/material/theme_data.dart';
import 'package:flutter/src/painting/alignment.dart';
import 'package:note/mate.dart';

/// class MenuStyle with Diagnosticable
class MenuStyle$Mate extends MenuStyle with Mate<MenuStyle$Mate> {
  /// MenuStyle MenuStyle({MaterialStateProperty<Color?>? backgroundColor, MaterialStateProperty<Color?>? shadowColor, MaterialStateProperty<Color?>? surfaceTintColor, MaterialStateProperty<double?>? elevation, MaterialStateProperty<EdgeInsetsGeometry?>? padding, MaterialStateProperty<Size?>? minimumSize, MaterialStateProperty<Size?>? fixedSize, MaterialStateProperty<Size?>? maximumSize, MaterialStateProperty<BorderSide?>? side, MaterialStateProperty<OutlinedBorder?>? shape, MaterialStateProperty<MouseCursor?>? mouseCursor, VisualDensity? visualDensity, AlignmentGeometry? alignment})
  MenuStyle$Mate({
    /// optionalParameters: {MaterialStateProperty<Color?>? backgroundColor} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<Color?>? backgroundColor,

    /// optionalParameters: {MaterialStateProperty<Color?>? shadowColor} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<Color?>? shadowColor,

    /// optionalParameters: {MaterialStateProperty<Color?>? surfaceTintColor} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<Color?>? surfaceTintColor,

    /// optionalParameters: {MaterialStateProperty<double?>? elevation} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<double?>? elevation,

    /// optionalParameters: {MaterialStateProperty<EdgeInsetsGeometry?>? padding} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<EdgeInsetsGeometry?>? padding,

    /// optionalParameters: {MaterialStateProperty<Size?>? minimumSize} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<Size?>? minimumSize,

    /// optionalParameters: {MaterialStateProperty<Size?>? fixedSize} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<Size?>? fixedSize,

    /// optionalParameters: {MaterialStateProperty<Size?>? maximumSize} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<Size?>? maximumSize,

    /// optionalParameters: {MaterialStateProperty<BorderSide?>? side} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<BorderSide?>? side,

    /// optionalParameters: {MaterialStateProperty<OutlinedBorder?>? shape} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<OutlinedBorder?>? shape,

    /// optionalParameters: {MaterialStateProperty<MouseCursor?>? mouseCursor} , hasDefaultValue:false, defaultValueCode:null
    MaterialStateProperty<MouseCursor?>? mouseCursor,

    /// optionalParameters: {VisualDensity? visualDensity} , hasDefaultValue:false, defaultValueCode:null
    VisualDensity? visualDensity,

    /// optionalParameters: {AlignmentGeometry? alignment} , hasDefaultValue:false, defaultValueCode:null
    AlignmentGeometry? alignment,
  }) : super(
          backgroundColor: backgroundColor,
          shadowColor: shadowColor,
          surfaceTintColor: surfaceTintColor,
          elevation: elevation,
          padding: padding,
          minimumSize: minimumSize,
          fixedSize: fixedSize,
          maximumSize: maximumSize,
          side: side,
          shape: shape,
          mouseCursor: mouseCursor,
          visualDensity: visualDensity,
          alignment: alignment,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => MenuStyle$Mate(
        backgroundColor: p.get('backgroundColor').value,
        shadowColor: p.get('shadowColor').value,
        surfaceTintColor: p.get('surfaceTintColor').value,
        elevation: p.get('elevation').value,
        padding: p.get('padding').value,
        minimumSize: p.get('minimumSize').value,
        fixedSize: p.get('fixedSize').value,
        maximumSize: p.get('maximumSize').value,
        side: p.get('side').value,
        shape: p.get('shape').value,
        mouseCursor: p.get('mouseCursor').value,
        visualDensity: p.get('visualDensity').value,
        alignment: p.get('alignment').value,
      ),
    );
    mateParams.put('backgroundColor', init: backgroundColor);
    mateParams.put('shadowColor', init: shadowColor);
    mateParams.put('surfaceTintColor', init: surfaceTintColor);
    mateParams.put('elevation', init: elevation);
    mateParams.put('padding', init: padding);
    mateParams.put('minimumSize', init: minimumSize);
    mateParams.put('fixedSize', init: fixedSize);
    mateParams.put('maximumSize', init: maximumSize);
    mateParams.put('side', init: side);
    mateParams.put('shape', init: shape);
    mateParams.put('mouseCursor', init: mouseCursor);
    mateParams.put('visualDensity', init: visualDensity);
    mateParams.put('alignment', init: alignment);
  }
}
