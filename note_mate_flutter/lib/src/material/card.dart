// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/material/card.dart';
import 'package:flutter/src/foundation/key.dart';
import 'dart:ui';
import 'dart:core';
import 'package:flutter/src/painting/borders.dart';
import 'package:flutter/src/painting/edge_insets.dart';
import 'package:flutter/src/widgets/framework.dart';
import 'package:note/mate.dart';

/// class Card extends StatelessWidget
class Card$Mate extends Card with WidgetMate<Card$Mate> {
  /// Card Card({Key? key, Color? color, Color? shadowColor, Color? surfaceTintColor, double? elevation, ShapeBorder? shape, bool borderOnForeground = true, EdgeInsetsGeometry? margin, Clip? clipBehavior, Widget? child, bool semanticContainer = true})
  Card$Mate({
    /// optionalParameters: {Key? key} , hasDefaultValue:false, defaultValueCode:null
    Key? key,

    /// optionalParameters: {Color? color} , hasDefaultValue:false, defaultValueCode:null
    Color? color,

    /// optionalParameters: {Color? shadowColor} , hasDefaultValue:false, defaultValueCode:null
    Color? shadowColor,

    /// optionalParameters: {Color? surfaceTintColor} , hasDefaultValue:false, defaultValueCode:null
    Color? surfaceTintColor,

    /// optionalParameters: {double? elevation} , hasDefaultValue:false, defaultValueCode:null
    double? elevation,

    /// optionalParameters: {ShapeBorder? shape} , hasDefaultValue:false, defaultValueCode:null
    ShapeBorder? shape,

    /// optionalParameters: {bool borderOnForeground = true} , hasDefaultValue:true, defaultValueCode:true
    required bool borderOnForeground,

    /// optionalParameters: {EdgeInsetsGeometry? margin} , hasDefaultValue:false, defaultValueCode:null
    EdgeInsetsGeometry? margin,

    /// optionalParameters: {Clip? clipBehavior} , hasDefaultValue:false, defaultValueCode:null
    Clip? clipBehavior,

    /// optionalParameters: {Widget? child} , hasDefaultValue:false, defaultValueCode:null
    Widget? child,

    /// optionalParameters: {bool semanticContainer = true} , hasDefaultValue:true, defaultValueCode:true
    required bool semanticContainer,
  }) : super(
          key: key,
          color: color,
          shadowColor: shadowColor,
          surfaceTintColor: surfaceTintColor,
          elevation: elevation,
          shape: shape,
          borderOnForeground: borderOnForeground,
          margin: margin,
          clipBehavior: clipBehavior,
          child: child,
          semanticContainer: semanticContainer,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => Card$Mate(
        key: p.get('key').value,
        color: p.get('color').value,
        shadowColor: p.get('shadowColor').value,
        surfaceTintColor: p.get('surfaceTintColor').value,
        elevation: p.get('elevation').value,
        shape: p.get('shape').value,
        borderOnForeground: p.get('borderOnForeground').value,
        margin: p.get('margin').value,
        clipBehavior: p.get('clipBehavior').value,
        child: p.get('child').value,
        semanticContainer: p.get('semanticContainer').value,
      ),
    );
    mateParams.put('key', init: key);
    mateParams.put('color', init: color);
    mateParams.put('shadowColor', init: shadowColor);
    mateParams.put('surfaceTintColor', init: surfaceTintColor);
    mateParams.put('elevation', init: elevation);
    mateParams.put('shape', init: shape);
    mateParams.put('borderOnForeground', init: borderOnForeground);
    mateParams.put('margin', init: margin);
    mateParams.put('clipBehavior', init: clipBehavior);
    mateParams.put('child', init: child);
    mateParams.put('semanticContainer', init: semanticContainer);
  }
}
