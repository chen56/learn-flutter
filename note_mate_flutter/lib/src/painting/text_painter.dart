// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/painting/text_painter.dart';
import 'dart:ui';
import 'dart:core';
import 'package:note/mate.dart';
import 'package:flutter/src/painting/inline_span.dart';
import 'package:flutter/src/painting/strut_style.dart';

/// class PlaceholderDimensions
class PlaceholderDimensions$Mate extends PlaceholderDimensions with Mate<PlaceholderDimensions$Mate> {
  /// PlaceholderDimensions PlaceholderDimensions({required Size size, required PlaceholderAlignment alignment, TextBaseline? baseline, double? baselineOffset})
  PlaceholderDimensions$Mate({
    /// optionalParameters: {required Size size} , hasDefaultValue:false, defaultValueCode:null
    required Size size,

    /// optionalParameters: {required PlaceholderAlignment alignment} , hasDefaultValue:false, defaultValueCode:null
    required PlaceholderAlignment alignment,

    /// optionalParameters: {TextBaseline? baseline} , hasDefaultValue:false, defaultValueCode:null
    TextBaseline? baseline,

    /// optionalParameters: {double? baselineOffset} , hasDefaultValue:false, defaultValueCode:null
    double? baselineOffset,
  }) : super(
          size: size,
          alignment: alignment,
          baseline: baseline,
          baselineOffset: baselineOffset,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => PlaceholderDimensions$Mate(
        size: p.get('size').value,
        alignment: p.get('alignment').value,
        baseline: p.get('baseline').value,
        baselineOffset: p.get('baselineOffset').value,
      ),
    );
    mateParams.put('size', init: size);
    mateParams.put('alignment', init: alignment);
    mateParams.put('baseline', init: baseline);
    mateParams.put('baselineOffset', init: baselineOffset);
  }
}

/// class TextPainter
class TextPainter$Mate extends TextPainter with Mate<TextPainter$Mate> {
  /// TextPainter TextPainter({InlineSpan? text, TextAlign textAlign = TextAlign.start, TextDirection? textDirection, double textScaleFactor = 1.0, int? maxLines, String? ellipsis, Locale? locale, StrutStyle? strutStyle, TextWidthBasis textWidthBasis = TextWidthBasis.parent, TextHeightBehavior? textHeightBehavior})
  TextPainter$Mate({
    /// optionalParameters: {InlineSpan? text} , hasDefaultValue:false, defaultValueCode:null
    InlineSpan? text,

    /// optionalParameters: {TextAlign textAlign = TextAlign.start} , hasDefaultValue:true, defaultValueCode:TextAlign.start
    required TextAlign textAlign,

    /// optionalParameters: {TextDirection? textDirection} , hasDefaultValue:false, defaultValueCode:null
    TextDirection? textDirection,

    /// optionalParameters: {double textScaleFactor = 1.0} , hasDefaultValue:true, defaultValueCode:1.0
    required double textScaleFactor,

    /// optionalParameters: {int? maxLines} , hasDefaultValue:false, defaultValueCode:null
    int? maxLines,

    /// optionalParameters: {String? ellipsis} , hasDefaultValue:false, defaultValueCode:null
    String? ellipsis,

    /// optionalParameters: {Locale? locale} , hasDefaultValue:false, defaultValueCode:null
    Locale? locale,

    /// optionalParameters: {StrutStyle? strutStyle} , hasDefaultValue:false, defaultValueCode:null
    StrutStyle? strutStyle,

    /// optionalParameters: {TextWidthBasis textWidthBasis = TextWidthBasis.parent} , hasDefaultValue:true, defaultValueCode:TextWidthBasis.parent
    required TextWidthBasis textWidthBasis,

    /// optionalParameters: {TextHeightBehavior? textHeightBehavior} , hasDefaultValue:false, defaultValueCode:null
    TextHeightBehavior? textHeightBehavior,
  }) : super(
          text: text,
          textAlign: textAlign,
          textDirection: textDirection,
          textScaleFactor: textScaleFactor,
          maxLines: maxLines,
          ellipsis: ellipsis,
          locale: locale,
          strutStyle: strutStyle,
          textWidthBasis: textWidthBasis,
          textHeightBehavior: textHeightBehavior,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => TextPainter$Mate(
        text: p.get('text').value,
        textAlign: p.get('textAlign').value,
        textDirection: p.get('textDirection').value,
        textScaleFactor: p.get('textScaleFactor').value,
        maxLines: p.get('maxLines').value,
        ellipsis: p.get('ellipsis').value,
        locale: p.get('locale').value,
        strutStyle: p.get('strutStyle').value,
        textWidthBasis: p.get('textWidthBasis').value,
        textHeightBehavior: p.get('textHeightBehavior').value,
      ),
    );
    mateParams.put('text', init: text);
    mateParams.put('textAlign', init: textAlign);
    mateParams.put('textDirection', init: textDirection);
    mateParams.put('textScaleFactor', init: textScaleFactor);
    mateParams.put('maxLines', init: maxLines);
    mateParams.put('ellipsis', init: ellipsis);
    mateParams.put('locale', init: locale);
    mateParams.put('strutStyle', init: strutStyle);
    mateParams.put('textWidthBasis', init: textWidthBasis);
    mateParams.put('textHeightBehavior', init: textHeightBehavior);
  }
}
