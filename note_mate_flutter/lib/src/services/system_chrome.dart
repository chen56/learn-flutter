// /// Generated by gen_maters.dart, please don't edit!

import 'package:flutter/src/services/system_chrome.dart';
import 'dart:core';
import 'package:note/mate.dart';
import 'dart:ui';

/// class ApplicationSwitcherDescription
class ApplicationSwitcherDescription$Mate extends ApplicationSwitcherDescription
    with Mate<ApplicationSwitcherDescription$Mate> {
  /// ApplicationSwitcherDescription ApplicationSwitcherDescription({String? label, int? primaryColor})
  ApplicationSwitcherDescription$Mate({
    /// optionalParameters: {String? label} , hasDefaultValue:false, defaultValueCode:null
    String? label,

    /// optionalParameters: {int? primaryColor} , hasDefaultValue:false, defaultValueCode:null
    int? primaryColor,
  }) : super(
          label: label,
          primaryColor: primaryColor,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => ApplicationSwitcherDescription$Mate(
        label: p.get('label').value,
        primaryColor: p.get('primaryColor').value,
      ),
    );
    mateParams.put('label', label);
    mateParams.put('primaryColor', primaryColor);
  }
}

/// class SystemUiOverlayStyle
class SystemUiOverlayStyle$Mate extends SystemUiOverlayStyle with Mate<SystemUiOverlayStyle$Mate> {
  /// SystemUiOverlayStyle SystemUiOverlayStyle({Color? systemNavigationBarColor, Color? systemNavigationBarDividerColor, Brightness? systemNavigationBarIconBrightness, bool? systemNavigationBarContrastEnforced, Color? statusBarColor, Brightness? statusBarBrightness, Brightness? statusBarIconBrightness, bool? systemStatusBarContrastEnforced})
  SystemUiOverlayStyle$Mate({
    /// optionalParameters: {Color? systemNavigationBarColor} , hasDefaultValue:false, defaultValueCode:null
    Color? systemNavigationBarColor,

    /// optionalParameters: {Color? systemNavigationBarDividerColor} , hasDefaultValue:false, defaultValueCode:null
    Color? systemNavigationBarDividerColor,

    /// optionalParameters: {Brightness? systemNavigationBarIconBrightness} , hasDefaultValue:false, defaultValueCode:null
    Brightness? systemNavigationBarIconBrightness,

    /// optionalParameters: {bool? systemNavigationBarContrastEnforced} , hasDefaultValue:false, defaultValueCode:null
    bool? systemNavigationBarContrastEnforced,

    /// optionalParameters: {Color? statusBarColor} , hasDefaultValue:false, defaultValueCode:null
    Color? statusBarColor,

    /// optionalParameters: {Brightness? statusBarBrightness} , hasDefaultValue:false, defaultValueCode:null
    Brightness? statusBarBrightness,

    /// optionalParameters: {Brightness? statusBarIconBrightness} , hasDefaultValue:false, defaultValueCode:null
    Brightness? statusBarIconBrightness,

    /// optionalParameters: {bool? systemStatusBarContrastEnforced} , hasDefaultValue:false, defaultValueCode:null
    bool? systemStatusBarContrastEnforced,
  }) : super(
          systemNavigationBarColor: systemNavigationBarColor,
          systemNavigationBarDividerColor: systemNavigationBarDividerColor,
          systemNavigationBarIconBrightness: systemNavigationBarIconBrightness,
          systemNavigationBarContrastEnforced: systemNavigationBarContrastEnforced,
          statusBarColor: statusBarColor,
          statusBarBrightness: statusBarBrightness,
          statusBarIconBrightness: statusBarIconBrightness,
          systemStatusBarContrastEnforced: systemStatusBarContrastEnforced,
        ) {
    mateParams = ObjectParam(
      init: this,
      builder: (p) => SystemUiOverlayStyle$Mate(
        systemNavigationBarColor: p.get('systemNavigationBarColor').value,
        systemNavigationBarDividerColor: p.get('systemNavigationBarDividerColor').value,
        systemNavigationBarIconBrightness: p.get('systemNavigationBarIconBrightness').value,
        systemNavigationBarContrastEnforced: p.get('systemNavigationBarContrastEnforced').value,
        statusBarColor: p.get('statusBarColor').value,
        statusBarBrightness: p.get('statusBarBrightness').value,
        statusBarIconBrightness: p.get('statusBarIconBrightness').value,
        systemStatusBarContrastEnforced: p.get('systemStatusBarContrastEnforced').value,
      ),
    );
    mateParams.put('systemNavigationBarColor', systemNavigationBarColor);
    mateParams.put('systemNavigationBarDividerColor', systemNavigationBarDividerColor);
    mateParams.put('systemNavigationBarIconBrightness', systemNavigationBarIconBrightness);
    mateParams.put('systemNavigationBarContrastEnforced', systemNavigationBarContrastEnforced);
    mateParams.put('statusBarColor', statusBarColor);
    mateParams.put('statusBarBrightness', statusBarBrightness);
    mateParams.put('statusBarIconBrightness', statusBarIconBrightness);
    mateParams.put('systemStatusBarContrastEnforced', systemStatusBarContrastEnforced);
  }
}
