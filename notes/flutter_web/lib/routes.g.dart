import 'package:you_note_dart/note.dart';
import 'package:you_flutter/router.dart';

// Generated by github.com/chen56/you, please don't edit!
// ignore_for_file: library_prefixes, non_constant_identifier_names
// ###########################################
// ####################pages##################
// ###########################################

import 'package:flutter_web/pages/notes/dev/debug/page.dart' deferred as notes_dev_debug_;
import 'package:flutter_web/pages/notes/dev/devtool/page.dart' deferred as notes_dev_devtool_;
import 'package:flutter_web/pages/notes/dev/devtool/vmservice/page.dart' deferred as notes_dev_devtool_vmservice_;
import 'package:flutter_web/pages/notes/dev/host_mirror/page.dart' deferred as notes_dev_host_mirror_;
import 'package:flutter_web/pages/notes/dev/macos_config/page.dart' deferred as notes_dev_macos_config_;
import 'package:flutter_web/pages/notes/env_info/page.dart' deferred as notes_env_info_;
import 'package:flutter_web/pages/notes/i18n/page.dart' deferred as notes_i18n_;
import 'package:flutter_web/pages/notes/Improve_app/1.overview/page.dart' deferred as notes_Improve_app_overview_;
import 'package:flutter_web/pages/notes/Improve_app/event&listener&lifeycle/page.dart' deferred as notes_Improve_app_event_listener_lifeycle_;
import 'package:flutter_web/pages/notes/Improve_app/page.dart' deferred as notes_Improve_app_;
import 'package:flutter_web/pages/notes/Improve_app/RepaintBoundary/page.dart' deferred as notes_Improve_app_RepaintBoundary_;
import 'package:flutter_web/pages/notes/Improve_app/web_optimization/page.dart' deferred as notes_Improve_app_web_optimization_;
import 'package:flutter_web/pages/notes/layout/box_layout/constraints/page.dart' deferred as notes_layout_box_layout_constraints_;
import 'package:flutter_web/pages/notes/layout/old/layout/page.dart' deferred as notes_layout_old_layout_;
import 'package:flutter_web/pages/notes/layout/page.dart' deferred as notes_layout_;
import 'package:flutter_web/pages/notes/layout/responsive_design/page.dart' deferred as notes_layout_responsive_design_;
import 'package:flutter_web/pages/notes/media&assets&file/assets/page.dart' deferred as notes_media_assets_file_assets_;
import 'package:flutter_web/pages/notes/media&assets&file/file_desktop/page.dart' deferred as notes_media_assets_file_file_desktop_;
import 'package:flutter_web/pages/notes/media&assets&file/file_web/page.dart' deferred as notes_media_assets_file_file_web_;
import 'package:flutter_web/pages/notes/navigation/page.dart' deferred as notes_navigation_;
import 'package:flutter_web/pages/notes/page.dart' deferred as notes_;
import 'package:flutter_web/pages/notes/pure_dart/analyzer/page.dart' deferred as notes_pure_dart_analyzer_;
import 'package:flutter_web/pages/notes/pure_dart/async/page.dart' deferred as notes_pure_dart_async_;
import 'package:flutter_web/pages/notes/pure_dart/dart3/page.dart' deferred as notes_pure_dart_dart3_;
import 'package:flutter_web/pages/notes/pure_dart/execption/page.dart' deferred as notes_pure_dart_execption_;
import 'package:flutter_web/pages/notes/pure_dart/safe_interface/page.dart' deferred as notes_pure_dart_safe_interface_;
import 'package:flutter_web/pages/notes/pure_dart/serialization_json/page.dart' deferred as notes_pure_dart_serialization_json_;
import 'package:flutter_web/pages/notes/research/remote_view/page.dart' deferred as notes_research_remote_view_;
import 'package:flutter_web/pages/notes/research/research_parameterized_example/page.dart' deferred as notes_research_research_parameterized_example_;
import 'package:flutter_web/pages/notes/state/1.vanilla_state/page.dart' deferred as notes_state_vanilla_state_;
import 'package:flutter_web/pages/notes/state/page.dart' deferred as notes_state_;
import 'package:flutter_web/pages/notes/state/StatefulBuilder/page.dart' deferred as notes_state_StatefulBuilder_;
import 'package:flutter_web/pages/notes/style&theming/material3/page.dart' deferred as notes_style_theming_material3_;
import 'package:flutter_web/pages/notes/thinking_in_ui/readable_html_vs_dart/page.dart' deferred as notes_thinking_in_ui_readable_html_vs_dart_;
import 'package:flutter_web/pages/notes/widgets/container_widgets/bar/page.dart' deferred as notes_widgets_container_widgets_bar_;
import 'package:flutter_web/pages/notes/widgets/container_widgets/menu/page.dart' deferred as notes_widgets_container_widgets_menu_;
import 'package:flutter_web/pages/notes/widgets/container_widgets/scrollable/Dismissible/page.dart' deferred as notes_widgets_container_widgets_scrollable_Dismissible_;
import 'package:flutter_web/pages/notes/widgets/specific_widgets/button/ButtonStyleButton/page.dart' deferred as notes_widgets_specific_widgets_button_ButtonStyleButton_;
import 'package:flutter_web/pages/notes/widgets/specific_widgets/button/FloatingActionButton/page.dart' deferred as notes_widgets_specific_widgets_button_FloatingActionButton_;
import 'package:flutter_web/pages/notes/widgets/specific_widgets/button/IconButton/page.dart' deferred as notes_widgets_specific_widgets_button_IconButton_;
import 'package:flutter_web/pages/notes/widgets/specific_widgets/button/overview/page.dart' deferred as notes_widgets_specific_widgets_button_overview_;
import 'package:flutter_web/pages/notes/widgets/specific_widgets/icon/page.dart' deferred as notes_widgets_specific_widgets_icon_;
import 'package:flutter_web/pages/notes/widgets/specific_widgets/input/page.dart' deferred as notes_widgets_specific_widgets_input_;
import 'package:flutter_web/pages/notes/widgets/specific_widgets/selectable/page.dart' deferred as notes_widgets_specific_widgets_selectable_;
import 'package:flutter_web/pages/notes/widgets/specific_widgets/slider/page.dart' deferred as notes_widgets_specific_widgets_slider_;
import 'package:flutter_web/pages/notes/widgets/specific_widgets/text/RichText/page.dart' deferred as notes_widgets_specific_widgets_text_RichText_;
import 'package:flutter_web/pages/notes/widgets/specific_widgets/text/Text/page.dart' deferred as notes_widgets_specific_widgets_text_Text_;
import 'package:flutter_web/pages/notes/widgets/specific_widgets/webview/page.dart' deferred as notes_widgets_specific_widgets_webview_;
import 'package:flutter_web/pages/notes/x.note_inside/1.welcome/page.dart' deferred as notes_x_note_inside_welcome_;
import 'package:flutter_web/pages/notes/x.note_inside/how_note_work/page.dart' deferred as notes_x_note_inside_how_note_work_;
import 'package:flutter_web/pages/notes/x.note_inside/mockup_content/page.dart' deferred as notes_x_note_inside_mockup_content_;
import 'package:flutter_web/pages/notes/x.note_inside/note_test_self/nobody/page.dart' deferred as notes_x_note_inside_note_test_self_nobody_;
import 'package:flutter_web/pages/notes/x.note_inside/note_test_self/page.dart' deferred as notes_x_note_inside_note_test_self_;


// ###########################################
// ###################layouts#################
// ###########################################

import 'package:flutter_web/pages/notes/layout.dart' deferred as notes__;


final Routes routes=Routes();

class Routes{
  final notes                                                               = root.find("/notes")! ;  
  final notes_research_research_parameterized_example                       = root.find("/notes/research/research_parameterized_example")! ;  
  final notes_research_remote_view                                          = root.find("/notes/research/remote_view")! ;  
  final notes_env_info                                                      = root.find("/notes/env_info")! ;  
  final notes_layout                                                        = root.find("/notes/layout")! ;  
  final notes_layout_old_layout                                             = root.find("/notes/layout/old/layout")! ;  
  final notes_layout_box_layout_constraints                                 = root.find("/notes/layout/box_layout/constraints")! ;  
  final notes_layout_responsive_design                                      = root.find("/notes/layout/responsive_design")! ;  
  final notes_navigation                                                    = root.find("/notes/navigation")! ;  
  final notes_state                                                         = root.find("/notes/state")! ;  
  final notes_state_vanilla_state                                           = root.find("/notes/state/1.vanilla_state")! ;  
  final notes_state_StatefulBuilder                                         = root.find("/notes/state/StatefulBuilder")! ;  
  final notes_media_assets_file_file_desktop                                = root.find("/notes/media&assets&file/file_desktop")! ;  
  final notes_media_assets_file_file_web                                    = root.find("/notes/media&assets&file/file_web")! ;  
  final notes_media_assets_file_assets                                      = root.find("/notes/media&assets&file/assets")! ;  
  final notes_style_theming_material3                                       = root.find("/notes/style&theming/material3")! ;  
  final notes_pure_dart_dart3                                               = root.find("/notes/pure_dart/dart3")! ;  
  final notes_pure_dart_async                                               = root.find("/notes/pure_dart/async")! ;  
  final notes_pure_dart_safe_interface                                      = root.find("/notes/pure_dart/safe_interface")! ;  
  final notes_pure_dart_execption                                           = root.find("/notes/pure_dart/execption")! ;  
  final notes_pure_dart_serialization_json                                  = root.find("/notes/pure_dart/serialization_json")! ;  
  final notes_pure_dart_analyzer                                            = root.find("/notes/pure_dart/analyzer")! ;  
  final notes_dev_host_mirror                                               = root.find("/notes/dev/host_mirror")! ;  
  final notes_dev_macos_config                                              = root.find("/notes/dev/macos_config")! ;  
  final notes_dev_devtool                                                   = root.find("/notes/dev/devtool")! ;  
  final notes_dev_devtool_vmservice                                         = root.find("/notes/dev/devtool/vmservice")! ;  
  final notes_dev_debug                                                     = root.find("/notes/dev/debug")! ;  
  final notes_i18n                                                          = root.find("/notes/i18n")! ;  
  final notes_thinking_in_ui_readable_html_vs_dart                          = root.find("/notes/thinking_in_ui/readable_html_vs_dart")! ;  
  final notes_x_note_inside_how_note_work                                   = root.find("/notes/x.note_inside/how_note_work")! ;  
  final notes_x_note_inside_mockup_content                                  = root.find("/notes/x.note_inside/mockup_content")! ;  
  final notes_x_note_inside_welcome                                         = root.find("/notes/x.note_inside/1.welcome")! ;  
  final notes_x_note_inside_note_test_self                                  = root.find("/notes/x.note_inside/note_test_self")! ;  
  final notes_x_note_inside_note_test_self_nobody                           = root.find("/notes/x.note_inside/note_test_self/nobody")! ;  
  final notes_widgets_specific_widgets_input                                = root.find("/notes/widgets/specific_widgets/input")! ;  
  final notes_widgets_specific_widgets_webview                              = root.find("/notes/widgets/specific_widgets/webview")! ;  
  final notes_widgets_specific_widgets_slider                               = root.find("/notes/widgets/specific_widgets/slider")! ;  
  final notes_widgets_specific_widgets_selectable                           = root.find("/notes/widgets/specific_widgets/selectable")! ;  
  final notes_widgets_specific_widgets_button_ButtonStyleButton             = root.find("/notes/widgets/specific_widgets/button/ButtonStyleButton")! ;  
  final notes_widgets_specific_widgets_button_FloatingActionButton          = root.find("/notes/widgets/specific_widgets/button/FloatingActionButton")! ;  
  final notes_widgets_specific_widgets_button_IconButton                    = root.find("/notes/widgets/specific_widgets/button/IconButton")! ;  
  final notes_widgets_specific_widgets_button_overview                      = root.find("/notes/widgets/specific_widgets/button/overview")! ;  
  final notes_widgets_specific_widgets_text_RichText                        = root.find("/notes/widgets/specific_widgets/text/RichText")! ;  
  final notes_widgets_specific_widgets_text_Text                            = root.find("/notes/widgets/specific_widgets/text/Text")! ;  
  final notes_widgets_specific_widgets_icon                                 = root.find("/notes/widgets/specific_widgets/icon")! ;  
  final notes_widgets_container_widgets_menu                                = root.find("/notes/widgets/container_widgets/menu")! ;  
  final notes_widgets_container_widgets_scrollable_Dismissible              = root.find("/notes/widgets/container_widgets/scrollable/Dismissible")! ;  
  final notes_widgets_container_widgets_bar                                 = root.find("/notes/widgets/container_widgets/bar")! ;  
  final notes_Improve_app                                                   = root.find("/notes/Improve_app")! ;  
  final notes_Improve_app_overview                                          = root.find("/notes/Improve_app/1.overview")! ;  
  final notes_Improve_app_web_optimization                                  = root.find("/notes/Improve_app/web_optimization")! ;  
  final notes_Improve_app_RepaintBoundary                                   = root.find("/notes/Improve_app/RepaintBoundary")! ;  
  final notes_Improve_app_event_listener_lifeycle                           = root.find("/notes/Improve_app/event&listener&lifeycle")! ;  
}

var root = To("pages", children: [
  To("notes", builder: _B.notes, children: [
    To("research", children: [
      To("research_parameterized_example", builder: _B.notes_research_research_parameterized_example),
      To("remote_view", builder: _B.notes_research_remote_view),
      To("research_note_bash"),
    ]),
    To("env_info", builder: _B.notes_env_info),
    To("layout", builder: _B.notes_layout, children: [
      To("old", children: [
        To("layout", builder: _B.notes_layout_old_layout),
      ]),
      To("box_layout", children: [
        To("constraints", builder: _B.notes_layout_box_layout_constraints),
      ]),
      To("responsive_design", builder: _B.notes_layout_responsive_design),
      To("1.welcome"),
    ]),
    To("navigation", builder: _B.notes_navigation, children: [
      To("navigator_v1"),
      To("navigator_v2"),
    ]),
    To("state", builder: _B.notes_state, children: [
      To("1.vanilla_state", builder: _B.notes_state_vanilla_state),
      To("StatefulBuilder", builder: _B.notes_state_StatefulBuilder),
    ]),
    To("media&assets&file", children: [
      To("file_desktop", builder: _B.notes_media_assets_file_file_desktop),
      To("file_web", builder: _B.notes_media_assets_file_file_web),
      To("assets", builder: _B.notes_media_assets_file_assets),
    ]),
    To("style&theming", children: [
      To("material3", builder: _B.notes_style_theming_material3),
      To("Material"),
    ]),
    To("pure_dart", children: [
      To("dart3", builder: _B.notes_pure_dart_dart3),
      To("async", builder: _B.notes_pure_dart_async),
      To("safe_interface", builder: _B.notes_pure_dart_safe_interface),
      To("execption", builder: _B.notes_pure_dart_execption),
      To("serialization_json", builder: _B.notes_pure_dart_serialization_json),
      To("analyzer", builder: _B.notes_pure_dart_analyzer),
    ]),
    To("dev", children: [
      To("host_mirror", builder: _B.notes_dev_host_mirror),
      To("macos_config", builder: _B.notes_dev_macos_config),
      To("devtool", builder: _B.notes_dev_devtool, children: [
        To("vmservice", builder: _B.notes_dev_devtool_vmservice),
      ]),
      To("debug", builder: _B.notes_dev_debug),
    ]),
    To("i18n", builder: _B.notes_i18n),
    To("thinking_in_ui", children: [
      To("readable_html_vs_dart", builder: _B.notes_thinking_in_ui_readable_html_vs_dart),
    ]),
    To("x.note_inside", children: [
      To("how_note_work", builder: _B.notes_x_note_inside_how_note_work),
      To("note_api_thinking"),
      To("mockup_content", builder: _B.notes_x_note_inside_mockup_content),
      To("1.welcome", builder: _B.notes_x_note_inside_welcome),
      To("note_test_self", builder: _B.notes_x_note_inside_note_test_self, children: [
        To("nobody", builder: _B.notes_x_note_inside_note_test_self_nobody),
      ]),
    ]),
    To("widgets", children: [
      To("specific_widgets", children: [
        To("input", builder: _B.notes_widgets_specific_widgets_input),
        To("webview", builder: _B.notes_widgets_specific_widgets_webview),
        To("slider", builder: _B.notes_widgets_specific_widgets_slider),
        To("selectable", builder: _B.notes_widgets_specific_widgets_selectable),
        To("button", children: [
          To("ButtonStyleButton", builder: _B.notes_widgets_specific_widgets_button_ButtonStyleButton),
          To("FloatingActionButton", builder: _B.notes_widgets_specific_widgets_button_FloatingActionButton),
          To("IconButton", builder: _B.notes_widgets_specific_widgets_button_IconButton),
          To("overview", builder: _B.notes_widgets_specific_widgets_button_overview),
        ]),
        To("Divider"),
        To("text", children: [
          To("RichText", builder: _B.notes_widgets_specific_widgets_text_RichText),
          To("Text", builder: _B.notes_widgets_specific_widgets_text_Text),
        ]),
        To("icon", builder: _B.notes_widgets_specific_widgets_icon),
      ]),
      To("container_widgets", children: [
        To("drawer"),
        To("Card"),
        To("app"),
        To("dialog"),
        To("menu", builder: _B.notes_widgets_container_widgets_menu),
        To("scrollable", children: [
          To("Dismissible", builder: _B.notes_widgets_container_widgets_scrollable_Dismissible),
          To("DraggableScrollableSheet"),
        ]),
        To("page_view"),
        To("bar", builder: _B.notes_widgets_container_widgets_bar),
      ]),
    ]),
    To("Improve_app", builder: _B.notes_Improve_app, children: [
      To("1.overview", builder: _B.notes_Improve_app_overview),
      To("error_handle"),
      To("web_optimization", builder: _B.notes_Improve_app_web_optimization),
      To("RepaintBoundary", builder: _B.notes_Improve_app_RepaintBoundary),
      To("event&listener&lifeycle", builder: _B.notes_Improve_app_event_listener_lifeycle),
    ]),
  ]),
]);


abstract class BaseNotes {
  static final NoteRoute rootroot = NoteRoute.root();
  static NoteRoute put(String path, LazyNoteBuilder lazyNoteBuilder) {
    return rootroot.put(path, lazyNoteBuilder);
  }
  final notes                                                               = put("/notes", (context,print) async => await notes_.loadLibrary().then((value) => notes_.build(context,print)));  
  final notes_research_research_parameterized_example                       = put("/notes/research/research_parameterized_example", (context,print) async => await notes_research_research_parameterized_example_.loadLibrary().then((value) => notes_research_research_parameterized_example_.build(context,print)));  
  final notes_research_remote_view                                          = put("/notes/research/remote_view", (context,print) async => await notes_research_remote_view_.loadLibrary().then((value) => notes_research_remote_view_.build(context,print)));  
  final notes_env_info                                                      = put("/notes/env_info", (context,print) async => await notes_env_info_.loadLibrary().then((value) => notes_env_info_.build(context,print)));  
  final notes_layout                                                        = put("/notes/layout", (context,print) async => await notes_layout_.loadLibrary().then((value) => notes_layout_.build(context,print)));  
  final notes_layout_old_layout                                             = put("/notes/layout/old/layout", (context,print) async => await notes_layout_old_layout_.loadLibrary().then((value) => notes_layout_old_layout_.build(context,print)));  
  final notes_layout_box_layout_constraints                                 = put("/notes/layout/box_layout/constraints", (context,print) async => await notes_layout_box_layout_constraints_.loadLibrary().then((value) => notes_layout_box_layout_constraints_.build(context,print)));  
  final notes_layout_responsive_design                                      = put("/notes/layout/responsive_design", (context,print) async => await notes_layout_responsive_design_.loadLibrary().then((value) => notes_layout_responsive_design_.build(context,print)));  
  final notes_navigation                                                    = put("/notes/navigation", (context,print) async => await notes_navigation_.loadLibrary().then((value) => notes_navigation_.build(context,print)));  
  final notes_state                                                         = put("/notes/state", (context,print) async => await notes_state_.loadLibrary().then((value) => notes_state_.build(context,print)));  
  final notes_state_vanilla_state                                           = put("/notes/state/1.vanilla_state", (context,print) async => await notes_state_vanilla_state_.loadLibrary().then((value) => notes_state_vanilla_state_.build(context,print)));  
  final notes_state_StatefulBuilder                                         = put("/notes/state/StatefulBuilder", (context,print) async => await notes_state_StatefulBuilder_.loadLibrary().then((value) => notes_state_StatefulBuilder_.build(context,print)));  
  final notes_media_assets_file_file_desktop                                = put("/notes/media&assets&file/file_desktop", (context,print) async => await notes_media_assets_file_file_desktop_.loadLibrary().then((value) => notes_media_assets_file_file_desktop_.build(context,print)));  
  final notes_media_assets_file_file_web                                    = put("/notes/media&assets&file/file_web", (context,print) async => await notes_media_assets_file_file_web_.loadLibrary().then((value) => notes_media_assets_file_file_web_.build(context,print)));  
  final notes_media_assets_file_assets                                      = put("/notes/media&assets&file/assets", (context,print) async => await notes_media_assets_file_assets_.loadLibrary().then((value) => notes_media_assets_file_assets_.build(context,print)));  
  final notes_style_theming_material3                                       = put("/notes/style&theming/material3", (context,print) async => await notes_style_theming_material3_.loadLibrary().then((value) => notes_style_theming_material3_.build(context,print)));  
  final notes_pure_dart_dart3                                               = put("/notes/pure_dart/dart3", (context,print) async => await notes_pure_dart_dart3_.loadLibrary().then((value) => notes_pure_dart_dart3_.build(context,print)));  
  final notes_pure_dart_async                                               = put("/notes/pure_dart/async", (context,print) async => await notes_pure_dart_async_.loadLibrary().then((value) => notes_pure_dart_async_.build(context,print)));  
  final notes_pure_dart_safe_interface                                      = put("/notes/pure_dart/safe_interface", (context,print) async => await notes_pure_dart_safe_interface_.loadLibrary().then((value) => notes_pure_dart_safe_interface_.build(context,print)));  
  final notes_pure_dart_execption                                           = put("/notes/pure_dart/execption", (context,print) async => await notes_pure_dart_execption_.loadLibrary().then((value) => notes_pure_dart_execption_.build(context,print)));  
  final notes_pure_dart_serialization_json                                  = put("/notes/pure_dart/serialization_json", (context,print) async => await notes_pure_dart_serialization_json_.loadLibrary().then((value) => notes_pure_dart_serialization_json_.build(context,print)));  
  final notes_pure_dart_analyzer                                            = put("/notes/pure_dart/analyzer", (context,print) async => await notes_pure_dart_analyzer_.loadLibrary().then((value) => notes_pure_dart_analyzer_.build(context,print)));  
  final notes_dev_host_mirror                                               = put("/notes/dev/host_mirror", (context,print) async => await notes_dev_host_mirror_.loadLibrary().then((value) => notes_dev_host_mirror_.build(context,print)));  
  final notes_dev_macos_config                                              = put("/notes/dev/macos_config", (context,print) async => await notes_dev_macos_config_.loadLibrary().then((value) => notes_dev_macos_config_.build(context,print)));  
  final notes_dev_devtool                                                   = put("/notes/dev/devtool", (context,print) async => await notes_dev_devtool_.loadLibrary().then((value) => notes_dev_devtool_.build(context,print)));  
  final notes_dev_devtool_vmservice                                         = put("/notes/dev/devtool/vmservice", (context,print) async => await notes_dev_devtool_vmservice_.loadLibrary().then((value) => notes_dev_devtool_vmservice_.build(context,print)));  
  final notes_dev_debug                                                     = put("/notes/dev/debug", (context,print) async => await notes_dev_debug_.loadLibrary().then((value) => notes_dev_debug_.build(context,print)));  
  final notes_i18n                                                          = put("/notes/i18n", (context,print) async => await notes_i18n_.loadLibrary().then((value) => notes_i18n_.build(context,print)));  
  final notes_thinking_in_ui_readable_html_vs_dart                          = put("/notes/thinking_in_ui/readable_html_vs_dart", (context,print) async => await notes_thinking_in_ui_readable_html_vs_dart_.loadLibrary().then((value) => notes_thinking_in_ui_readable_html_vs_dart_.build(context,print)));  
  final notes_x_note_inside_how_note_work                                   = put("/notes/x.note_inside/how_note_work", (context,print) async => await notes_x_note_inside_how_note_work_.loadLibrary().then((value) => notes_x_note_inside_how_note_work_.build(context,print)));  
  final notes_x_note_inside_mockup_content                                  = put("/notes/x.note_inside/mockup_content", (context,print) async => await notes_x_note_inside_mockup_content_.loadLibrary().then((value) => notes_x_note_inside_mockup_content_.build(context,print)));  
  final notes_x_note_inside_welcome                                         = put("/notes/x.note_inside/1.welcome", (context,print) async => await notes_x_note_inside_welcome_.loadLibrary().then((value) => notes_x_note_inside_welcome_.build(context,print)));  
  final notes_x_note_inside_note_test_self                                  = put("/notes/x.note_inside/note_test_self", (context,print) async => await notes_x_note_inside_note_test_self_.loadLibrary().then((value) => notes_x_note_inside_note_test_self_.build(context,print)));  
  final notes_x_note_inside_note_test_self_nobody                           = put("/notes/x.note_inside/note_test_self/nobody", (context,print) async => await notes_x_note_inside_note_test_self_nobody_.loadLibrary().then((value) => notes_x_note_inside_note_test_self_nobody_.build(context,print)));  
  final notes_widgets_specific_widgets_input                                = put("/notes/widgets/specific_widgets/input", (context,print) async => await notes_widgets_specific_widgets_input_.loadLibrary().then((value) => notes_widgets_specific_widgets_input_.build(context,print)));  
  final notes_widgets_specific_widgets_webview                              = put("/notes/widgets/specific_widgets/webview", (context,print) async => await notes_widgets_specific_widgets_webview_.loadLibrary().then((value) => notes_widgets_specific_widgets_webview_.build(context,print)));  
  final notes_widgets_specific_widgets_slider                               = put("/notes/widgets/specific_widgets/slider", (context,print) async => await notes_widgets_specific_widgets_slider_.loadLibrary().then((value) => notes_widgets_specific_widgets_slider_.build(context,print)));  
  final notes_widgets_specific_widgets_selectable                           = put("/notes/widgets/specific_widgets/selectable", (context,print) async => await notes_widgets_specific_widgets_selectable_.loadLibrary().then((value) => notes_widgets_specific_widgets_selectable_.build(context,print)));  
  final notes_widgets_specific_widgets_button_ButtonStyleButton             = put("/notes/widgets/specific_widgets/button/ButtonStyleButton", (context,print) async => await notes_widgets_specific_widgets_button_ButtonStyleButton_.loadLibrary().then((value) => notes_widgets_specific_widgets_button_ButtonStyleButton_.build(context,print)));  
  final notes_widgets_specific_widgets_button_FloatingActionButton          = put("/notes/widgets/specific_widgets/button/FloatingActionButton", (context,print) async => await notes_widgets_specific_widgets_button_FloatingActionButton_.loadLibrary().then((value) => notes_widgets_specific_widgets_button_FloatingActionButton_.build(context,print)));  
  final notes_widgets_specific_widgets_button_IconButton                    = put("/notes/widgets/specific_widgets/button/IconButton", (context,print) async => await notes_widgets_specific_widgets_button_IconButton_.loadLibrary().then((value) => notes_widgets_specific_widgets_button_IconButton_.build(context,print)));  
  final notes_widgets_specific_widgets_button_overview                      = put("/notes/widgets/specific_widgets/button/overview", (context,print) async => await notes_widgets_specific_widgets_button_overview_.loadLibrary().then((value) => notes_widgets_specific_widgets_button_overview_.build(context,print)));  
  final notes_widgets_specific_widgets_text_RichText                        = put("/notes/widgets/specific_widgets/text/RichText", (context,print) async => await notes_widgets_specific_widgets_text_RichText_.loadLibrary().then((value) => notes_widgets_specific_widgets_text_RichText_.build(context,print)));  
  final notes_widgets_specific_widgets_text_Text                            = put("/notes/widgets/specific_widgets/text/Text", (context,print) async => await notes_widgets_specific_widgets_text_Text_.loadLibrary().then((value) => notes_widgets_specific_widgets_text_Text_.build(context,print)));  
  final notes_widgets_specific_widgets_icon                                 = put("/notes/widgets/specific_widgets/icon", (context,print) async => await notes_widgets_specific_widgets_icon_.loadLibrary().then((value) => notes_widgets_specific_widgets_icon_.build(context,print)));  
  final notes_widgets_container_widgets_menu                                = put("/notes/widgets/container_widgets/menu", (context,print) async => await notes_widgets_container_widgets_menu_.loadLibrary().then((value) => notes_widgets_container_widgets_menu_.build(context,print)));  
  final notes_widgets_container_widgets_scrollable_Dismissible              = put("/notes/widgets/container_widgets/scrollable/Dismissible", (context,print) async => await notes_widgets_container_widgets_scrollable_Dismissible_.loadLibrary().then((value) => notes_widgets_container_widgets_scrollable_Dismissible_.build(context,print)));  
  final notes_widgets_container_widgets_bar                                 = put("/notes/widgets/container_widgets/bar", (context,print) async => await notes_widgets_container_widgets_bar_.loadLibrary().then((value) => notes_widgets_container_widgets_bar_.build(context,print)));  
  final notes_Improve_app                                                   = put("/notes/Improve_app", (context,print) async => await notes_Improve_app_.loadLibrary().then((value) => notes_Improve_app_.build(context,print)));  
  final notes_Improve_app_overview                                          = put("/notes/Improve_app/1.overview", (context,print) async => await notes_Improve_app_overview_.loadLibrary().then((value) => notes_Improve_app_overview_.build(context,print)));  
  final notes_Improve_app_web_optimization                                  = put("/notes/Improve_app/web_optimization", (context,print) async => await notes_Improve_app_web_optimization_.loadLibrary().then((value) => notes_Improve_app_web_optimization_.build(context,print)));  
  final notes_Improve_app_RepaintBoundary                                   = put("/notes/Improve_app/RepaintBoundary", (context,print) async => await notes_Improve_app_RepaintBoundary_.loadLibrary().then((value) => notes_Improve_app_RepaintBoundary_.build(context,print)));  
  final notes_Improve_app_event_listener_lifeycle                           = put("/notes/Improve_app/event&listener&lifeycle", (context,print) async => await notes_Improve_app_event_listener_lifeycle_.loadLibrary().then((value) => notes_Improve_app_event_listener_lifeycle_.build(context,print)));  

}

final class _B{
  static final notes                                                               = notes__.layout((context,print)async=> await notes_.loadLibrary().then((_) => notes_.build(context,print))) ;  
  static final notes_research_research_parameterized_example                       = notes__.layout((context,print)async=> await notes_research_research_parameterized_example_.loadLibrary().then((_) => notes_research_research_parameterized_example_.build(context,print))) ;  
  static final notes_research_remote_view                                          = notes__.layout((context,print)async=> await notes_research_remote_view_.loadLibrary().then((_) => notes_research_remote_view_.build(context,print))) ;  
  static final notes_env_info                                                      = notes__.layout((context,print)async=> await notes_env_info_.loadLibrary().then((_) => notes_env_info_.build(context,print))) ;  
  static final notes_layout                                                        = notes__.layout((context,print)async=> await notes_layout_.loadLibrary().then((_) => notes_layout_.build(context,print))) ;  
  static final notes_layout_old_layout                                             = notes__.layout((context,print)async=> await notes_layout_old_layout_.loadLibrary().then((_) => notes_layout_old_layout_.build(context,print))) ;  
  static final notes_layout_box_layout_constraints                                 = notes__.layout((context,print)async=> await notes_layout_box_layout_constraints_.loadLibrary().then((_) => notes_layout_box_layout_constraints_.build(context,print))) ;  
  static final notes_layout_responsive_design                                      = notes__.layout((context,print)async=> await notes_layout_responsive_design_.loadLibrary().then((_) => notes_layout_responsive_design_.build(context,print))) ;  
  static final notes_navigation                                                    = notes__.layout((context,print)async=> await notes_navigation_.loadLibrary().then((_) => notes_navigation_.build(context,print))) ;  
  static final notes_state                                                         = notes__.layout((context,print)async=> await notes_state_.loadLibrary().then((_) => notes_state_.build(context,print))) ;  
  static final notes_state_vanilla_state                                           = notes__.layout((context,print)async=> await notes_state_vanilla_state_.loadLibrary().then((_) => notes_state_vanilla_state_.build(context,print))) ;  
  static final notes_state_StatefulBuilder                                         = notes__.layout((context,print)async=> await notes_state_StatefulBuilder_.loadLibrary().then((_) => notes_state_StatefulBuilder_.build(context,print))) ;  
  static final notes_media_assets_file_file_desktop                                = notes__.layout((context,print)async=> await notes_media_assets_file_file_desktop_.loadLibrary().then((_) => notes_media_assets_file_file_desktop_.build(context,print))) ;  
  static final notes_media_assets_file_file_web                                    = notes__.layout((context,print)async=> await notes_media_assets_file_file_web_.loadLibrary().then((_) => notes_media_assets_file_file_web_.build(context,print))) ;  
  static final notes_media_assets_file_assets                                      = notes__.layout((context,print)async=> await notes_media_assets_file_assets_.loadLibrary().then((_) => notes_media_assets_file_assets_.build(context,print))) ;  
  static final notes_style_theming_material3                                       = notes__.layout((context,print)async=> await notes_style_theming_material3_.loadLibrary().then((_) => notes_style_theming_material3_.build(context,print))) ;  
  static final notes_pure_dart_dart3                                               = notes__.layout((context,print)async=> await notes_pure_dart_dart3_.loadLibrary().then((_) => notes_pure_dart_dart3_.build(context,print))) ;  
  static final notes_pure_dart_async                                               = notes__.layout((context,print)async=> await notes_pure_dart_async_.loadLibrary().then((_) => notes_pure_dart_async_.build(context,print))) ;  
  static final notes_pure_dart_safe_interface                                      = notes__.layout((context,print)async=> await notes_pure_dart_safe_interface_.loadLibrary().then((_) => notes_pure_dart_safe_interface_.build(context,print))) ;  
  static final notes_pure_dart_execption                                           = notes__.layout((context,print)async=> await notes_pure_dart_execption_.loadLibrary().then((_) => notes_pure_dart_execption_.build(context,print))) ;  
  static final notes_pure_dart_serialization_json                                  = notes__.layout((context,print)async=> await notes_pure_dart_serialization_json_.loadLibrary().then((_) => notes_pure_dart_serialization_json_.build(context,print))) ;  
  static final notes_pure_dart_analyzer                                            = notes__.layout((context,print)async=> await notes_pure_dart_analyzer_.loadLibrary().then((_) => notes_pure_dart_analyzer_.build(context,print))) ;  
  static final notes_dev_host_mirror                                               = notes__.layout((context,print)async=> await notes_dev_host_mirror_.loadLibrary().then((_) => notes_dev_host_mirror_.build(context,print))) ;  
  static final notes_dev_macos_config                                              = notes__.layout((context,print)async=> await notes_dev_macos_config_.loadLibrary().then((_) => notes_dev_macos_config_.build(context,print))) ;  
  static final notes_dev_devtool                                                   = notes__.layout((context,print)async=> await notes_dev_devtool_.loadLibrary().then((_) => notes_dev_devtool_.build(context,print))) ;  
  static final notes_dev_devtool_vmservice                                         = notes__.layout((context,print)async=> await notes_dev_devtool_vmservice_.loadLibrary().then((_) => notes_dev_devtool_vmservice_.build(context,print))) ;  
  static final notes_dev_debug                                                     = notes__.layout((context,print)async=> await notes_dev_debug_.loadLibrary().then((_) => notes_dev_debug_.build(context,print))) ;  
  static final notes_i18n                                                          = notes__.layout((context,print)async=> await notes_i18n_.loadLibrary().then((_) => notes_i18n_.build(context,print))) ;  
  static final notes_thinking_in_ui_readable_html_vs_dart                          = notes__.layout((context,print)async=> await notes_thinking_in_ui_readable_html_vs_dart_.loadLibrary().then((_) => notes_thinking_in_ui_readable_html_vs_dart_.build(context,print))) ;  
  static final notes_x_note_inside_how_note_work                                   = notes__.layout((context,print)async=> await notes_x_note_inside_how_note_work_.loadLibrary().then((_) => notes_x_note_inside_how_note_work_.build(context,print))) ;  
  static final notes_x_note_inside_mockup_content                                  = notes__.layout((context,print)async=> await notes_x_note_inside_mockup_content_.loadLibrary().then((_) => notes_x_note_inside_mockup_content_.build(context,print))) ;  
  static final notes_x_note_inside_welcome                                         = notes__.layout((context,print)async=> await notes_x_note_inside_welcome_.loadLibrary().then((_) => notes_x_note_inside_welcome_.build(context,print))) ;  
  static final notes_x_note_inside_note_test_self                                  = notes__.layout((context,print)async=> await notes_x_note_inside_note_test_self_.loadLibrary().then((_) => notes_x_note_inside_note_test_self_.build(context,print))) ;  
  static final notes_x_note_inside_note_test_self_nobody                           = notes__.layout((context,print)async=> await notes_x_note_inside_note_test_self_nobody_.loadLibrary().then((_) => notes_x_note_inside_note_test_self_nobody_.build(context,print))) ;  
  static final notes_widgets_specific_widgets_input                                = notes__.layout((context,print)async=> await notes_widgets_specific_widgets_input_.loadLibrary().then((_) => notes_widgets_specific_widgets_input_.build(context,print))) ;  
  static final notes_widgets_specific_widgets_webview                              = notes__.layout((context,print)async=> await notes_widgets_specific_widgets_webview_.loadLibrary().then((_) => notes_widgets_specific_widgets_webview_.build(context,print))) ;  
  static final notes_widgets_specific_widgets_slider                               = notes__.layout((context,print)async=> await notes_widgets_specific_widgets_slider_.loadLibrary().then((_) => notes_widgets_specific_widgets_slider_.build(context,print))) ;  
  static final notes_widgets_specific_widgets_selectable                           = notes__.layout((context,print)async=> await notes_widgets_specific_widgets_selectable_.loadLibrary().then((_) => notes_widgets_specific_widgets_selectable_.build(context,print))) ;  
  static final notes_widgets_specific_widgets_button_ButtonStyleButton             = notes__.layout((context,print)async=> await notes_widgets_specific_widgets_button_ButtonStyleButton_.loadLibrary().then((_) => notes_widgets_specific_widgets_button_ButtonStyleButton_.build(context,print))) ;  
  static final notes_widgets_specific_widgets_button_FloatingActionButton          = notes__.layout((context,print)async=> await notes_widgets_specific_widgets_button_FloatingActionButton_.loadLibrary().then((_) => notes_widgets_specific_widgets_button_FloatingActionButton_.build(context,print))) ;  
  static final notes_widgets_specific_widgets_button_IconButton                    = notes__.layout((context,print)async=> await notes_widgets_specific_widgets_button_IconButton_.loadLibrary().then((_) => notes_widgets_specific_widgets_button_IconButton_.build(context,print))) ;  
  static final notes_widgets_specific_widgets_button_overview                      = notes__.layout((context,print)async=> await notes_widgets_specific_widgets_button_overview_.loadLibrary().then((_) => notes_widgets_specific_widgets_button_overview_.build(context,print))) ;  
  static final notes_widgets_specific_widgets_text_RichText                        = notes__.layout((context,print)async=> await notes_widgets_specific_widgets_text_RichText_.loadLibrary().then((_) => notes_widgets_specific_widgets_text_RichText_.build(context,print))) ;  
  static final notes_widgets_specific_widgets_text_Text                            = notes__.layout((context,print)async=> await notes_widgets_specific_widgets_text_Text_.loadLibrary().then((_) => notes_widgets_specific_widgets_text_Text_.build(context,print))) ;  
  static final notes_widgets_specific_widgets_icon                                 = notes__.layout((context,print)async=> await notes_widgets_specific_widgets_icon_.loadLibrary().then((_) => notes_widgets_specific_widgets_icon_.build(context,print))) ;  
  static final notes_widgets_container_widgets_menu                                = notes__.layout((context,print)async=> await notes_widgets_container_widgets_menu_.loadLibrary().then((_) => notes_widgets_container_widgets_menu_.build(context,print))) ;  
  static final notes_widgets_container_widgets_scrollable_Dismissible              = notes__.layout((context,print)async=> await notes_widgets_container_widgets_scrollable_Dismissible_.loadLibrary().then((_) => notes_widgets_container_widgets_scrollable_Dismissible_.build(context,print))) ;  
  static final notes_widgets_container_widgets_bar                                 = notes__.layout((context,print)async=> await notes_widgets_container_widgets_bar_.loadLibrary().then((_) => notes_widgets_container_widgets_bar_.build(context,print))) ;  
  static final notes_Improve_app                                                   = notes__.layout((context,print)async=> await notes_Improve_app_.loadLibrary().then((_) => notes_Improve_app_.build(context,print))) ;  
  static final notes_Improve_app_overview                                          = notes__.layout((context,print)async=> await notes_Improve_app_overview_.loadLibrary().then((_) => notes_Improve_app_overview_.build(context,print))) ;  
  static final notes_Improve_app_web_optimization                                  = notes__.layout((context,print)async=> await notes_Improve_app_web_optimization_.loadLibrary().then((_) => notes_Improve_app_web_optimization_.build(context,print))) ;  
  static final notes_Improve_app_RepaintBoundary                                   = notes__.layout((context,print)async=> await notes_Improve_app_RepaintBoundary_.loadLibrary().then((_) => notes_Improve_app_RepaintBoundary_.build(context,print))) ;  
  static final notes_Improve_app_event_listener_lifeycle                           = notes__.layout((context,print)async=> await notes_Improve_app_event_listener_lifeycle_.loadLibrary().then((_) => notes_Improve_app_event_listener_lifeycle_.build(context,print))) ;  
}

