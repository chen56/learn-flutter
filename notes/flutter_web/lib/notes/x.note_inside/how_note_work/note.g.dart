// Generated by github.com/chen56/note, please don't edit!

noteInfo() => (
      cells: [
        /// ()
        (
          cellType: 'header',
          offset: 0,
          end: 210,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(r''' # Notebook)
        (
          cellType: 'body',
          offset: 210,
          end: 360,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print("hello flutter-note , i , print("today is ${DateTime.now)
        (
          cellType: 'body',
          offset: 415,
          end: 505,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(r''' notebook的方)
        (
          cellType: 'body',
          offset: 560,
          end: 748,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(ToggleButtons(isSelected)
        (
          cellType: 'body',
          offset: 803,
          end: 981,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(r''' 或者，发现[Time)
        (
          cellType: 'body',
          offset: 1036,
          end: 1179,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (ValueNotifier<int> times = Val, int maxTimes = 600;, var random = Random(1);, Timer.periodic(const Duration(, print(ListenableBuilder(listen)
        (
          cellType: 'body',
          offset: 1234,
          end: 1936,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(""" notebook模式的)
        (
          cellType: 'body',
          offset: 1991,
          end: 2372,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print("hello");, print(1);, print(true);, print(["a", "b", "c"]);)
        (
          cellType: 'body',
          offset: 2427,
          end: 2502,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(""" ### Markdow)
        (
          cellType: 'body',
          offset: 2557,
          end: 2661,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD("""hello markdo)
        (
          cellType: 'body',
          offset: 2716,
          end: 2763,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(""" ### WidgetC)
        (
          cellType: 'body',
          offset: 2818,
          end: 2869,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(Container(width: 100, he)
        (
          cellType: 'body',
          offset: 2924,
          end: 2993,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(""" ### SampleC)
        (
          cellType: 'body',
          offset: 3048,
          end: 3292,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(Container(width: 100, he, print(Container(width: 100, he)
        (
          cellType: 'body',
          offset: 3347,
          end: 3538,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(""" ## 事件回调的问题 )
        (
          cellType: 'body',
          offset: 3593,
          end: 3692,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// ({int count = 0; print(Elevated)
        (
          cellType: 'body',
          offset: 3747,
          end: 3961,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(""" 问题原因：onPres)
        (
          cellType: 'body',
          offset: 4016,
          end: 4293,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (int i = 0;, print(StatefulBuilder(builder:)
        (
          cellType: 'body',
          offset: 4348,
          end: 4557,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(""" 或用runInCurr)
        (
          cellType: 'body',
          offset: 4612,
          end: 4702,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(""" ## cell的元信息)
        (
          cellType: 'body',
          offset: 4757,
          end: 4801,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// ()
        (
          cellType: 'body',
          offset: 4856,
          end: 5137,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(""" ## 结束  上面回调)
        (
          cellType: 'body',
          offset: 5192,
          end: 5265,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// ()
        (
          cellType: 'tail',
          offset: 5265,
          end: 5267,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        )
      ],
    );
