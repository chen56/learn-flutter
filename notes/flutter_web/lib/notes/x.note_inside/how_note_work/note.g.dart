// Generated by github.com/chen56/note, please don't edit!

noteInfo() => (
      cells: [
        /// ()
        (
          cellType: 'header',
          offset: 0,
          end: 211,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(r''' # Notebook)
        (
          cellType: 'body',
          offset: 211,
          end: 361,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print("hello flutter-note , i , print("today is ${DateTime.now)
        (
          cellType: 'body',
          offset: 416,
          end: 506,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(r''' notebook的方)
        (
          cellType: 'body',
          offset: 561,
          end: 749,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(ToggleButtons(isSelected)
        (
          cellType: 'body',
          offset: 804,
          end: 982,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(r''' 或者，发现[Time)
        (
          cellType: 'body',
          offset: 1037,
          end: 1180,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (ValueNotifier<int> times = Val, int maxTimes = 600;, var random = Random(1);, Timer.periodic(const Duration(, print(ListenableBuilder(listen)
        (
          cellType: 'body',
          offset: 1235,
          end: 1937,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(""" notebook模式的)
        (
          cellType: 'body',
          offset: 1992,
          end: 2373,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print("hello");, print(1);, print(true);, print(["a", "b", "c"]);)
        (
          cellType: 'body',
          offset: 2428,
          end: 2503,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(""" ### Markdow)
        (
          cellType: 'body',
          offset: 2558,
          end: 2662,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD("""hello markdo)
        (
          cellType: 'body',
          offset: 2717,
          end: 2764,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(""" ### WidgetC)
        (
          cellType: 'body',
          offset: 2819,
          end: 2870,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(Container(width: 100, he)
        (
          cellType: 'body',
          offset: 2925,
          end: 2994,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(""" ### SampleC)
        (
          cellType: 'body',
          offset: 3049,
          end: 3293,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(Container(width: 100, he, print(Container(width: 100, he)
        (
          cellType: 'body',
          offset: 3348,
          end: 3539,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(""" ## 事件回调的问题 )
        (
          cellType: 'body',
          offset: 3594,
          end: 3693,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// ({int count = 0; print(Elevated)
        (
          cellType: 'body',
          offset: 3748,
          end: 3962,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(""" 问题原因：onPres)
        (
          cellType: 'body',
          offset: 4017,
          end: 4294,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (int i = 0;, print(StatefulBuilder(builder:)
        (
          cellType: 'body',
          offset: 4349,
          end: 4558,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(""" 或用runInCurr)
        (
          cellType: 'body',
          offset: 4613,
          end: 4703,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(""" ## cell的元信息)
        (
          cellType: 'body',
          offset: 4758,
          end: 4802,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// ()
        (
          cellType: 'body',
          offset: 4857,
          end: 5138,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(const MD(""" ## 结束  上面回调)
        (
          cellType: 'body',
          offset: 5193,
          end: 5266,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// ()
        (
          cellType: 'tail',
          offset: 5266,
          end: 5268,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        )
      ],
    );
