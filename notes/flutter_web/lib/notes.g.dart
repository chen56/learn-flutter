import 'package:you_note_dart/note.dart';

// Generated by gen_maters.dart, please don't edit!
// ignore_for_file: library_prefixes, non_constant_identifier_names

import 'package:flutter_web/notes/dev/debug/note.dart' deferred as dev_debug_;
import 'package:flutter_web/notes/dev/debug/note.g.dart' as dev_debug_g;
import 'package:flutter_web/notes/dev/devtool/note.dart' deferred as dev_devtool_;
import 'package:flutter_web/notes/dev/devtool/note.g.dart' as dev_devtool_g;
import 'package:flutter_web/notes/dev/devtool/vmservice/note.dart' deferred as dev_devtool_vmservice_;
import 'package:flutter_web/notes/dev/devtool/vmservice/note.g.dart' as dev_devtool_vmservice_g;
import 'package:flutter_web/notes/dev/host_mirror/note.dart' deferred as dev_host_mirror_;
import 'package:flutter_web/notes/dev/host_mirror/note.g.dart' as dev_host_mirror_g;
import 'package:flutter_web/notes/dev/macos_config/note.dart' deferred as dev_macos_config_;
import 'package:flutter_web/notes/dev/macos_config/note.g.dart' as dev_macos_config_g;
import 'package:flutter_web/notes/env_info/note.dart' deferred as env_info_;
import 'package:flutter_web/notes/env_info/note.g.dart' as env_info_g;
import 'package:flutter_web/notes/i18n/note.dart' deferred as i18n_;
import 'package:flutter_web/notes/i18n/note.g.dart' as i18n_g;
import 'package:flutter_web/notes/Improve_app/1.overview/note.dart' deferred as Improve_app_overview_;
import 'package:flutter_web/notes/Improve_app/1.overview/note.g.dart' as Improve_app_overview_g;
import 'package:flutter_web/notes/Improve_app/event&listener&lifeycle/note.dart' deferred as Improve_app_event_listener_lifeycle_;
import 'package:flutter_web/notes/Improve_app/event&listener&lifeycle/note.g.dart' as Improve_app_event_listener_lifeycle_g;
import 'package:flutter_web/notes/Improve_app/note.dart' deferred as Improve_app_;
import 'package:flutter_web/notes/Improve_app/note.g.dart' as Improve_app_g;
import 'package:flutter_web/notes/Improve_app/RepaintBoundary/note.dart' deferred as Improve_app_RepaintBoundary_;
import 'package:flutter_web/notes/Improve_app/RepaintBoundary/note.g.dart' as Improve_app_RepaintBoundary_g;
import 'package:flutter_web/notes/Improve_app/web_optimization/note.dart' deferred as Improve_app_web_optimization_;
import 'package:flutter_web/notes/Improve_app/web_optimization/note.g.dart' as Improve_app_web_optimization_g;
import 'package:flutter_web/notes/layout/box_layout/constraints/note.dart' deferred as layout_box_layout_constraints_;
import 'package:flutter_web/notes/layout/box_layout/constraints/note.g.dart' as layout_box_layout_constraints_g;
import 'package:flutter_web/notes/layout/note.dart' deferred as layout_;
import 'package:flutter_web/notes/layout/note.g.dart' as layout_g;
import 'package:flutter_web/notes/layout/old/layout/note.dart' deferred as layout_old_layout_;
import 'package:flutter_web/notes/layout/old/layout/note.g.dart' as layout_old_layout_g;
import 'package:flutter_web/notes/layout/responsive_design/note.dart' deferred as layout_responsive_design_;
import 'package:flutter_web/notes/layout/responsive_design/note.g.dart' as layout_responsive_design_g;
import 'package:flutter_web/notes/media&assets&file/assets/note.dart' deferred as media_assets_file_assets_;
import 'package:flutter_web/notes/media&assets&file/assets/note.g.dart' as media_assets_file_assets_g;
import 'package:flutter_web/notes/media&assets&file/file_desktop/note.dart' deferred as media_assets_file_file_desktop_;
import 'package:flutter_web/notes/media&assets&file/file_desktop/note.g.dart' as media_assets_file_file_desktop_g;
import 'package:flutter_web/notes/media&assets&file/file_web/note.dart' deferred as media_assets_file_file_web_;
import 'package:flutter_web/notes/media&assets&file/file_web/note.g.dart' as media_assets_file_file_web_g;
import 'package:flutter_web/notes/navigation/note.dart' deferred as navigation_;
import 'package:flutter_web/notes/navigation/note.g.dart' as navigation_g;
import 'package:flutter_web/notes/note.dart' deferred as root_;
import 'package:flutter_web/notes/note.g.dart' as root_g;
import 'package:flutter_web/notes/pure_dart/analyzer/note.dart' deferred as pure_dart_analyzer_;
import 'package:flutter_web/notes/pure_dart/analyzer/note.g.dart' as pure_dart_analyzer_g;
import 'package:flutter_web/notes/pure_dart/async/note.dart' deferred as pure_dart_async_;
import 'package:flutter_web/notes/pure_dart/async/note.g.dart' as pure_dart_async_g;
import 'package:flutter_web/notes/pure_dart/dart3/note.dart' deferred as pure_dart_dart3_;
import 'package:flutter_web/notes/pure_dart/dart3/note.g.dart' as pure_dart_dart3_g;
import 'package:flutter_web/notes/pure_dart/execption/note.dart' deferred as pure_dart_execption_;
import 'package:flutter_web/notes/pure_dart/execption/note.g.dart' as pure_dart_execption_g;
import 'package:flutter_web/notes/pure_dart/safe_interface/note.dart' deferred as pure_dart_safe_interface_;
import 'package:flutter_web/notes/pure_dart/safe_interface/note.g.dart' as pure_dart_safe_interface_g;
import 'package:flutter_web/notes/pure_dart/serialization_json/note.dart' deferred as pure_dart_serialization_json_;
import 'package:flutter_web/notes/pure_dart/serialization_json/note.g.dart' as pure_dart_serialization_json_g;
import 'package:flutter_web/notes/research/remote_view/note.dart' deferred as research_remote_view_;
import 'package:flutter_web/notes/research/remote_view/note.g.dart' as research_remote_view_g;
import 'package:flutter_web/notes/research/research_parameterized_example/note.dart' deferred as research_research_parameterized_example_;
import 'package:flutter_web/notes/research/research_parameterized_example/note.g.dart' as research_research_parameterized_example_g;
import 'package:flutter_web/notes/state/1.vanilla_state/note.dart' deferred as state_vanilla_state_;
import 'package:flutter_web/notes/state/1.vanilla_state/note.g.dart' as state_vanilla_state_g;
import 'package:flutter_web/notes/state/note.dart' deferred as state_;
import 'package:flutter_web/notes/state/note.g.dart' as state_g;
import 'package:flutter_web/notes/state/StatefulBuilder/note.dart' deferred as state_StatefulBuilder_;
import 'package:flutter_web/notes/state/StatefulBuilder/note.g.dart' as state_StatefulBuilder_g;
import 'package:flutter_web/notes/style&theming/material3/note.dart' deferred as style_theming_material3_;
import 'package:flutter_web/notes/style&theming/material3/note.g.dart' as style_theming_material3_g;
import 'package:flutter_web/notes/thinking_in_ui/readable_html_vs_dart/note.dart' deferred as thinking_in_ui_readable_html_vs_dart_;
import 'package:flutter_web/notes/thinking_in_ui/readable_html_vs_dart/note.g.dart' as thinking_in_ui_readable_html_vs_dart_g;
import 'package:flutter_web/notes/widgets/container_widgets/bar/note.dart' deferred as widgets_container_widgets_bar_;
import 'package:flutter_web/notes/widgets/container_widgets/bar/note.g.dart' as widgets_container_widgets_bar_g;
import 'package:flutter_web/notes/widgets/container_widgets/menu/note.dart' deferred as widgets_container_widgets_menu_;
import 'package:flutter_web/notes/widgets/container_widgets/menu/note.g.dart' as widgets_container_widgets_menu_g;
import 'package:flutter_web/notes/widgets/container_widgets/scrollable/Dismissible/note.dart' deferred as widgets_container_widgets_scrollable_Dismissible_;
import 'package:flutter_web/notes/widgets/container_widgets/scrollable/Dismissible/note.g.dart' as widgets_container_widgets_scrollable_Dismissible_g;
import 'package:flutter_web/notes/widgets/specific_widgets/button/ButtonStyleButton/note.dart' deferred as widgets_specific_widgets_button_ButtonStyleButton_;
import 'package:flutter_web/notes/widgets/specific_widgets/button/ButtonStyleButton/note.g.dart' as widgets_specific_widgets_button_ButtonStyleButton_g;
import 'package:flutter_web/notes/widgets/specific_widgets/button/FloatingActionButton/note.dart' deferred as widgets_specific_widgets_button_FloatingActionButton_;
import 'package:flutter_web/notes/widgets/specific_widgets/button/FloatingActionButton/note.g.dart' as widgets_specific_widgets_button_FloatingActionButton_g;
import 'package:flutter_web/notes/widgets/specific_widgets/button/IconButton/note.dart' deferred as widgets_specific_widgets_button_IconButton_;
import 'package:flutter_web/notes/widgets/specific_widgets/button/IconButton/note.g.dart' as widgets_specific_widgets_button_IconButton_g;
import 'package:flutter_web/notes/widgets/specific_widgets/button/overview/note.dart' deferred as widgets_specific_widgets_button_overview_;
import 'package:flutter_web/notes/widgets/specific_widgets/button/overview/note.g.dart' as widgets_specific_widgets_button_overview_g;
import 'package:flutter_web/notes/widgets/specific_widgets/icon/note.dart' deferred as widgets_specific_widgets_icon_;
import 'package:flutter_web/notes/widgets/specific_widgets/icon/note.g.dart' as widgets_specific_widgets_icon_g;
import 'package:flutter_web/notes/widgets/specific_widgets/input/note.dart' deferred as widgets_specific_widgets_input_;
import 'package:flutter_web/notes/widgets/specific_widgets/input/note.g.dart' as widgets_specific_widgets_input_g;
import 'package:flutter_web/notes/widgets/specific_widgets/selectable/note.dart' deferred as widgets_specific_widgets_selectable_;
import 'package:flutter_web/notes/widgets/specific_widgets/selectable/note.g.dart' as widgets_specific_widgets_selectable_g;
import 'package:flutter_web/notes/widgets/specific_widgets/slider/note.dart' deferred as widgets_specific_widgets_slider_;
import 'package:flutter_web/notes/widgets/specific_widgets/slider/note.g.dart' as widgets_specific_widgets_slider_g;
import 'package:flutter_web/notes/widgets/specific_widgets/text/RichText/note.dart' deferred as widgets_specific_widgets_text_RichText_;
import 'package:flutter_web/notes/widgets/specific_widgets/text/RichText/note.g.dart' as widgets_specific_widgets_text_RichText_g;
import 'package:flutter_web/notes/widgets/specific_widgets/text/Text/note.dart' deferred as widgets_specific_widgets_text_Text_;
import 'package:flutter_web/notes/widgets/specific_widgets/text/Text/note.g.dart' as widgets_specific_widgets_text_Text_g;
import 'package:flutter_web/notes/widgets/specific_widgets/webview/note.dart' deferred as widgets_specific_widgets_webview_;
import 'package:flutter_web/notes/widgets/specific_widgets/webview/note.g.dart' as widgets_specific_widgets_webview_g;
import 'package:flutter_web/notes/x.note_inside/1.welcome/note.dart' deferred as x_note_inside_welcome_;
import 'package:flutter_web/notes/x.note_inside/1.welcome/note.g.dart' as x_note_inside_welcome_g;
import 'package:flutter_web/notes/x.note_inside/how_note_work/note.dart' deferred as x_note_inside_how_note_work_;
import 'package:flutter_web/notes/x.note_inside/how_note_work/note.g.dart' as x_note_inside_how_note_work_g;
import 'package:flutter_web/notes/x.note_inside/mockup_content/note.dart' deferred as x_note_inside_mockup_content_;
import 'package:flutter_web/notes/x.note_inside/mockup_content/note.g.dart' as x_note_inside_mockup_content_g;
import 'package:flutter_web/notes/x.note_inside/note_test_self/nobody/note.dart' deferred as x_note_inside_note_test_self_nobody_;
import 'package:flutter_web/notes/x.note_inside/note_test_self/nobody/note.g.dart' as x_note_inside_note_test_self_nobody_g;
import 'package:flutter_web/notes/x.note_inside/note_test_self/note.dart' deferred as x_note_inside_note_test_self_;
import 'package:flutter_web/notes/x.note_inside/note_test_self/note.g.dart' as x_note_inside_note_test_self_g;


abstract class BaseNotes {
  static final NoteRoute rootroot = NoteRoute.root();
  static NoteRoute put(String path, NoteSourceData noteInfo, NoteRouteLazyInitiator noteRouteLazyInitiator) {
    return rootroot.put(path,noteInfo,noteRouteLazyInitiator);
  }
  final research_research_parameterized_example              = put("/research/research_parameterized_example",research_research_parameterized_example_g.noteInfo(), (context,printc) async => await research_research_parameterized_example_.loadLibrary().then((value) => research_research_parameterized_example_.build(context,printc)));  
  final research_remote_view                                 = put("/research/remote_view",research_remote_view_g.noteInfo(), (context,printc) async => await research_remote_view_.loadLibrary().then((value) => research_remote_view_.build(context,printc)));  
  final env_info                                             = put("/env_info",env_info_g.noteInfo(), (context,printc) async => await env_info_.loadLibrary().then((value) => env_info_.build(context,printc)));  
  final layout_old_layout                                    = put("/layout/old/layout",layout_old_layout_g.noteInfo(), (context,printc) async => await layout_old_layout_.loadLibrary().then((value) => layout_old_layout_.build(context,printc)));  
  final layout_box_layout_constraints                        = put("/layout/box_layout/constraints",layout_box_layout_constraints_g.noteInfo(), (context,printc) async => await layout_box_layout_constraints_.loadLibrary().then((value) => layout_box_layout_constraints_.build(context,printc)));  
  final layout_responsive_design                             = put("/layout/responsive_design",layout_responsive_design_g.noteInfo(), (context,printc) async => await layout_responsive_design_.loadLibrary().then((value) => layout_responsive_design_.build(context,printc)));  
  final layout                                               = put("/layout",layout_g.noteInfo(), (context,printc) async => await layout_.loadLibrary().then((value) => layout_.build(context,printc)));  
  final navigation                                           = put("/navigation",navigation_g.noteInfo(), (context,printc) async => await navigation_.loadLibrary().then((value) => navigation_.build(context,printc)));  
  final state_vanilla_state                                  = put("/state/1.vanilla_state",state_vanilla_state_g.noteInfo(), (context,printc) async => await state_vanilla_state_.loadLibrary().then((value) => state_vanilla_state_.build(context,printc)));  
  final state                                                = put("/state",state_g.noteInfo(), (context,printc) async => await state_.loadLibrary().then((value) => state_.build(context,printc)));  
  final state_StatefulBuilder                                = put("/state/StatefulBuilder",state_StatefulBuilder_g.noteInfo(), (context,printc) async => await state_StatefulBuilder_.loadLibrary().then((value) => state_StatefulBuilder_.build(context,printc)));  
  final media_assets_file_file_desktop                       = put("/media&assets&file/file_desktop",media_assets_file_file_desktop_g.noteInfo(), (context,printc) async => await media_assets_file_file_desktop_.loadLibrary().then((value) => media_assets_file_file_desktop_.build(context,printc)));  
  final media_assets_file_file_web                           = put("/media&assets&file/file_web",media_assets_file_file_web_g.noteInfo(), (context,printc) async => await media_assets_file_file_web_.loadLibrary().then((value) => media_assets_file_file_web_.build(context,printc)));  
  final media_assets_file_assets                             = put("/media&assets&file/assets",media_assets_file_assets_g.noteInfo(), (context,printc) async => await media_assets_file_assets_.loadLibrary().then((value) => media_assets_file_assets_.build(context,printc)));  
  final style_theming_material3                              = put("/style&theming/material3",style_theming_material3_g.noteInfo(), (context,printc) async => await style_theming_material3_.loadLibrary().then((value) => style_theming_material3_.build(context,printc)));  
  final pure_dart_dart3                                      = put("/pure_dart/dart3",pure_dart_dart3_g.noteInfo(), (context,printc) async => await pure_dart_dart3_.loadLibrary().then((value) => pure_dart_dart3_.build(context,printc)));  
  final pure_dart_async                                      = put("/pure_dart/async",pure_dart_async_g.noteInfo(), (context,printc) async => await pure_dart_async_.loadLibrary().then((value) => pure_dart_async_.build(context,printc)));  
  final pure_dart_safe_interface                             = put("/pure_dart/safe_interface",pure_dart_safe_interface_g.noteInfo(), (context,printc) async => await pure_dart_safe_interface_.loadLibrary().then((value) => pure_dart_safe_interface_.build(context,printc)));  
  final pure_dart_execption                                  = put("/pure_dart/execption",pure_dart_execption_g.noteInfo(), (context,printc) async => await pure_dart_execption_.loadLibrary().then((value) => pure_dart_execption_.build(context,printc)));  
  final pure_dart_serialization_json                         = put("/pure_dart/serialization_json",pure_dart_serialization_json_g.noteInfo(), (context,printc) async => await pure_dart_serialization_json_.loadLibrary().then((value) => pure_dart_serialization_json_.build(context,printc)));  
  final pure_dart_analyzer                                   = put("/pure_dart/analyzer",pure_dart_analyzer_g.noteInfo(), (context,printc) async => await pure_dart_analyzer_.loadLibrary().then((value) => pure_dart_analyzer_.build(context,printc)));  
  final dev_host_mirror                                      = put("/dev/host_mirror",dev_host_mirror_g.noteInfo(), (context,printc) async => await dev_host_mirror_.loadLibrary().then((value) => dev_host_mirror_.build(context,printc)));  
  final dev_macos_config                                     = put("/dev/macos_config",dev_macos_config_g.noteInfo(), (context,printc) async => await dev_macos_config_.loadLibrary().then((value) => dev_macos_config_.build(context,printc)));  
  final dev_devtool_vmservice                                = put("/dev/devtool/vmservice",dev_devtool_vmservice_g.noteInfo(), (context,printc) async => await dev_devtool_vmservice_.loadLibrary().then((value) => dev_devtool_vmservice_.build(context,printc)));  
  final dev_devtool                                          = put("/dev/devtool",dev_devtool_g.noteInfo(), (context,printc) async => await dev_devtool_.loadLibrary().then((value) => dev_devtool_.build(context,printc)));  
  final dev_debug                                            = put("/dev/debug",dev_debug_g.noteInfo(), (context,printc) async => await dev_debug_.loadLibrary().then((value) => dev_debug_.build(context,printc)));  
  final root                                                 = put("/",root_g.noteInfo(), (context,printc) async => await root_.loadLibrary().then((value) => root_.build(context,printc)));  
  final i18n                                                 = put("/i18n",i18n_g.noteInfo(), (context,printc) async => await i18n_.loadLibrary().then((value) => i18n_.build(context,printc)));  
  final thinking_in_ui_readable_html_vs_dart                 = put("/thinking_in_ui/readable_html_vs_dart",thinking_in_ui_readable_html_vs_dart_g.noteInfo(), (context,printc) async => await thinking_in_ui_readable_html_vs_dart_.loadLibrary().then((value) => thinking_in_ui_readable_html_vs_dart_.build(context,printc)));  
  final x_note_inside_how_note_work                          = put("/x.note_inside/how_note_work",x_note_inside_how_note_work_g.noteInfo(), (context,printc) async => await x_note_inside_how_note_work_.loadLibrary().then((value) => x_note_inside_how_note_work_.build(context,printc)));  
  final x_note_inside_mockup_content                         = put("/x.note_inside/mockup_content",x_note_inside_mockup_content_g.noteInfo(), (context,printc) async => await x_note_inside_mockup_content_.loadLibrary().then((value) => x_note_inside_mockup_content_.build(context,printc)));  
  final x_note_inside_welcome                                = put("/x.note_inside/1.welcome",x_note_inside_welcome_g.noteInfo(), (context,printc) async => await x_note_inside_welcome_.loadLibrary().then((value) => x_note_inside_welcome_.build(context,printc)));  
  final x_note_inside_note_test_self_nobody                  = put("/x.note_inside/note_test_self/nobody",x_note_inside_note_test_self_nobody_g.noteInfo(), (context,printc) async => await x_note_inside_note_test_self_nobody_.loadLibrary().then((value) => x_note_inside_note_test_self_nobody_.build(context,printc)));  
  final x_note_inside_note_test_self                         = put("/x.note_inside/note_test_self",x_note_inside_note_test_self_g.noteInfo(), (context,printc) async => await x_note_inside_note_test_self_.loadLibrary().then((value) => x_note_inside_note_test_self_.build(context,printc)));  
  final widgets_specific_widgets_input                       = put("/widgets/specific_widgets/input",widgets_specific_widgets_input_g.noteInfo(), (context,printc) async => await widgets_specific_widgets_input_.loadLibrary().then((value) => widgets_specific_widgets_input_.build(context,printc)));  
  final widgets_specific_widgets_webview                     = put("/widgets/specific_widgets/webview",widgets_specific_widgets_webview_g.noteInfo(), (context,printc) async => await widgets_specific_widgets_webview_.loadLibrary().then((value) => widgets_specific_widgets_webview_.build(context,printc)));  
  final widgets_specific_widgets_slider                      = put("/widgets/specific_widgets/slider",widgets_specific_widgets_slider_g.noteInfo(), (context,printc) async => await widgets_specific_widgets_slider_.loadLibrary().then((value) => widgets_specific_widgets_slider_.build(context,printc)));  
  final widgets_specific_widgets_selectable                  = put("/widgets/specific_widgets/selectable",widgets_specific_widgets_selectable_g.noteInfo(), (context,printc) async => await widgets_specific_widgets_selectable_.loadLibrary().then((value) => widgets_specific_widgets_selectable_.build(context,printc)));  
  final widgets_specific_widgets_button_ButtonStyleButton    = put("/widgets/specific_widgets/button/ButtonStyleButton",widgets_specific_widgets_button_ButtonStyleButton_g.noteInfo(), (context,printc) async => await widgets_specific_widgets_button_ButtonStyleButton_.loadLibrary().then((value) => widgets_specific_widgets_button_ButtonStyleButton_.build(context,printc)));  
  final widgets_specific_widgets_button_FloatingActionButton = put("/widgets/specific_widgets/button/FloatingActionButton",widgets_specific_widgets_button_FloatingActionButton_g.noteInfo(), (context,printc) async => await widgets_specific_widgets_button_FloatingActionButton_.loadLibrary().then((value) => widgets_specific_widgets_button_FloatingActionButton_.build(context,printc)));  
  final widgets_specific_widgets_button_IconButton           = put("/widgets/specific_widgets/button/IconButton",widgets_specific_widgets_button_IconButton_g.noteInfo(), (context,printc) async => await widgets_specific_widgets_button_IconButton_.loadLibrary().then((value) => widgets_specific_widgets_button_IconButton_.build(context,printc)));  
  final widgets_specific_widgets_button_overview             = put("/widgets/specific_widgets/button/overview",widgets_specific_widgets_button_overview_g.noteInfo(), (context,printc) async => await widgets_specific_widgets_button_overview_.loadLibrary().then((value) => widgets_specific_widgets_button_overview_.build(context,printc)));  
  final widgets_specific_widgets_text_RichText               = put("/widgets/specific_widgets/text/RichText",widgets_specific_widgets_text_RichText_g.noteInfo(), (context,printc) async => await widgets_specific_widgets_text_RichText_.loadLibrary().then((value) => widgets_specific_widgets_text_RichText_.build(context,printc)));  
  final widgets_specific_widgets_text_Text                   = put("/widgets/specific_widgets/text/Text",widgets_specific_widgets_text_Text_g.noteInfo(), (context,printc) async => await widgets_specific_widgets_text_Text_.loadLibrary().then((value) => widgets_specific_widgets_text_Text_.build(context,printc)));  
  final widgets_specific_widgets_icon                        = put("/widgets/specific_widgets/icon",widgets_specific_widgets_icon_g.noteInfo(), (context,printc) async => await widgets_specific_widgets_icon_.loadLibrary().then((value) => widgets_specific_widgets_icon_.build(context,printc)));  
  final widgets_container_widgets_menu                       = put("/widgets/container_widgets/menu",widgets_container_widgets_menu_g.noteInfo(), (context,printc) async => await widgets_container_widgets_menu_.loadLibrary().then((value) => widgets_container_widgets_menu_.build(context,printc)));  
  final widgets_container_widgets_scrollable_Dismissible     = put("/widgets/container_widgets/scrollable/Dismissible",widgets_container_widgets_scrollable_Dismissible_g.noteInfo(), (context,printc) async => await widgets_container_widgets_scrollable_Dismissible_.loadLibrary().then((value) => widgets_container_widgets_scrollable_Dismissible_.build(context,printc)));  
  final widgets_container_widgets_bar                        = put("/widgets/container_widgets/bar",widgets_container_widgets_bar_g.noteInfo(), (context,printc) async => await widgets_container_widgets_bar_.loadLibrary().then((value) => widgets_container_widgets_bar_.build(context,printc)));  
  final Improve_app_overview                                 = put("/Improve_app/1.overview",Improve_app_overview_g.noteInfo(), (context,printc) async => await Improve_app_overview_.loadLibrary().then((value) => Improve_app_overview_.build(context,printc)));  
  final Improve_app_web_optimization                         = put("/Improve_app/web_optimization",Improve_app_web_optimization_g.noteInfo(), (context,printc) async => await Improve_app_web_optimization_.loadLibrary().then((value) => Improve_app_web_optimization_.build(context,printc)));  
  final Improve_app_RepaintBoundary                          = put("/Improve_app/RepaintBoundary",Improve_app_RepaintBoundary_g.noteInfo(), (context,printc) async => await Improve_app_RepaintBoundary_.loadLibrary().then((value) => Improve_app_RepaintBoundary_.build(context,printc)));  
  final Improve_app                                          = put("/Improve_app",Improve_app_g.noteInfo(), (context,printc) async => await Improve_app_.loadLibrary().then((value) => Improve_app_.build(context,printc)));  
  final Improve_app_event_listener_lifeycle                  = put("/Improve_app/event&listener&lifeycle",Improve_app_event_listener_lifeycle_g.noteInfo(), (context,printc) async => await Improve_app_event_listener_lifeycle_.loadLibrary().then((value) => Improve_app_event_listener_lifeycle_.build(context,printc)));  
}
