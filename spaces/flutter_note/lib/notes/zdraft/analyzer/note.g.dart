// /// Generated by gen_maters.dart, please don't edit!

noteInfo() => (
      cells: [
        /// ()
        (
          cellType: 'header',
          offset: 0,
          end: 309,
          statementCount: 0,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(''' # analyzer )
        (
          cellType: 'body',
          offset: 309,
          end: 415,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (var x = analyzer_util.parseStr, for (var e in x.unit.directive)
        (
          cellType: 'body',
          offset: 493,
          end: 684,
          statementCount: 2,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown('''  ## 性能不错  看)
        (
          cellType: 'body',
          offset: 762,
          end: 839,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (DateTime start = DateTime.now(, int times = 1000;, for (int i = 0; i < times; i++, print("分析本页面源文件:$times 次, 花费时间)
        (
          cellType: 'body',
          offset: 917,
          end: 1250,
          statementCount: 4,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// ()
        (
          cellType: 'tail',
          offset: 1250,
          end: 1252,
          statementCount: 0,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        )
      ],
      encodedCode:
          "aW1wb3J0ICdwYWNrYWdlOmFuYWx5emVyL2RhcnQvYW5hbHlzaXMvZmVhdHVyZXMuZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyL21hdGVyaWFsLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6bm90ZS9ub3RlX3BhZ2UuZGFydCc7CmltcG9ydCAncGFja2FnZTphbmFseXplci9kYXJ0L2FuYWx5c2lzL3V0aWxpdGllcy5kYXJ0JyBhcyBhbmFseXplcl91dGlsOwoKRmx1dHRlck5vdGVDb25mIHBhZ2UgPSBGbHV0dGVyTm90ZUNvbmYoCiAgYnVpbGRlcjogYnVpbGQsCik7CgpidWlsZChCdWlsZENvbnRleHQgY29udGV4dCwgUGVuIHByaW50KSB7CiAgcHJpbnQubWFya2Rvd24oJycnCiMgYW5hbHl6ZXIKCiMjIOWIhuaekOWZqOWPr+S7peWcqHdlYuaooeW8j+i/kOi9rAoK5YiG5p6Q5pys6aG1ZGFydOaWh+S7tu+8jOW5tuaJk+WNsOWHumltcG9ydCBhbmQgZXhwb3J0IGRpcmVjdGl2ZXMKICAnJycpOwogIHByaW50LiRfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXygpOwoKICB2YXIgeCA9IGFuYWx5emVyX3V0aWwucGFyc2VTdHJpbmcoCiAgICAgIGNvbnRlbnQ6IHByaW50LnBhdGguc291cmNlLmNvZGUsCiAgICAgIGZlYXR1cmVTZXQ6IEZlYXR1cmVTZXQubGF0ZXN0TGFuZ3VhZ2VWZXJzaW9uKCkpOwogIGZvciAodmFyIGUgaW4geC51bml0LmRpcmVjdGl2ZXMpIHsKICAgIHByaW50KGUpOwogIH0KCiAgcHJpbnQuJF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fKCk7CiAgcHJpbnQubWFya2Rvd24oJycnCgojIyDmgKfog73kuI3plJkKCueci+S4i+mdouaAp+iDvea1i+ivle+8jOWPr+S7peWunuaXtuWcqFVJ5LiK5aSE55CG5Y2V5paH5Lu26K+t5rOV5qCR77yM5LiN6ZyA6KaB6aKE5aSE55CG5LqG77yaCiAgJycnKTsKCiAgcHJpbnQuJF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fKCk7CiAgRGF0ZVRpbWUgc3RhcnQgPSBEYXRlVGltZS5ub3coKTsKICBpbnQgdGltZXMgPSAxMDAwOwogIGZvciAoaW50IGkgPSAwOyBpIDwgdGltZXM7IGkrKykgewogICAgYW5hbHl6ZXJfdXRpbC5wYXJzZVN0cmluZygKICAgICAgICBjb250ZW50OiBwcmludC5wYXRoLnNvdXJjZS5jb2RlLAogICAgICAgIGZlYXR1cmVTZXQ6IEZlYXR1cmVTZXQubGF0ZXN0TGFuZ3VhZ2VWZXJzaW9uKCkpOwogIH0KICBwcmludCgKICAgICAgIuWIhuaekOacrOmhtemdoua6kOaWh+S7tjokdGltZXMg5qyhLCDoirHotLnml7bpl7Q6ICR7RGF0ZVRpbWUubm93KCkuZGlmZmVyZW5jZShzdGFydCkuaW5NaWxsaXNlY29uZHN9IG1pbGxpc2Vjb25kcyIpOwp9Cg=="
    );
