// /// Generated by gen_maters.dart, please don't edit!

noteInfo() => (
      cells: [
        /// ()
        (
          cellType: 'header',
          offset: 0,
          end: 247,
          statementCount: 0,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(''' # analyzer )
        (
          cellType: 'body',
          offset: 247,
          end: 353,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (var x = analyzer_util.parseStr, for (var e in x.unit.directive)
        (
          cellType: 'body',
          offset: 431,
          end: 622,
          statementCount: 2,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown('''  ## 性能不错  看)
        (
          cellType: 'body',
          offset: 700,
          end: 777,
          statementCount: 1,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (DateTime start = DateTime.now(, int times = 1000;, for (int i = 0; i < times; i++, print("分析本页面源文件:$times 次, 花费时间)
        (
          cellType: 'body',
          offset: 855,
          end: 1188,
          statementCount: 4,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// ()
        (
          cellType: 'tail',
          offset: 1188,
          end: 1190,
          statementCount: 0,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        )
      ],
      encodedCode:
          "aW1wb3J0ICdwYWNrYWdlOmFuYWx5emVyL2RhcnQvYW5hbHlzaXMvZmVhdHVyZXMuZGFydCc7CmltcG9ydCAncGFja2FnZTpmbHV0dGVyL21hdGVyaWFsLmRhcnQnOwppbXBvcnQgJ3BhY2thZ2U6bm90ZS9ub3RlX3BhZ2UuZGFydCc7CmltcG9ydCAncGFja2FnZTphbmFseXplci9kYXJ0L2FuYWx5c2lzL3V0aWxpdGllcy5kYXJ0JyBhcyBhbmFseXplcl91dGlsOwoKYnVpbGQoQnVpbGRDb250ZXh0IGNvbnRleHQsIFBlbiBwcmludCkgewogIHByaW50Lm1hcmtkb3duKCcnJwojIGFuYWx5emVyCgojIyDliIbmnpDlmajlj6/ku6XlnKh3ZWLmqKHlvI/ov5DovawKCuWIhuaekOacrOmhtWRhcnTmlofku7bvvIzlubbmiZPljbDlh7ppbXBvcnQgYW5kIGV4cG9ydCBkaXJlY3RpdmVzCiAgJycnKTsKICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKCiAgdmFyIHggPSBhbmFseXplcl91dGlsLnBhcnNlU3RyaW5nKAogICAgICBjb250ZW50OiBwcmludC5wYXRoLnNvdXJjZS5jb2RlLAogICAgICBmZWF0dXJlU2V0OiBGZWF0dXJlU2V0LmxhdGVzdExhbmd1YWdlVmVyc2lvbigpKTsKICBmb3IgKHZhciBlIGluIHgudW5pdC5kaXJlY3RpdmVzKSB7CiAgICBwcmludChlKTsKICB9CgogIHByaW50LiRfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXygpOwogIHByaW50Lm1hcmtkb3duKCcnJwoKIyMg5oCn6IO95LiN6ZSZCgrnnIvkuIvpnaLmgKfog73mtYvor5XvvIzlj6/ku6Xlrp7ml7blnKhVSeS4iuWkhOeQhuWNleaWh+S7tuivreazleagke+8jOS4jemcgOimgemihOWkhOeQhuS6hu+8mgogICcnJyk7CgogIHByaW50LiRfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXygpOwogIERhdGVUaW1lIHN0YXJ0ID0gRGF0ZVRpbWUubm93KCk7CiAgaW50IHRpbWVzID0gMTAwMDsKICBmb3IgKGludCBpID0gMDsgaSA8IHRpbWVzOyBpKyspIHsKICAgIGFuYWx5emVyX3V0aWwucGFyc2VTdHJpbmcoCiAgICAgICAgY29udGVudDogcHJpbnQucGF0aC5zb3VyY2UuY29kZSwKICAgICAgICBmZWF0dXJlU2V0OiBGZWF0dXJlU2V0LmxhdGVzdExhbmd1YWdlVmVyc2lvbigpKTsKICB9CiAgcHJpbnQoCiAgICAgICLliIbmnpDmnKzpobXpnaLmupDmlofku7Y6JHRpbWVzIOasoSwg6Iqx6LS55pe26Ze0OiAke0RhdGVUaW1lLm5vdygpLmRpZmZlcmVuY2Uoc3RhcnQpLmluTWlsbGlzZWNvbmRzfSBtaWxsaXNlY29uZHMiKTsKfQo="
    );
