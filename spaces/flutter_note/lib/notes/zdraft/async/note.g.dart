// /// Generated by gen_maters.dart, please don't edit!

noteInfo() => (
      cells: [
        /// ()
        (
          cellType: 'header',
          offset: 0,
          end: 182,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// ()
        (
          cellType: 'body',
          offset: 182,
          end: 185,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(r''' # 异步  很好的异)
        (
          cellType: 'body',
          offset: 263,
          end: 533,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// ({Future<String> bomb() async {)
        (
          cellType: 'body',
          offset: 611,
          end: 1388,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(r''' ## Isalted)
        (
          cellType: 'body',
          offset: 1466,
          end: 1947,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// ({send123(sendPort) async {for )
        (
          cellType: 'body',
          offset: 2025,
          end: 2724,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// ()
        (
          cellType: 'tail',
          offset: 2724,
          end: 2726,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        )
      ],
      encodedCode:
          "aW1wb3J0ICdkYXJ0Omlzb2xhdGUnOwoKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CmltcG9ydCAncGFja2FnZTptYXRlL21hdGVfbm90ZS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOm5vdGUvbm90ZS5kYXJ0JzsKCmJ1aWxkKEJ1aWxkQ29udGV4dCBjb250ZXh0LCBQZW4gcHJpbnQpIGFzeW5jIHsKICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKICBwcmludC5tYXJrZG93bihyJycnCiMg5byC5q2lCgrlvojlpb3nmoTlvILmraXop4bpopHvvJoKW0RhcnQgYXN5bmNocm9ub3VzIHByb2dyYW1taW5nOiBJc29sYXRlcyBhbmQgZXZlbnQgbG9vcHNdKGh0dHBzOi8vbWVkaXVtLmNvbS9kYXJ0bGFuZy9kYXJ0LWFzeW5jaHJvbm91cy1wcm9ncmFtbWluZy1pc29sYXRlcy1hbmQtZXZlbnQtbG9vcHMtYmZmYzNlMjk2YTZhKQrmlofmoaPlr7nlupTnmoTop4bpopHvvJo8aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj12bF9BYUNndWRjWT4KCiMjIEZ1dHVyZQoKICAnJycpOwoKICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKICB7CiAgICBGdXR1cmU8U3RyaW5nPiBib21iKCkgYXN5bmMgewogICAgICBwcmludCgicyIpOwogICAgICByZXR1cm4gRnV0dXJlLmRlbGF5ZWQoRHVyYXRpb24oc2Vjb25kczogMyksICgpID0+ICJib25nISEhIik7CiAgICB9CgogICAgLy8gcHJpbnQucnVuSW5DdXJyZW50Q2VsbCgocHJpbnQpIHsKICAgIC8vICAgZGVidWdQcmludCgicHBwICR7cHJpbnR9Iik7CiAgICAvLyAgIGRlYnVnUHJpbnQoInBwcC0tLSAke3ByaW50LnBlbi5jZWxsc30iKTsKICAgIC8vCiAgICAvLyAgIHByaW50KEZpbGxlZEJ1dHRvbihvblByZXNzZWQ6ICgpIHt9LCBjaGlsZDogY29uc3QgVGV4dCgi5oyJ5ZCOM+enkuWQjueIhueCuCIpKSk7CiAgICAvLyB9KTsKCiAgICAvLwogICAgcHJpbnQucnVuSW5DdXJyZW50Q2VsbCgocHJpbnQpIHsKICAgICAgb25QcmVzc2VkKCkgYXN5bmMgewogICAgICAgIHZhciBtc2cgPSBhd2FpdCBib21iKCk7CiAgICAgICAgLy8gdG9kbyDov5nkuKpwcmludOWcqCBhc3luY+aXtu+8jOS8muaJk+WIsOacgOWQjuS4gOS4qmNlbGwKICAgICAgICBwcmludChtc2cpOwogICAgICAgIC8vIGRlYnVnUHJpbnQoInBwcDIgJHtwcmludC5oYXNoQ29kZX0iKTsKICAgICAgICAvLyBkZWJ1Z1ByaW50KCJwcHAyLS0tICR7cHJpbnQucGVuLmNlbGxzfSIpOwogICAgICB9CgogICAgICBwcmludChGaWxsZWRCdXR0b24oCiAgICAgICAgICBvblByZXNzZWQ6IG9uUHJlc3NlZC4uc2FtcGxlQ29kZVN0ciA9ICJvblByZXNzZWQiLAogICAgICAgICAgY2hpbGQ6IGNvbnN0IFRleHQoIuaMieWQjjPnp5LlkI7niIbngrgiKSkpOwogICAgfSk7CiAgfQoKICBwcmludC4kX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18oKTsKICBwcmludC5tYXJrZG93bihyJycnCiMjIElzYWx0ZWQKCndlYiDmqKHlvI/kuI3mlK/mjIEgSXNvbGF0ZWTvvIzlpoLmnpzov5DooYzlnKh3ZWLmqKHlvI/kuIvvvIzmraTojIPkvovlsIbmiqXplJkKCkVycm9yOiBVbnN1cHBvcnRlZCBvcGVyYXRpb246IGRhcnQ6aXNvbGF0ZSBpcyBub3Qgc3VwcG9ydGVkIG9uIGRhcnQ0d2ViCgoyMDE45bm05YmNZGFydDHmlK/mjIF3ZWLniYhJc29sYXRlZO+8jOS9hmRhcnQy5ZCO6KKr5Y675o6J5LqG77yM6K+m57uG5L+h5oGv5Y+C6ICD77yaCltbZGFydC1hbm5vdW5jZV0gRGFydDIgQnJlYWtpbmcgQ2hhbmdlOiBSZW1vdmluZyB3ZWIgc3VwcG9ydCBmb3IgZGFydDptaXJyb3JzIGFuZCBkYXJ0Omlzb2xhdGUgMjAxOOW5tDLmnIgyNOaXpSBdKGh0dHBzOi8vZ3JvdXBzLmdvb2dsZS5jb20vYS9kYXJ0bGFuZy5vcmcvZy9taXNjL2MvZGpmRk1OQ1dta0UvbS9GN1dFOGEwSkF3QUo/cGxpPTEpCjxodHRwczovL2dyb3Vwcy5nb29nbGUuY29tL2EvZGFydGxhbmcub3JnL2cvbWlzYy9jL2RqZkZNTkNXbWtFL20vRjdXRThhMEpBd0FKP3BsaT0xPgogICcnJyk7CgogIHByaW50LiRfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXygpOwogIHsKICAgIHNlbmQxMjMoc2VuZFBvcnQpIGFzeW5jIHsKICAgICAgZm9yICh2YXIgbWVzc2FnZSBpbiBbIjEiLCAiMiIsICIzIl0pIHsKICAgICAgICAoc2VuZFBvcnQgYXMgU2VuZFBvcnQpLnNlbmQobWVzc2FnZSk7CiAgICAgICAgYXdhaXQgRnV0dXJlLmRlbGF5ZWQoY29uc3QgRHVyYXRpb24oc2Vjb25kczogMSkpOwogICAgICB9CiAgICB9CgogICAgcHJpbnQucnVuSW5DdXJyZW50Q2VsbCgocHJpbnQpIHsKICAgICAgb25QcmVzc2VkKCkgYXN5bmMgewogICAgICAgIHRyeSB7CiAgICAgICAgICBSZWNlaXZlUG9ydCByZWNlaXZlUG9ydCA9IFJlY2VpdmVQb3J0KCk7CiAgICAgICAgICBJc29sYXRlLnNwYXduKHNlbmQxMjMsIHJlY2VpdmVQb3J0LnNlbmRQb3J0KTsKCiAgICAgICAgICByZWNlaXZlUG9ydC5saXN0ZW4oKG1lc3NhZ2UpIHsKICAgICAgICAgICAgcHJpbnQoInJlY2VpdmUgOiAkbWVzc2FnZSIpOwogICAgICAgICAgfSk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgcHJpbnQoImVycm9yOiAkZSIpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcHJpbnQoRmlsbGVkQnV0dG9uKAogICAgICAgICAgb25QcmVzc2VkOiBvblByZXNzZWQuLnNhbXBsZUNvZGVTdHIgPSAib25QcmVzc2VkIiwKICAgICAgICAgIGNoaWxkOiBjb25zdCBUZXh0KCLlvIDlp4vvvIzmr4/pmpTkuIDnp5Llj5HpgIEx77yMMu+8jDMiKSkpOwogICAgfSk7CiAgfQp9Cg=="
    );
