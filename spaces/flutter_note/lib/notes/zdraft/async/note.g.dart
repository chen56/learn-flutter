// /// Generated by gen_maters.dart, please don't edit!

noteInfo() => (
      cells: [
        /// ()
        (
          cellType: 'header',
          offset: 0,
          end: 187,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// ()
        (
          cellType: 'body',
          offset: 187,
          end: 190,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(r''' # 异步  很好的异)
        (
          cellType: 'body',
          offset: 268,
          end: 538,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// ({Future<String> bomb() async {)
        (
          cellType: 'body',
          offset: 616,
          end: 1393,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(r''' ## Isalted)
        (
          cellType: 'body',
          offset: 1471,
          end: 1952,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// ({send123(sendPort) async {for )
        (
          cellType: 'body',
          offset: 2030,
          end: 2729,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// ()
        (
          cellType: 'tail',
          offset: 2729,
          end: 2731,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        )
      ],
      encodedCode:
          "aW1wb3J0ICdkYXJ0Omlzb2xhdGUnOwoKaW1wb3J0ICdwYWNrYWdlOmZsdXR0ZXIvbWF0ZXJpYWwuZGFydCc7CmltcG9ydCAncGFja2FnZTptYXRlL21hdGVfbm90ZS5kYXJ0JzsKaW1wb3J0ICdwYWNrYWdlOm5vdGUvbm90ZV9wYWdlLmRhcnQnOwoKYnVpbGQoQnVpbGRDb250ZXh0IGNvbnRleHQsIFBlbiBwcmludCkgYXN5bmMgewogIHByaW50LiRfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXygpOwogIHByaW50Lm1hcmtkb3duKHInJycKIyDlvILmraUKCuW+iOWlveeahOW8guatpeinhumike+8mgpbRGFydCBhc3luY2hyb25vdXMgcHJvZ3JhbW1pbmc6IElzb2xhdGVzIGFuZCBldmVudCBsb29wc10oaHR0cHM6Ly9tZWRpdW0uY29tL2RhcnRsYW5nL2RhcnQtYXN5bmNocm9ub3VzLXByb2dyYW1taW5nLWlzb2xhdGVzLWFuZC1ldmVudC1sb29wcy1iZmZjM2UyOTZhNmEpCuaWh+aho+WvueW6lOeahOinhumike+8mjxodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PXZsX0FhQ2d1ZGNZPgoKIyMgRnV0dXJlCgogICcnJyk7CgogIHByaW50LiRfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXygpOwogIHsKICAgIEZ1dHVyZTxTdHJpbmc+IGJvbWIoKSBhc3luYyB7CiAgICAgIHByaW50KCJzIik7CiAgICAgIHJldHVybiBGdXR1cmUuZGVsYXllZChEdXJhdGlvbihzZWNvbmRzOiAzKSwgKCkgPT4gImJvbmchISEiKTsKICAgIH0KCiAgICAvLyBwcmludC5ydW5JbkN1cnJlbnRDZWxsKChwcmludCkgewogICAgLy8gICBkZWJ1Z1ByaW50KCJwcHAgJHtwcmludH0iKTsKICAgIC8vICAgZGVidWdQcmludCgicHBwLS0tICR7cHJpbnQucGVuLmNlbGxzfSIpOwogICAgLy8KICAgIC8vICAgcHJpbnQoRmlsbGVkQnV0dG9uKG9uUHJlc3NlZDogKCkge30sIGNoaWxkOiBjb25zdCBUZXh0KCLmjInlkI4z56eS5ZCO54iG54K4IikpKTsKICAgIC8vIH0pOwoKICAgIC8vCiAgICBwcmludC5ydW5JbkN1cnJlbnRDZWxsKChwcmludCkgewogICAgICBvblByZXNzZWQoKSBhc3luYyB7CiAgICAgICAgdmFyIG1zZyA9IGF3YWl0IGJvbWIoKTsKICAgICAgICAvLyB0b2RvIOi/meS4qnByaW505ZyoIGFzeW5j5pe277yM5Lya5omT5Yiw5pyA5ZCO5LiA5LiqY2VsbAogICAgICAgIHByaW50KG1zZyk7CiAgICAgICAgLy8gZGVidWdQcmludCgicHBwMiAke3ByaW50Lmhhc2hDb2RlfSIpOwogICAgICAgIC8vIGRlYnVnUHJpbnQoInBwcDItLS0gJHtwcmludC5wZW4uY2VsbHN9Iik7CiAgICAgIH0KCiAgICAgIHByaW50KEZpbGxlZEJ1dHRvbigKICAgICAgICAgIG9uUHJlc3NlZDogb25QcmVzc2VkLi5zYW1wbGVDb2RlU3RyID0gIm9uUHJlc3NlZCIsCiAgICAgICAgICBjaGlsZDogY29uc3QgVGV4dCgi5oyJ5ZCOM+enkuWQjueIhueCuCIpKSk7CiAgICB9KTsKICB9CgogIHByaW50LiRfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXygpOwogIHByaW50Lm1hcmtkb3duKHInJycKIyMgSXNhbHRlZAoKd2ViIOaooeW8j+S4jeaUr+aMgSBJc29sYXRlZO+8jOWmguaenOi/kOihjOWcqHdlYuaooeW8j+S4i++8jOatpOiMg+S+i+WwhuaKpemUmQoKRXJyb3I6IFVuc3VwcG9ydGVkIG9wZXJhdGlvbjogZGFydDppc29sYXRlIGlzIG5vdCBzdXBwb3J0ZWQgb24gZGFydDR3ZWIKCjIwMTjlubTliY1kYXJ0MeaUr+aMgXdlYueJiElzb2xhdGVk77yM5L2GZGFydDLlkI7ooqvljrvmjonkuobvvIzor6bnu4bkv6Hmga/lj4LogIPvvJoKW1tkYXJ0LWFubm91bmNlXSBEYXJ0MiBCcmVha2luZyBDaGFuZ2U6IFJlbW92aW5nIHdlYiBzdXBwb3J0IGZvciBkYXJ0Om1pcnJvcnMgYW5kIGRhcnQ6aXNvbGF0ZSAyMDE45bm0MuaciDI05pelIF0oaHR0cHM6Ly9ncm91cHMuZ29vZ2xlLmNvbS9hL2RhcnRsYW5nLm9yZy9nL21pc2MvYy9kamZGTU5DV21rRS9tL0Y3V0U4YTBKQXdBSj9wbGk9MSkKPGh0dHBzOi8vZ3JvdXBzLmdvb2dsZS5jb20vYS9kYXJ0bGFuZy5vcmcvZy9taXNjL2MvZGpmRk1OQ1dta0UvbS9GN1dFOGEwSkF3QUo/cGxpPTE+CiAgJycnKTsKCiAgcHJpbnQuJF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fKCk7CiAgewogICAgc2VuZDEyMyhzZW5kUG9ydCkgYXN5bmMgewogICAgICBmb3IgKHZhciBtZXNzYWdlIGluIFsiMSIsICIyIiwgIjMiXSkgewogICAgICAgIChzZW5kUG9ydCBhcyBTZW5kUG9ydCkuc2VuZChtZXNzYWdlKTsKICAgICAgICBhd2FpdCBGdXR1cmUuZGVsYXllZChjb25zdCBEdXJhdGlvbihzZWNvbmRzOiAxKSk7CiAgICAgIH0KICAgIH0KCiAgICBwcmludC5ydW5JbkN1cnJlbnRDZWxsKChwcmludCkgewogICAgICBvblByZXNzZWQoKSBhc3luYyB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIFJlY2VpdmVQb3J0IHJlY2VpdmVQb3J0ID0gUmVjZWl2ZVBvcnQoKTsKICAgICAgICAgIElzb2xhdGUuc3Bhd24oc2VuZDEyMywgcmVjZWl2ZVBvcnQuc2VuZFBvcnQpOwoKICAgICAgICAgIHJlY2VpdmVQb3J0Lmxpc3RlbigobWVzc2FnZSkgewogICAgICAgICAgICBwcmludCgicmVjZWl2ZSA6ICRtZXNzYWdlIik7CiAgICAgICAgICB9KTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICBwcmludCgiZXJyb3I6ICRlIik7CiAgICAgICAgfQogICAgICB9CgogICAgICBwcmludChGaWxsZWRCdXR0b24oCiAgICAgICAgICBvblByZXNzZWQ6IG9uUHJlc3NlZC4uc2FtcGxlQ29kZVN0ciA9ICJvblByZXNzZWQiLAogICAgICAgICAgY2hpbGQ6IGNvbnN0IFRleHQoIuW8gOWni++8jOavj+malOS4gOenkuWPkemAgTHvvIwy77yMMyIpKSk7CiAgICB9KTsKICB9Cn0K"
    );
