// /// Generated by gen_maters.dart, please don't edit!

noteInfo() => (
      cells: [
        /// ()
        (
          cellType: 'header',
          offset: 0,
          end: 246,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// ()
        (
          cellType: 'body',
          offset: 246,
          end: 249,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(''' # 参数化范例  ##)
        (
          cellType: 'body',
          offset: 327,
          end: 797,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(MateSampleContent(Contai)
        (
          cellType: 'body',
          offset: 875,
          end: 985,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(''' ### String参)
        (
          cellType: 'body',
          offset: 1063,
          end: 1109,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(MateSampleContent(Text$M)
        (
          cellType: 'body',
          offset: 1187,
          end: 1249,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(''' ### Color参数)
        (
          cellType: 'body',
          offset: 1327,
          end: 1391,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(MateSampleContent(Contai)
        (
          cellType: 'body',
          offset: 1469,
          end: 1796,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(''' ### bool参数 )
        (
          cellType: 'body',
          offset: 1874,
          end: 1918,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(MateSampleContent(Contai)
        (
          cellType: 'body',
          offset: 1996,
          end: 2181,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(r''' ### 枚举参数  )
        (
          cellType: 'body',
          offset: 2259,
          end: 2325,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print(MateSampleContent(Row$Ma)
        (
          cellType: 'body',
          offset: 2403,
          end: 2728,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(r''' ## 其他特性  #)
        (
          cellType: 'body',
          offset: 2806,
          end: 2983,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (showAbout() {showAboutDialog(c, print(MateSampleContent(Elevat)
        (
          cellType: 'body',
          offset: 3061,
          end: 3480,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (print.markdown(r''' ### 用循环一次性)
        (
          cellType: 'body',
          offset: 3558,
          end: 3609,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// (for (var mainAxisAlignment in )
        (
          cellType: 'body',
          offset: 3687,
          end: 4172,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        ),

        /// ()
        (
          cellType: 'tail',
          offset: 4172,
          end: 4174,
          specialNodes: <({
            String nodeType,
            int end,
            int offset,
          })>[],
        )
      ],
    );
