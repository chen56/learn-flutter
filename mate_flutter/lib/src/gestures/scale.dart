// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/gestures/scale.dart' as _i1;
import 'package:mate/mate_core.dart' as _i2;
import 'dart:ui' as _i3;
import 'package:flutter/animation.dart' as _i4;
import 'package:flutter/src/gestures/velocity_tracker.dart' as _i5;
import 'package:flutter/cupertino.dart' as _i6;
import 'package:flutter/src/gestures/recognizer.dart' as _i7;
import 'package:flutter/gestures.dart' as _i8;

/// class ScaleStartDetails
class ScaleStartDetails$Mate extends _i1.ScaleStartDetails with _i2.Mate {
  /// ScaleStartDetails ScaleStartDetails({Offset focalPoint = Offset.zero, Offset? localFocalPoint, int pointerCount = 0})
  ScaleStartDetails$Mate({
    /// optionalParameters: {Offset focalPoint = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.focalPoint,

    /// optionalParameters: {Offset? localFocalPoint} , default:none
    super.localFocalPoint,

    /// optionalParameters: {int pointerCount = 0} , default:processed=IntegerLiteralImpl
    super.pointerCount,
  })  : mateParams = {
          'focalPoint': _i2.BuilderArg<_i3.Offset>(
            name: 'focalPoint',
            init: focalPoint,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'localFocalPoint': _i2.BuilderArg<_i3.Offset?>(
            name: 'localFocalPoint',
            init: localFocalPoint,
            isNamed: true,
          ),
          'pointerCount': _i2.BuilderArg<int>(
            name: 'pointerCount',
            init: pointerCount,
            isNamed: true,
            defaultValue: 0,
          ),
        },
        super() {
    mateBuilderName = 'ScaleStartDetails';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ScaleStartDetails$Mate(
          focalPoint: p.get('focalPoint').build(),
          localFocalPoint: p.get('localFocalPoint').build(),
          pointerCount: p.get('pointerCount').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class ScaleUpdateDetails
class ScaleUpdateDetails$Mate extends _i1.ScaleUpdateDetails with _i2.Mate {
  /// ScaleUpdateDetails ScaleUpdateDetails({Offset focalPoint = Offset.zero, Offset? localFocalPoint, double scale = 1.0, double horizontalScale = 1.0, double verticalScale = 1.0, double rotation = 0.0, int pointerCount = 0, Offset focalPointDelta = Offset.zero})
  ScaleUpdateDetails$Mate({
    /// optionalParameters: {Offset focalPoint = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.focalPoint,

    /// optionalParameters: {Offset? localFocalPoint} , default:none
    super.localFocalPoint,

    /// optionalParameters: {double scale = 1.0} , default:processed=DoubleLiteralImpl
    super.scale,

    /// optionalParameters: {double horizontalScale = 1.0} , default:processed=DoubleLiteralImpl
    super.horizontalScale,

    /// optionalParameters: {double verticalScale = 1.0} , default:processed=DoubleLiteralImpl
    super.verticalScale,

    /// optionalParameters: {double rotation = 0.0} , default:processed=DoubleLiteralImpl
    super.rotation,

    /// optionalParameters: {int pointerCount = 0} , default:processed=IntegerLiteralImpl
    super.pointerCount,

    /// optionalParameters: {Offset focalPointDelta = Offset.zero} , default:processed=PrefixedIdentifierImpl
    super.focalPointDelta,
  })  : mateParams = {
          'focalPoint': _i2.BuilderArg<_i3.Offset>(
            name: 'focalPoint',
            init: focalPoint,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
          'localFocalPoint': _i2.BuilderArg<_i3.Offset?>(
            name: 'localFocalPoint',
            init: localFocalPoint,
            isNamed: true,
          ),
          'scale': _i2.BuilderArg<double>(
            name: 'scale',
            init: scale,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'horizontalScale': _i2.BuilderArg<double>(
            name: 'horizontalScale',
            init: horizontalScale,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'verticalScale': _i2.BuilderArg<double>(
            name: 'verticalScale',
            init: verticalScale,
            isNamed: true,
            defaultValue: 1.0,
          ),
          'rotation': _i2.BuilderArg<double>(
            name: 'rotation',
            init: rotation,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'pointerCount': _i2.BuilderArg<int>(
            name: 'pointerCount',
            init: pointerCount,
            isNamed: true,
            defaultValue: 0,
          ),
          'focalPointDelta': _i2.BuilderArg<_i3.Offset>(
            name: 'focalPointDelta',
            init: focalPointDelta,
            isNamed: true,
            defaultValue: _i4.Offset.zero,
          ),
        },
        super() {
    mateBuilderName = 'ScaleUpdateDetails';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ScaleUpdateDetails$Mate(
          focalPoint: p.get('focalPoint').build(),
          localFocalPoint: p.get('localFocalPoint').build(),
          scale: p.get('scale').build(),
          horizontalScale: p.get('horizontalScale').build(),
          verticalScale: p.get('verticalScale').build(),
          rotation: p.get('rotation').build(),
          pointerCount: p.get('pointerCount').build(),
          focalPointDelta: p.get('focalPointDelta').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class ScaleEndDetails
class ScaleEndDetails$Mate extends _i1.ScaleEndDetails with _i2.Mate {
  /// ScaleEndDetails ScaleEndDetails({Velocity velocity = Velocity.zero, double scaleVelocity = 0, int pointerCount = 0})
  ScaleEndDetails$Mate({
    /// optionalParameters: {Velocity velocity = Velocity.zero} , default:processed=PrefixedIdentifierImpl
    super.velocity,

    /// optionalParameters: {double scaleVelocity = 0} , default:processed=IntegerLiteralImpl
    super.scaleVelocity,

    /// optionalParameters: {int pointerCount = 0} , default:processed=IntegerLiteralImpl
    super.pointerCount,
  })  : mateParams = {
          'velocity': _i2.BuilderArg<_i5.Velocity>(
            name: 'velocity',
            init: velocity,
            isNamed: true,
            defaultValue: _i6.Velocity.zero,
          ),
          'scaleVelocity': _i2.BuilderArg<double>(
            name: 'scaleVelocity',
            init: scaleVelocity,
            isNamed: true,
            defaultValue: 0,
          ),
          'pointerCount': _i2.BuilderArg<int>(
            name: 'pointerCount',
            init: pointerCount,
            isNamed: true,
            defaultValue: 0,
          ),
        },
        super() {
    mateBuilderName = 'ScaleEndDetails';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ScaleEndDetails$Mate(
          velocity: p.get('velocity').build(),
          scaleVelocity: p.get('scaleVelocity').build(),
          pointerCount: p.get('pointerCount').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class ScaleGestureRecognizer extends OneSequenceGestureRecognizer
class ScaleGestureRecognizer$Mate extends _i1.ScaleGestureRecognizer with _i2.Mate {
  /// ScaleGestureRecognizer ScaleGestureRecognizer({Object? debugOwner, Set<PointerDeviceKind>? supportedDevices, bool Function(int)? allowedButtonsFilter, DragStartBehavior dragStartBehavior = DragStartBehavior.down, bool trackpadScrollCausesScale = false, Offset trackpadScrollToScaleFactor = kDefaultTrackpadScrollToScaleFactor})
  ScaleGestureRecognizer$Mate({
    /// optionalParameters: {Object? debugOwner} , default:none
    super.debugOwner,

    /// optionalParameters: {Set<PointerDeviceKind>? supportedDevices} , default:none
    super.supportedDevices,

    /// optionalParameters: {bool Function(int)? allowedButtonsFilter} , default:none
    super.allowedButtonsFilter,

    /// optionalParameters: {DragStartBehavior dragStartBehavior = DragStartBehavior.down} , default:processed=PrefixedIdentifierImpl
    super.dragStartBehavior,

    /// optionalParameters: {bool trackpadScrollCausesScale = false} , default:processed=BooleanLiteralImpl
    super.trackpadScrollCausesScale,

    /// optionalParameters: {Offset trackpadScrollToScaleFactor = kDefaultTrackpadScrollToScaleFactor} , default:unprocessed=SimpleIdentifierImpl
    super.trackpadScrollToScaleFactor,
  })  : mateParams = {
          'debugOwner': _i2.BuilderArg<Object?>(
            name: 'debugOwner',
            init: debugOwner,
            isNamed: true,
          ),
          'supportedDevices': _i2.BuilderArg<Set<_i3.PointerDeviceKind>?>(
            name: 'supportedDevices',
            init: supportedDevices,
            isNamed: true,
          ),
          'allowedButtonsFilter': _i2.BuilderArg<_i7.AllowedButtonsFilter?>(
            name: 'allowedButtonsFilter',
            init: allowedButtonsFilter,
            isNamed: true,
          ),
          'dragStartBehavior': _i2.BuilderArg<_i7.DragStartBehavior>(
            name: 'dragStartBehavior',
            init: dragStartBehavior,
            isNamed: true,
            defaultValue: _i8.DragStartBehavior.down,
          ),
          'trackpadScrollCausesScale': _i2.BuilderArg<bool>(
            name: 'trackpadScrollCausesScale',
            init: trackpadScrollCausesScale,
            isNamed: true,
            defaultValue: false,
          ),
          'trackpadScrollToScaleFactor': _i2.BuilderArg<_i3.Offset>(
            name: 'trackpadScrollToScaleFactor',
            init: trackpadScrollToScaleFactor,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'ScaleGestureRecognizer';
    matePackageUrl = 'package:flutter/gestures.dart';
    mateBuilder = (p) => ScaleGestureRecognizer$Mate(
          debugOwner: p.get('debugOwner').build(),
          supportedDevices: p.get('supportedDevices').build(),
          allowedButtonsFilter: p.get('allowedButtonsFilter').build(),
          dragStartBehavior: p.get('dragStartBehavior').build(),
          trackpadScrollCausesScale: p.get('trackpadScrollCausesScale').build(),
          trackpadScrollToScaleFactor: p.get('trackpadScrollToScaleFactor').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
