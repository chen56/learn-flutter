// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/scroll_controller.dart' as _i1;
import 'package:mate/mate_core.dart' as _i2;

/// class ScrollController extends ChangeNotifier
class ScrollController$Mate extends _i1.ScrollController with _i2.Mate {
  /// ScrollController ScrollController({double initialScrollOffset = 0.0, bool keepScrollOffset = true, String? debugLabel, void Function(ScrollPosition)? onAttach, void Function(ScrollPosition)? onDetach})
  ScrollController$Mate({
    /// optionalParameters: {double initialScrollOffset = 0.0} , default:processed=DoubleLiteralImpl
    super.initialScrollOffset,

    /// optionalParameters: {bool keepScrollOffset = true} , default:processed=BooleanLiteralImpl
    super.keepScrollOffset,

    /// optionalParameters: {String? debugLabel} , default:none
    super.debugLabel,

    /// optionalParameters: {void Function(ScrollPosition)? onAttach} , default:none
    super.onAttach,

    /// optionalParameters: {void Function(ScrollPosition)? onDetach} , default:none
    super.onDetach,
  })  : mateParams = {
          'initialScrollOffset': _i2.BuilderArg<double>(
            name: 'initialScrollOffset',
            init: initialScrollOffset,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'keepScrollOffset': _i2.BuilderArg<bool>(
            name: 'keepScrollOffset',
            init: keepScrollOffset,
            isNamed: true,
            defaultValue: true,
          ),
          'debugLabel': _i2.BuilderArg<String?>(
            name: 'debugLabel',
            init: debugLabel,
            isNamed: true,
          ),
          'onAttach': _i2.BuilderArg<_i1.ScrollControllerCallback?>(
            name: 'onAttach',
            init: onAttach,
            isNamed: true,
          ),
          'onDetach': _i2.BuilderArg<_i1.ScrollControllerCallback?>(
            name: 'onDetach',
            init: onDetach,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'ScrollController';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => ScrollController$Mate(
          initialScrollOffset: p.get('initialScrollOffset').build(),
          keepScrollOffset: p.get('keepScrollOffset').build(),
          debugLabel: p.get('debugLabel').build(),
          onAttach: p.get('onAttach').build(),
          onDetach: p.get('onDetach').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class TrackingScrollController extends ScrollController
class TrackingScrollController$Mate extends _i1.TrackingScrollController with _i2.Mate {
  /// TrackingScrollController TrackingScrollController({double initialScrollOffset = 0.0, bool keepScrollOffset = true, String? debugLabel})
  TrackingScrollController$Mate({
    /// optionalParameters: {double initialScrollOffset = 0.0} , default:processed=DoubleLiteralImpl
    super.initialScrollOffset,

    /// optionalParameters: {bool keepScrollOffset = true} , default:processed=BooleanLiteralImpl
    super.keepScrollOffset,

    /// optionalParameters: {String? debugLabel} , default:none
    super.debugLabel,
  })  : mateParams = {
          'initialScrollOffset': _i2.BuilderArg<double>(
            name: 'initialScrollOffset',
            init: initialScrollOffset,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'keepScrollOffset': _i2.BuilderArg<bool>(
            name: 'keepScrollOffset',
            init: keepScrollOffset,
            isNamed: true,
            defaultValue: true,
          ),
          'debugLabel': _i2.BuilderArg<String?>(
            name: 'debugLabel',
            init: debugLabel,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'TrackingScrollController';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => TrackingScrollController$Mate(
          initialScrollOffset: p.get('initialScrollOffset').build(),
          keepScrollOffset: p.get('keepScrollOffset').build(),
          debugLabel: p.get('debugLabel').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
