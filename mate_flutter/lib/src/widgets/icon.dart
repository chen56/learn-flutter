// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/icon.dart' as _i1;
import 'package:mate/mate_core.dart' as _i2;
import 'package:flutter/src/widgets/icon_data.dart' as _i3;
import 'package:flutter/src/foundation/key.dart' as _i4;
import 'dart:ui' as _i5;

/// class Icon extends StatelessWidget
class Icon$Mate extends _i1.Icon with _i2.Mate {
  /// Icon Icon(IconData? icon, {Key? key, double? size, double? fill, double? weight, double? grade, double? opticalSize, Color? color, List<Shadow>? shadows, String? semanticLabel, TextDirection? textDirection, bool? applyTextScaling})
  Icon$Mate(
    /// requiredParameters: IconData? icon
    super.icon, {
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {double? size} , default:none
    super.size,

    /// optionalParameters: {double? fill} , default:none
    super.fill,

    /// optionalParameters: {double? weight} , default:none
    super.weight,

    /// optionalParameters: {double? grade} , default:none
    super.grade,

    /// optionalParameters: {double? opticalSize} , default:none
    super.opticalSize,

    /// optionalParameters: {Color? color} , default:none
    super.color,

    /// optionalParameters: {List<Shadow>? shadows} , default:none
    super.shadows,

    /// optionalParameters: {String? semanticLabel} , default:none
    super.semanticLabel,

    /// optionalParameters: {TextDirection? textDirection} , default:none
    super.textDirection,

    /// optionalParameters: {bool? applyTextScaling} , default:none
    super.applyTextScaling,
  })  : mateParams = {
          'icon': _i2.BuilderArg<_i3.IconData?>(
            name: 'icon',
            init: icon,
            isNamed: false,
          ),
          'key': _i2.BuilderArg<_i4.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'size': _i2.BuilderArg<double?>(
            name: 'size',
            init: size,
            isNamed: true,
          ),
          'fill': _i2.BuilderArg<double?>(
            name: 'fill',
            init: fill,
            isNamed: true,
          ),
          'weight': _i2.BuilderArg<double?>(
            name: 'weight',
            init: weight,
            isNamed: true,
          ),
          'grade': _i2.BuilderArg<double?>(
            name: 'grade',
            init: grade,
            isNamed: true,
          ),
          'opticalSize': _i2.BuilderArg<double?>(
            name: 'opticalSize',
            init: opticalSize,
            isNamed: true,
          ),
          'color': _i2.BuilderArg<_i5.Color?>(
            name: 'color',
            init: color,
            isNamed: true,
          ),
          'shadows': _i2.BuilderArg<List<_i5.Shadow>?>(
            name: 'shadows',
            init: shadows,
            isNamed: true,
          ),
          'semanticLabel': _i2.BuilderArg<String?>(
            name: 'semanticLabel',
            init: semanticLabel,
            isNamed: true,
          ),
          'textDirection': _i2.BuilderArg<_i5.TextDirection?>(
            name: 'textDirection',
            init: textDirection,
            isNamed: true,
          ),
          'applyTextScaling': _i2.BuilderArg<bool?>(
            name: 'applyTextScaling',
            init: applyTextScaling,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'Icon';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => Icon$Mate(
          p.get('icon').value,
          key: p.get('key').build(),
          size: p.get('size').build(),
          fill: p.get('fill').build(),
          weight: p.get('weight').build(),
          grade: p.get('grade').build(),
          opticalSize: p.get('opticalSize').build(),
          color: p.get('color').build(),
          shadows: p.get('shadows').build(),
          semanticLabel: p.get('semanticLabel').build(),
          textDirection: p.get('textDirection').build(),
          applyTextScaling: p.get('applyTextScaling').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
