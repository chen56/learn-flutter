// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/tap_region.dart' as _i1;
import 'package:mate/mate_core.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/widgets/framework.dart' as _i4;
import 'package:flutter/src/rendering/proxy_box.dart' as _i5;
import 'package:flutter/cupertino.dart' as _i6;

/// class TapRegionSurface extends SingleChildRenderObjectWidget
class TapRegionSurface$Mate extends _i1.TapRegionSurface with _i2.Mate {
  /// TapRegionSurface TapRegionSurface({Key? key, required Widget child})
  TapRegionSurface$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required Widget child} , default:none
    required super.child,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i4.Widget>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'TapRegionSurface';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => TapRegionSurface$Mate(
          key: p.get('key').build(),
          child: p.get('child').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class TapRegion extends SingleChildRenderObjectWidget
class TapRegion$Mate extends _i1.TapRegion with _i2.Mate {
  /// TapRegion TapRegion({Key? key, required Widget? child, bool enabled = true, HitTestBehavior behavior = HitTestBehavior.deferToChild, void Function(PointerDownEvent)? onTapOutside, void Function(PointerDownEvent)? onTapInside, Object? groupId, bool consumeOutsideTaps = false, String? debugLabel})
  TapRegion$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required Widget? child} , default:none
    required super.child,

    /// optionalParameters: {bool enabled = true} , default:processed=BooleanLiteralImpl
    super.enabled,

    /// optionalParameters: {HitTestBehavior behavior = HitTestBehavior.deferToChild} , default:processed=PrefixedIdentifierImpl
    super.behavior,

    /// optionalParameters: {void Function(PointerDownEvent)? onTapOutside} , default:none
    super.onTapOutside,

    /// optionalParameters: {void Function(PointerDownEvent)? onTapInside} , default:none
    super.onTapInside,

    /// optionalParameters: {Object? groupId} , default:none
    super.groupId,

    /// optionalParameters: {bool consumeOutsideTaps = false} , default:processed=BooleanLiteralImpl
    super.consumeOutsideTaps,

    /// optionalParameters: {String? debugLabel} , default:none
    super.debugLabel,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i4.Widget?>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
          'enabled': _i2.BuilderArg<bool>(
            name: 'enabled',
            init: enabled,
            isNamed: true,
            defaultValue: true,
          ),
          'behavior': _i2.BuilderArg<_i5.HitTestBehavior>(
            name: 'behavior',
            init: behavior,
            isNamed: true,
            defaultValue: _i6.HitTestBehavior.deferToChild,
          ),
          'onTapOutside': _i2.BuilderArg<_i1.TapRegionCallback?>(
            name: 'onTapOutside',
            init: onTapOutside,
            isNamed: true,
          ),
          'onTapInside': _i2.BuilderArg<_i1.TapRegionCallback?>(
            name: 'onTapInside',
            init: onTapInside,
            isNamed: true,
          ),
          'groupId': _i2.BuilderArg<Object?>(
            name: 'groupId',
            init: groupId,
            isNamed: true,
          ),
          'consumeOutsideTaps': _i2.BuilderArg<bool>(
            name: 'consumeOutsideTaps',
            init: consumeOutsideTaps,
            isNamed: true,
            defaultValue: false,
          ),
          'debugLabel': _i2.BuilderArg<String?>(
            name: 'debugLabel',
            init: debugLabel,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'TapRegion';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => TapRegion$Mate(
          key: p.get('key').build(),
          child: p.get('child').build(),
          enabled: p.get('enabled').build(),
          behavior: p.get('behavior').build(),
          onTapOutside: p.get('onTapOutside').build(),
          onTapInside: p.get('onTapInside').build(),
          groupId: p.get('groupId').build(),
          consumeOutsideTaps: p.get('consumeOutsideTaps').build(),
          debugLabel: p.get('debugLabel').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class RenderTapRegion extends RenderProxyBoxWithHitTestBehavior
class RenderTapRegion$Mate extends _i1.RenderTapRegion with _i2.Mate {
  /// RenderTapRegion RenderTapRegion({TapRegionRegistry? registry, bool enabled = true, bool consumeOutsideTaps = false, void Function(PointerDownEvent)? onTapOutside, void Function(PointerDownEvent)? onTapInside, HitTestBehavior behavior = HitTestBehavior.deferToChild, Object? groupId, String? debugLabel})
  RenderTapRegion$Mate({
    /// optionalParameters: {TapRegionRegistry? registry} , default:none
    super.registry,

    /// optionalParameters: {bool enabled = true} , default:processed=BooleanLiteralImpl
    super.enabled,

    /// optionalParameters: {bool consumeOutsideTaps = false} , default:processed=BooleanLiteralImpl
    super.consumeOutsideTaps,

    /// optionalParameters: {void Function(PointerDownEvent)? onTapOutside} , default:none
    super.onTapOutside,

    /// optionalParameters: {void Function(PointerDownEvent)? onTapInside} , default:none
    super.onTapInside,

    /// optionalParameters: {HitTestBehavior behavior = HitTestBehavior.deferToChild} , default:processed=PrefixedIdentifierImpl
    super.behavior,

    /// optionalParameters: {Object? groupId} , default:none
    super.groupId,

    /// optionalParameters: {String? debugLabel} , default:none
    super.debugLabel,
  })  : mateParams = {
          'registry': _i2.BuilderArg<_i1.TapRegionRegistry?>(
            name: 'registry',
            init: registry,
            isNamed: true,
          ),
          'enabled': _i2.BuilderArg<bool>(
            name: 'enabled',
            init: enabled,
            isNamed: true,
            defaultValue: true,
          ),
          'consumeOutsideTaps': _i2.BuilderArg<bool>(
            name: 'consumeOutsideTaps',
            init: consumeOutsideTaps,
            isNamed: true,
            defaultValue: false,
          ),
          'onTapOutside': _i2.BuilderArg<_i1.TapRegionCallback?>(
            name: 'onTapOutside',
            init: onTapOutside,
            isNamed: true,
          ),
          'onTapInside': _i2.BuilderArg<_i1.TapRegionCallback?>(
            name: 'onTapInside',
            init: onTapInside,
            isNamed: true,
          ),
          'behavior': _i2.BuilderArg<_i5.HitTestBehavior>(
            name: 'behavior',
            init: behavior,
            isNamed: true,
            defaultValue: _i6.HitTestBehavior.deferToChild,
          ),
          'groupId': _i2.BuilderArg<Object?>(
            name: 'groupId',
            init: groupId,
            isNamed: true,
          ),
          'debugLabel': _i2.BuilderArg<String?>(
            name: 'debugLabel',
            init: debugLabel,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'RenderTapRegion';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => RenderTapRegion$Mate(
          registry: p.get('registry').build(),
          enabled: p.get('enabled').build(),
          consumeOutsideTaps: p.get('consumeOutsideTaps').build(),
          onTapOutside: p.get('onTapOutside').build(),
          onTapInside: p.get('onTapInside').build(),
          behavior: p.get('behavior').build(),
          groupId: p.get('groupId').build(),
          debugLabel: p.get('debugLabel').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class TextFieldTapRegion extends TapRegion
class TextFieldTapRegion$Mate extends _i1.TextFieldTapRegion with _i2.Mate {
  /// TextFieldTapRegion TextFieldTapRegion({Key? key, required Widget? child, bool enabled = true, void Function(PointerDownEvent)? onTapOutside, void Function(PointerDownEvent)? onTapInside, bool consumeOutsideTaps = false, String? debugLabel})
  TextFieldTapRegion$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required Widget? child} , default:none
    required super.child,

    /// optionalParameters: {bool enabled = true} , default:processed=BooleanLiteralImpl
    super.enabled,

    /// optionalParameters: {void Function(PointerDownEvent)? onTapOutside} , default:none
    super.onTapOutside,

    /// optionalParameters: {void Function(PointerDownEvent)? onTapInside} , default:none
    super.onTapInside,

    /// optionalParameters: {bool consumeOutsideTaps = false} , default:processed=BooleanLiteralImpl
    super.consumeOutsideTaps,

    /// optionalParameters: {String? debugLabel} , default:none
    super.debugLabel,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i4.Widget?>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
          'enabled': _i2.BuilderArg<bool>(
            name: 'enabled',
            init: enabled,
            isNamed: true,
            defaultValue: true,
          ),
          'onTapOutside': _i2.BuilderArg<_i1.TapRegionCallback?>(
            name: 'onTapOutside',
            init: onTapOutside,
            isNamed: true,
          ),
          'onTapInside': _i2.BuilderArg<_i1.TapRegionCallback?>(
            name: 'onTapInside',
            init: onTapInside,
            isNamed: true,
          ),
          'consumeOutsideTaps': _i2.BuilderArg<bool>(
            name: 'consumeOutsideTaps',
            init: consumeOutsideTaps,
            isNamed: true,
            defaultValue: false,
          ),
          'debugLabel': _i2.BuilderArg<String?>(
            name: 'debugLabel',
            init: debugLabel,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'TextFieldTapRegion';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => TextFieldTapRegion$Mate(
          key: p.get('key').build(),
          child: p.get('child').build(),
          enabled: p.get('enabled').build(),
          onTapOutside: p.get('onTapOutside').build(),
          onTapInside: p.get('onTapInside').build(),
          consumeOutsideTaps: p.get('consumeOutsideTaps').build(),
          debugLabel: p.get('debugLabel').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
