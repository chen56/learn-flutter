// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/decorated_sliver.dart' as _i1;
import 'package:mate/mate_core.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/painting/decoration.dart' as _i4;
import 'package:flutter/src/rendering/proxy_box.dart' as _i5;
import 'package:flutter/cupertino.dart' as _i6;
import 'package:flutter/src/widgets/framework.dart' as _i7;

/// class DecoratedSliver extends SingleChildRenderObjectWidget
class DecoratedSliver$Mate extends _i1.DecoratedSliver with _i2.Mate {
  /// DecoratedSliver DecoratedSliver({Key? key, required Decoration decoration, DecorationPosition position = DecorationPosition.background, Widget? sliver})
  DecoratedSliver$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required Decoration decoration} , default:none
    required super.decoration,

    /// optionalParameters: {DecorationPosition position = DecorationPosition.background} , default:processed=PrefixedIdentifierImpl
    super.position,

    /// optionalParameters: {Widget? sliver} , default:none
    super.sliver,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'decoration': _i2.BuilderArg<_i4.Decoration>(
            name: 'decoration',
            init: decoration,
            isNamed: true,
          ),
          'position': _i2.BuilderArg<_i5.DecorationPosition>(
            name: 'position',
            init: position,
            isNamed: true,
            defaultValue: _i6.DecorationPosition.background,
          ),
          'sliver': _i2.BuilderArg<_i7.Widget?>(
            name: 'sliver',
            init: sliver,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'DecoratedSliver';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => DecoratedSliver$Mate(
          key: p.get('key').build(),
          decoration: p.get('decoration').build(),
          position: p.get('position').build(),
          sliver: p.get('sliver').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
