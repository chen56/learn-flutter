// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/navigator_pop_handler.dart' as _i1;
import 'package:mate/mate_core.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'dart:ui' as _i4;
import 'package:flutter/src/widgets/framework.dart' as _i5;

/// class NavigatorPopHandler extends StatefulWidget
class NavigatorPopHandler$Mate extends _i1.NavigatorPopHandler with _i2.Mate {
  /// NavigatorPopHandler NavigatorPopHandler({Key? key, void Function()? onPop, bool enabled = true, required Widget child})
  NavigatorPopHandler$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {void Function()? onPop} , default:none
    super.onPop,

    /// optionalParameters: {bool enabled = true} , default:processed=BooleanLiteralImpl
    super.enabled,

    /// optionalParameters: {required Widget child} , default:none
    required super.child,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'onPop': _i2.BuilderArg<_i4.VoidCallback?>(
            name: 'onPop',
            init: onPop,
            isNamed: true,
          ),
          'enabled': _i2.BuilderArg<bool>(
            name: 'enabled',
            init: enabled,
            isNamed: true,
            defaultValue: true,
          ),
          'child': _i2.BuilderArg<_i5.Widget>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'NavigatorPopHandler';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => NavigatorPopHandler$Mate(
          key: p.get('key').build(),
          onPop: p.get('onPop').build(),
          enabled: p.get('enabled').build(),
          child: p.get('child').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
