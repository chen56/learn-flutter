// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/autocomplete.dart' as _i1;
import 'package:mate/mate_core.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/cupertino.dart' as _i4;
import 'package:flutter/src/widgets/focus_manager.dart' as _i5;
import 'package:flutter/src/widgets/editable_text.dart' as _i6;
import 'package:flutter/src/services/text_input.dart' as _i7;
import 'package:flutter/src/foundation/change_notifier.dart' as _i8;
import 'package:flutter/src/widgets/framework.dart' as _i9;

/// class RawAutocomplete<T extends Object> extends StatefulWidget
class RawAutocomplete$Mate<T extends Object> extends _i1.RawAutocomplete<T> with _i2.Mate {
  /// RawAutocomplete<T> RawAutocomplete({Key? key, required Widget Function(BuildContext, void Function(T), Iterable<T>) optionsViewBuilder, required FutureOr<Iterable<T>> Function(TextEditingValue) optionsBuilder, OptionsViewOpenDirection optionsViewOpenDirection = OptionsViewOpenDirection.down, String Function(T) displayStringForOption = defaultStringForOption, Widget Function(BuildContext, TextEditingController, FocusNode, void Function())? fieldViewBuilder, FocusNode? focusNode, void Function(T)? onSelected, TextEditingController? textEditingController, TextEditingValue? initialValue})
  RawAutocomplete$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required Widget Function(BuildContext, void Function(T), Iterable<T>) optionsViewBuilder} , default:none
    required super.optionsViewBuilder,

    /// optionalParameters: {required FutureOr<Iterable<T>> Function(TextEditingValue) optionsBuilder} , default:none
    required super.optionsBuilder,

    /// optionalParameters: {OptionsViewOpenDirection optionsViewOpenDirection = OptionsViewOpenDirection.down} , default:processed=PrefixedIdentifierImpl
    super.optionsViewOpenDirection,

    /// optionalParameters: {String Function(T) displayStringForOption = defaultStringForOption} , default:unprocessed=SimpleIdentifierImpl
    super.displayStringForOption,

    /// optionalParameters: {Widget Function(BuildContext, TextEditingController, FocusNode, void Function())? fieldViewBuilder} , default:none
    super.fieldViewBuilder,

    /// optionalParameters: {FocusNode? focusNode} , default:none
    super.focusNode,

    /// optionalParameters: {void Function(T)? onSelected} , default:none
    super.onSelected,

    /// optionalParameters: {TextEditingController? textEditingController} , default:none
    super.textEditingController,

    /// optionalParameters: {TextEditingValue? initialValue} , default:none
    super.initialValue,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'optionsViewBuilder': _i2.BuilderArg<_i1.AutocompleteOptionsViewBuilder<T>>(
            name: 'optionsViewBuilder',
            init: optionsViewBuilder,
            isNamed: true,
          ),
          'optionsBuilder': _i2.BuilderArg<_i1.AutocompleteOptionsBuilder<T>>(
            name: 'optionsBuilder',
            init: optionsBuilder,
            isNamed: true,
          ),
          'optionsViewOpenDirection': _i2.BuilderArg<_i1.OptionsViewOpenDirection>(
            name: 'optionsViewOpenDirection',
            init: optionsViewOpenDirection,
            isNamed: true,
            defaultValue: _i4.OptionsViewOpenDirection.down,
          ),
          'displayStringForOption': _i2.BuilderArg<_i1.AutocompleteOptionToString<T>>(
            name: 'displayStringForOption',
            init: displayStringForOption,
            isNamed: true,
          ),
          'fieldViewBuilder': _i2.BuilderArg<_i1.AutocompleteFieldViewBuilder?>(
            name: 'fieldViewBuilder',
            init: fieldViewBuilder,
            isNamed: true,
          ),
          'focusNode': _i2.BuilderArg<_i5.FocusNode?>(
            name: 'focusNode',
            init: focusNode,
            isNamed: true,
          ),
          'onSelected': _i2.BuilderArg<_i1.AutocompleteOnSelected<T>?>(
            name: 'onSelected',
            init: onSelected,
            isNamed: true,
          ),
          'textEditingController': _i2.BuilderArg<_i6.TextEditingController?>(
            name: 'textEditingController',
            init: textEditingController,
            isNamed: true,
          ),
          'initialValue': _i2.BuilderArg<_i7.TextEditingValue?>(
            name: 'initialValue',
            init: initialValue,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'RawAutocomplete';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => RawAutocomplete$Mate<T>(
          key: p.get('key').build(),
          optionsViewBuilder: p.get('optionsViewBuilder').build(),
          optionsBuilder: p.get('optionsBuilder').build(),
          optionsViewOpenDirection: p.get('optionsViewOpenDirection').build(),
          displayStringForOption: p.get('displayStringForOption').build(),
          fieldViewBuilder: p.get('fieldViewBuilder').build(),
          focusNode: p.get('focusNode').build(),
          onSelected: p.get('onSelected').build(),
          textEditingController: p.get('textEditingController').build(),
          initialValue: p.get('initialValue').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class AutocompleteHighlightedOption extends InheritedNotifier<ValueNotifier<int>>
class AutocompleteHighlightedOption$Mate extends _i1.AutocompleteHighlightedOption with _i2.Mate {
  /// AutocompleteHighlightedOption AutocompleteHighlightedOption({Key? key, required ValueNotifier<int> highlightIndexNotifier, required Widget child})
  AutocompleteHighlightedOption$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required ValueNotifier<int> highlightIndexNotifier} , default:none
    required super.highlightIndexNotifier,

    /// optionalParameters: {required Widget child} , default:none
    required super.child,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'highlightIndexNotifier': _i2.BuilderArg<_i8.ValueNotifier<int>>(
            name: 'highlightIndexNotifier',
            init: highlightIndexNotifier,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i9.Widget>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'AutocompleteHighlightedOption';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => AutocompleteHighlightedOption$Mate(
          key: p.get('key').build(),
          highlightIndexNotifier: p.get('highlightIndexNotifier').build(),
          child: p.get('child').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
