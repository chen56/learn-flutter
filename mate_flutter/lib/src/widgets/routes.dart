// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/routes.dart' as _i1;
import 'package:mate/mate_core.dart' as _i2;
import 'dart:ui' as _i3;
import 'package:flutter/src/widgets/navigator.dart' as _i4;
import 'package:flutter/src/widgets/focus_traversal.dart' as _i5;

/// class LocalHistoryEntry
class LocalHistoryEntry$Mate extends _i1.LocalHistoryEntry with _i2.Mate {
  /// LocalHistoryEntry LocalHistoryEntry({void Function()? onRemove, bool impliesAppBarDismissal = true})
  LocalHistoryEntry$Mate({
    /// optionalParameters: {void Function()? onRemove} , default:none
    super.onRemove,

    /// optionalParameters: {bool impliesAppBarDismissal = true} , default:processed=BooleanLiteralImpl
    super.impliesAppBarDismissal,
  })  : mateParams = {
          'onRemove': _i2.BuilderArg<_i3.VoidCallback?>(
            name: 'onRemove',
            init: onRemove,
            isNamed: true,
          ),
          'impliesAppBarDismissal': _i2.BuilderArg<bool>(
            name: 'impliesAppBarDismissal',
            init: impliesAppBarDismissal,
            isNamed: true,
            defaultValue: true,
          ),
        },
        super() {
    mateBuilderName = 'LocalHistoryEntry';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => LocalHistoryEntry$Mate(
          onRemove: p.get('onRemove').build(),
          impliesAppBarDismissal: p.get('impliesAppBarDismissal').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class RawDialogRoute<T> extends PopupRoute<T>
class RawDialogRoute$Mate<T> extends _i1.RawDialogRoute<T> with _i2.Mate {
  /// RawDialogRoute<T> RawDialogRoute({required Widget Function(BuildContext, Animation<double>, Animation<double>) pageBuilder, bool barrierDismissible = true, Color? barrierColor = const Color(0x80000000), String? barrierLabel, Duration transitionDuration = const Duration(milliseconds: 200), Widget Function(BuildContext, Animation<double>, Animation<double>, Widget)? transitionBuilder, RouteSettings? settings, Offset? anchorPoint, TraversalEdgeBehavior? traversalEdgeBehavior})
  RawDialogRoute$Mate({
    /// optionalParameters: {required Widget Function(BuildContext, Animation<double>, Animation<double>) pageBuilder} , default:none
    required super.pageBuilder,

    /// optionalParameters: {bool barrierDismissible = true} , default:processed=BooleanLiteralImpl
    super.barrierDismissible,

    /// optionalParameters: {Color? barrierColor = const Color(0x80000000)} , default:unprocessed=InstanceCreationExpressionImpl
    super.barrierColor,

    /// optionalParameters: {String? barrierLabel} , default:none
    super.barrierLabel,

    /// optionalParameters: {Duration transitionDuration = const Duration(milliseconds: 200)} , default:unprocessed=InstanceCreationExpressionImpl
    super.transitionDuration,

    /// optionalParameters: {Widget Function(BuildContext, Animation<double>, Animation<double>, Widget)? transitionBuilder} , default:none
    super.transitionBuilder,

    /// optionalParameters: {RouteSettings? settings} , default:none
    super.settings,

    /// optionalParameters: {Offset? anchorPoint} , default:none
    super.anchorPoint,

    /// optionalParameters: {TraversalEdgeBehavior? traversalEdgeBehavior} , default:none
    super.traversalEdgeBehavior,
  })  : mateParams = {
          'pageBuilder': _i2.BuilderArg<_i1.RoutePageBuilder>(
            name: 'pageBuilder',
            init: pageBuilder,
            isNamed: true,
          ),
          'barrierDismissible': _i2.BuilderArg<bool>(
            name: 'barrierDismissible',
            init: barrierDismissible,
            isNamed: true,
            defaultValue: true,
          ),
          'barrierColor': _i2.BuilderArg<_i3.Color?>(
            name: 'barrierColor',
            init: barrierColor,
            isNamed: true,
          ),
          'barrierLabel': _i2.BuilderArg<String?>(
            name: 'barrierLabel',
            init: barrierLabel,
            isNamed: true,
          ),
          'transitionDuration': _i2.BuilderArg<Duration>(
            name: 'transitionDuration',
            init: transitionDuration,
            isNamed: true,
          ),
          'transitionBuilder': _i2.BuilderArg<_i1.RouteTransitionsBuilder?>(
            name: 'transitionBuilder',
            init: transitionBuilder,
            isNamed: true,
          ),
          'settings': _i2.BuilderArg<_i4.RouteSettings?>(
            name: 'settings',
            init: settings,
            isNamed: true,
          ),
          'anchorPoint': _i2.BuilderArg<_i3.Offset?>(
            name: 'anchorPoint',
            init: anchorPoint,
            isNamed: true,
          ),
          'traversalEdgeBehavior': _i2.BuilderArg<_i5.TraversalEdgeBehavior?>(
            name: 'traversalEdgeBehavior',
            init: traversalEdgeBehavior,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'RawDialogRoute';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => RawDialogRoute$Mate<T>(
          pageBuilder: p.get('pageBuilder').build(),
          barrierDismissible: p.get('barrierDismissible').build(),
          barrierColor: p.get('barrierColor').build(),
          barrierLabel: p.get('barrierLabel').build(),
          transitionDuration: p.get('transitionDuration').build(),
          transitionBuilder: p.get('transitionBuilder').build(),
          settings: p.get('settings').build(),
          anchorPoint: p.get('anchorPoint').build(),
          traversalEdgeBehavior: p.get('traversalEdgeBehavior').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
