// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/app_lifecycle_listener.dart' as _i1;
import 'package:mate/mate_core.dart' as _i2;
import 'package:flutter/src/widgets/binding.dart' as _i3;
import 'dart:ui' as _i4;
import 'package:flutter/src/foundation/basic_types.dart' as _i5;

/// class AppLifecycleListener with WidgetsBindingObserver, Diagnosticable
class AppLifecycleListener$Mate extends _i1.AppLifecycleListener with _i2.Mate {
  /// AppLifecycleListener AppLifecycleListener({WidgetsBinding? binding, void Function()? onResume, void Function()? onInactive, void Function()? onHide, void Function()? onShow, void Function()? onPause, void Function()? onRestart, void Function()? onDetach, Future<AppExitResponse> Function()? onExitRequested, void Function(AppLifecycleState)? onStateChange})
  AppLifecycleListener$Mate({
    /// optionalParameters: {WidgetsBinding? binding} , default:none
    super.binding,

    /// optionalParameters: {void Function()? onResume} , default:none
    super.onResume,

    /// optionalParameters: {void Function()? onInactive} , default:none
    super.onInactive,

    /// optionalParameters: {void Function()? onHide} , default:none
    super.onHide,

    /// optionalParameters: {void Function()? onShow} , default:none
    super.onShow,

    /// optionalParameters: {void Function()? onPause} , default:none
    super.onPause,

    /// optionalParameters: {void Function()? onRestart} , default:none
    super.onRestart,

    /// optionalParameters: {void Function()? onDetach} , default:none
    super.onDetach,

    /// optionalParameters: {Future<AppExitResponse> Function()? onExitRequested} , default:none
    super.onExitRequested,

    /// optionalParameters: {void Function(AppLifecycleState)? onStateChange} , default:none
    super.onStateChange,
  })  : mateParams = {
          'binding': _i2.BuilderArg<_i3.WidgetsBinding?>(
            name: 'binding',
            init: binding,
            isNamed: true,
          ),
          'onResume': _i2.BuilderArg<_i4.VoidCallback?>(
            name: 'onResume',
            init: onResume,
            isNamed: true,
          ),
          'onInactive': _i2.BuilderArg<_i4.VoidCallback?>(
            name: 'onInactive',
            init: onInactive,
            isNamed: true,
          ),
          'onHide': _i2.BuilderArg<_i4.VoidCallback?>(
            name: 'onHide',
            init: onHide,
            isNamed: true,
          ),
          'onShow': _i2.BuilderArg<_i4.VoidCallback?>(
            name: 'onShow',
            init: onShow,
            isNamed: true,
          ),
          'onPause': _i2.BuilderArg<_i4.VoidCallback?>(
            name: 'onPause',
            init: onPause,
            isNamed: true,
          ),
          'onRestart': _i2.BuilderArg<_i4.VoidCallback?>(
            name: 'onRestart',
            init: onRestart,
            isNamed: true,
          ),
          'onDetach': _i2.BuilderArg<_i4.VoidCallback?>(
            name: 'onDetach',
            init: onDetach,
            isNamed: true,
          ),
          'onExitRequested': _i2.BuilderArg<_i1.AppExitRequestCallback?>(
            name: 'onExitRequested',
            init: onExitRequested,
            isNamed: true,
          ),
          'onStateChange': _i2.BuilderArg<_i5.ValueChanged<_i4.AppLifecycleState>?>(
            name: 'onStateChange',
            init: onStateChange,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'AppLifecycleListener';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => AppLifecycleListener$Mate(
          binding: p.get('binding').build(),
          onResume: p.get('onResume').build(),
          onInactive: p.get('onInactive').build(),
          onHide: p.get('onHide').build(),
          onShow: p.get('onShow').build(),
          onPause: p.get('onPause').build(),
          onRestart: p.get('onRestart').build(),
          onDetach: p.get('onDetach').build(),
          onExitRequested: p.get('onExitRequested').build(),
          onStateChange: p.get('onStateChange').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
