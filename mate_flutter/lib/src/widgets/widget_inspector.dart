// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/widget_inspector.dart' as _i1;
import 'package:mate/mate_core.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/widgets/framework.dart' as _i4;
import 'package:flutter/src/foundation/diagnostics.dart' as _i5;

/// class InspectorReferenceData
class InspectorReferenceData$Mate extends _i1.InspectorReferenceData with _i2.Mate {
  /// InspectorReferenceData InspectorReferenceData(Object object, String id)
  InspectorReferenceData$Mate(
    /// requiredParameters: Object object
    super.object,

    /// requiredParameters: String id
    super.id,
  )   : mateParams = {
          'object': _i2.BuilderArg<Object>(
            name: 'object',
            init: object,
            isNamed: false,
          ),
          'id': _i2.BuilderArg<String>(
            name: 'id',
            init: id,
            isNamed: false,
          ),
        },
        super() {
    mateBuilderName = 'InspectorReferenceData';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => InspectorReferenceData$Mate(
          p.get('object').value,
          p.get('id').value,
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class WidgetInspector extends StatefulWidget
class WidgetInspector$Mate extends _i1.WidgetInspector with _i2.Mate {
  /// WidgetInspector WidgetInspector({Key? key, required Widget child, required Widget Function(BuildContext, void Function())? selectButtonBuilder})
  WidgetInspector$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required Widget child} , default:none
    required super.child,

    /// optionalParameters: {required Widget Function(BuildContext, void Function())? selectButtonBuilder} , default:none
    required super.selectButtonBuilder,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i4.Widget>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
          'selectButtonBuilder': _i2.BuilderArg<_i1.InspectorSelectButtonBuilder?>(
            name: 'selectButtonBuilder',
            init: selectButtonBuilder,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'WidgetInspector';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => WidgetInspector$Mate(
          key: p.get('key').build(),
          child: p.get('child').build(),
          selectButtonBuilder: p.get('selectButtonBuilder').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class DevToolsDeepLinkProperty extends DiagnosticsProperty<String>
class DevToolsDeepLinkProperty$Mate extends _i1.DevToolsDeepLinkProperty with _i2.Mate {
  /// DevToolsDeepLinkProperty DevToolsDeepLinkProperty(String description, String url)
  DevToolsDeepLinkProperty$Mate(
    /// requiredParameters: String description
    super.description,

    /// requiredParameters: String url
    super.url,
  )   : mateParams = {
          'description': _i2.BuilderArg<String>(
            name: 'description',
            init: description,
            isNamed: false,
          ),
          'url': _i2.BuilderArg<String>(
            name: 'url',
            init: url,
            isNamed: false,
          ),
        },
        super() {
    mateBuilderName = 'DevToolsDeepLinkProperty';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => DevToolsDeepLinkProperty$Mate(
          p.get('description').value,
          p.get('url').value,
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class InspectorSerializationDelegate implements DiagnosticsSerializationDelegate
class InspectorSerializationDelegate$Mate extends _i1.InspectorSerializationDelegate with _i2.Mate {
  /// InspectorSerializationDelegate InspectorSerializationDelegate({String? groupName, bool summaryTree = false, int maxDescendantsTruncatableNode = -1, bool expandPropertyValues = true, int subtreeDepth = 1, bool includeProperties = false, required WidgetInspectorService service, Map<String, Object>? Function(DiagnosticsNode, InspectorSerializationDelegate)? addAdditionalPropertiesCallback})
  InspectorSerializationDelegate$Mate({
    /// optionalParameters: {String? groupName} , default:none
    super.groupName,

    /// optionalParameters: {bool summaryTree = false} , default:processed=BooleanLiteralImpl
    super.summaryTree,

    /// optionalParameters: {int maxDescendantsTruncatableNode = -1} , default:processed=PrefixExpressionImpl
    super.maxDescendantsTruncatableNode,

    /// optionalParameters: {bool expandPropertyValues = true} , default:processed=BooleanLiteralImpl
    super.expandPropertyValues,

    /// optionalParameters: {int subtreeDepth = 1} , default:processed=IntegerLiteralImpl
    super.subtreeDepth,

    /// optionalParameters: {bool includeProperties = false} , default:processed=BooleanLiteralImpl
    super.includeProperties,

    /// optionalParameters: {required WidgetInspectorService service} , default:none
    required super.service,

    /// optionalParameters: {Map<String, Object>? Function(DiagnosticsNode, InspectorSerializationDelegate)? addAdditionalPropertiesCallback} , default:none
    super.addAdditionalPropertiesCallback,
  })  : mateParams = {
          'groupName': _i2.BuilderArg<String?>(
            name: 'groupName',
            init: groupName,
            isNamed: true,
          ),
          'summaryTree': _i2.BuilderArg<bool>(
            name: 'summaryTree',
            init: summaryTree,
            isNamed: true,
            defaultValue: false,
          ),
          'maxDescendantsTruncatableNode': _i2.BuilderArg<int>(
            name: 'maxDescendantsTruncatableNode',
            init: maxDescendantsTruncatableNode,
            isNamed: true,
            defaultValue: -1,
          ),
          'expandPropertyValues': _i2.BuilderArg<bool>(
            name: 'expandPropertyValues',
            init: expandPropertyValues,
            isNamed: true,
            defaultValue: true,
          ),
          'subtreeDepth': _i2.BuilderArg<int>(
            name: 'subtreeDepth',
            init: subtreeDepth,
            isNamed: true,
            defaultValue: 1,
          ),
          'includeProperties': _i2.BuilderArg<bool>(
            name: 'includeProperties',
            init: includeProperties,
            isNamed: true,
            defaultValue: false,
          ),
          'service': _i2.BuilderArg<_i1.WidgetInspectorService>(
            name: 'service',
            init: service,
            isNamed: true,
          ),
          'addAdditionalPropertiesCallback': _i2.BuilderArg<
              Map<String, Object>? Function(
                _i5.DiagnosticsNode,
                _i1.InspectorSerializationDelegate,
              )?>(
            name: 'addAdditionalPropertiesCallback',
            init: addAdditionalPropertiesCallback,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'InspectorSerializationDelegate';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => InspectorSerializationDelegate$Mate(
          groupName: p.get('groupName').build(),
          summaryTree: p.get('summaryTree').build(),
          maxDescendantsTruncatableNode: p.get('maxDescendantsTruncatableNode').build(),
          expandPropertyValues: p.get('expandPropertyValues').build(),
          subtreeDepth: p.get('subtreeDepth').build(),
          includeProperties: p.get('includeProperties').build(),
          service: p.get('service').build(),
          addAdditionalPropertiesCallback: p.get('addAdditionalPropertiesCallback').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
