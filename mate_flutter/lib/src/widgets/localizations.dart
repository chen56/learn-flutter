// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/widgets/localizations.dart' as _i1;
import 'package:mate/mate_core.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'dart:ui' as _i4;
import 'package:flutter/src/widgets/framework.dart' as _i5;

/// class Localizations extends StatefulWidget
class Localizations$Mate extends _i1.Localizations with _i2.Mate {
  /// Localizations Localizations({Key? key, required Locale locale, required List<LocalizationsDelegate<dynamic>> delegates, Widget? child})
  Localizations$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required Locale locale} , default:none
    required super.locale,

    /// optionalParameters: {required List<LocalizationsDelegate<dynamic>> delegates} , default:none
    required super.delegates,

    /// optionalParameters: {Widget? child} , default:none
    super.child,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'locale': _i2.BuilderArg<_i4.Locale>(
            name: 'locale',
            init: locale,
            isNamed: true,
          ),
          'delegates': _i2.BuilderArg<List<_i1.LocalizationsDelegate<dynamic>>>(
            name: 'delegates',
            init: delegates,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i5.Widget?>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'Localizations';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => Localizations$Mate(
          key: p.get('key').build(),
          locale: p.get('locale').build(),
          delegates: p.get('delegates').build(),
          child: p.get('child').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
