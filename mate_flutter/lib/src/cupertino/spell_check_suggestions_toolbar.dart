// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/cupertino/spell_check_suggestions_toolbar.dart' as _i1;
import 'package:mate/mate_core.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/widgets/text_selection_toolbar_anchors.dart' as _i4;
import 'package:flutter/src/widgets/context_menu_button_item.dart' as _i5;
import 'package:flutter/src/widgets/editable_text.dart' as _i6;

/// class CupertinoSpellCheckSuggestionsToolbar extends StatelessWidget
class CupertinoSpellCheckSuggestionsToolbar$Mate extends _i1.CupertinoSpellCheckSuggestionsToolbar with _i2.Mate {
  /// CupertinoSpellCheckSuggestionsToolbar CupertinoSpellCheckSuggestionsToolbar({Key? key, required TextSelectionToolbarAnchors anchors, required List<ContextMenuButtonItem> buttonItems})
  CupertinoSpellCheckSuggestionsToolbar$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required TextSelectionToolbarAnchors anchors} , default:none
    required super.anchors,

    /// optionalParameters: {required List<ContextMenuButtonItem> buttonItems} , default:none
    required super.buttonItems,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'anchors': _i2.BuilderArg<_i4.TextSelectionToolbarAnchors>(
            name: 'anchors',
            init: anchors,
            isNamed: true,
          ),
          'buttonItems': _i2.BuilderArg<List<_i5.ContextMenuButtonItem>>(
            name: 'buttonItems',
            init: buttonItems,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'CupertinoSpellCheckSuggestionsToolbar';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoSpellCheckSuggestionsToolbar$Mate(
          key: p.get('key').build(),
          anchors: p.get('anchors').build(),
          buttonItems: p.get('buttonItems').build(),
        );
  }

  /// CupertinoSpellCheckSuggestionsToolbar CupertinoSpellCheckSuggestionsToolbar.editableText({Key? key, required EditableTextState editableTextState})
  CupertinoSpellCheckSuggestionsToolbar$Mate.editableText({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {required EditableTextState editableTextState} , default:none
    required super.editableTextState,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'editableTextState': _i2.BuilderArg<_i6.EditableTextState>(
            name: 'editableTextState',
            init: editableTextState,
            isNamed: true,
          ),
        },
        super.editableText() {
    mateBuilderName = 'CupertinoSpellCheckSuggestionsToolbar.editableText';
    matePackageUrl = 'package:flutter/cupertino.dart';
    mateBuilder = (p) => CupertinoSpellCheckSuggestionsToolbar$Mate.editableText(
          key: p.get('key').build(),
          editableTextState: p.get('editableTextState').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
