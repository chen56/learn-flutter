// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/theme_data.dart' as _i1;
import 'package:mate/mate_core.dart' as _i2;
import 'package:flutter/src/cupertino/theme.dart' as _i3;
import 'package:flutter/src/material/input_decorator.dart' as _i4;
import 'package:flutter/src/material/page_transitions_theme.dart' as _i5;
import 'package:flutter/src/foundation/platform.dart' as _i6;
import 'package:flutter/src/material/scrollbar_theme.dart' as _i7;
import 'package:flutter/src/material/ink_well.dart' as _i8;
import 'dart:ui' as _i9;
import 'package:flutter/src/material/color_scheme.dart' as _i10;
import 'package:flutter/src/widgets/icon_theme_data.dart' as _i11;
import 'package:flutter/src/material/text_theme.dart' as _i12;
import 'package:flutter/src/material/typography.dart' as _i13;
import 'package:flutter/src/material/action_icons_theme.dart' as _i14;
import 'package:flutter/src/material/app_bar_theme.dart' as _i15;
import 'package:flutter/src/material/badge_theme.dart' as _i16;
import 'package:flutter/src/material/banner_theme.dart' as _i17;
import 'package:flutter/src/material/bottom_app_bar_theme.dart' as _i18;
import 'package:flutter/src/material/bottom_navigation_bar_theme.dart' as _i19;
import 'package:flutter/src/material/bottom_sheet_theme.dart' as _i20;
import 'package:flutter/src/material/button_bar_theme.dart' as _i21;
import 'package:flutter/src/material/button_theme.dart' as _i22;
import 'package:flutter/src/material/card_theme.dart' as _i23;
import 'package:flutter/src/material/checkbox_theme.dart' as _i24;
import 'package:flutter/src/material/chip_theme.dart' as _i25;
import 'package:flutter/src/material/data_table_theme.dart' as _i26;
import 'package:flutter/src/material/date_picker_theme.dart' as _i27;
import 'package:flutter/src/material/dialog_theme.dart' as _i28;
import 'package:flutter/src/material/divider_theme.dart' as _i29;
import 'package:flutter/src/material/drawer_theme.dart' as _i30;
import 'package:flutter/src/material/dropdown_menu_theme.dart' as _i31;
import 'package:flutter/src/material/elevated_button_theme.dart' as _i32;
import 'package:flutter/src/material/expansion_tile_theme.dart' as _i33;
import 'package:flutter/src/material/filled_button_theme.dart' as _i34;
import 'package:flutter/src/material/floating_action_button_theme.dart' as _i35;
import 'package:flutter/src/material/icon_button_theme.dart' as _i36;
import 'package:flutter/src/material/list_tile_theme.dart' as _i37;
import 'package:flutter/src/material/menu_bar_theme.dart' as _i38;
import 'package:flutter/src/material/menu_button_theme.dart' as _i39;
import 'package:flutter/src/material/menu_theme.dart' as _i40;
import 'package:flutter/src/material/navigation_bar_theme.dart' as _i41;
import 'package:flutter/src/material/navigation_drawer_theme.dart' as _i42;
import 'package:flutter/src/material/navigation_rail_theme.dart' as _i43;
import 'package:flutter/src/material/outlined_button_theme.dart' as _i44;
import 'package:flutter/src/material/popup_menu_theme.dart' as _i45;
import 'package:flutter/src/material/progress_indicator_theme.dart' as _i46;
import 'package:flutter/src/material/radio_theme.dart' as _i47;
import 'package:flutter/src/material/search_bar_theme.dart' as _i48;
import 'package:flutter/src/material/search_view_theme.dart' as _i49;
import 'package:flutter/src/material/segmented_button_theme.dart' as _i50;
import 'package:flutter/src/material/slider_theme.dart' as _i51;
import 'package:flutter/src/material/snack_bar_theme.dart' as _i52;
import 'package:flutter/src/material/switch_theme.dart' as _i53;
import 'package:flutter/src/material/tab_bar_theme.dart' as _i54;
import 'package:flutter/src/material/text_button_theme.dart' as _i55;
import 'package:flutter/src/material/text_selection_theme.dart' as _i56;
import 'package:flutter/src/material/time_picker_theme.dart' as _i57;
import 'package:flutter/src/material/toggle_buttons_theme.dart' as _i58;
import 'package:flutter/src/material/tooltip_theme.dart' as _i59;

/// class ThemeData with Diagnosticable
class ThemeData$Mate extends _i1.ThemeData with _i2.Mate {
  /// ThemeData ThemeData.raw({required bool applyElevationOverlayColor, required NoDefaultCupertinoThemeData? cupertinoOverrideTheme, required Map<Object, ThemeExtension<dynamic>> extensions, required InputDecorationTheme inputDecorationTheme, required MaterialTapTargetSize materialTapTargetSize, required PageTransitionsTheme pageTransitionsTheme, required TargetPlatform platform, required ScrollbarThemeData scrollbarTheme, required InteractiveInkFeatureFactory splashFactory, required bool useMaterial3, required VisualDensity visualDensity, required Color canvasColor, required Color cardColor, required ColorScheme colorScheme, required Color dialogBackgroundColor, required Color disabledColor, required Color dividerColor, required Color focusColor, required Color highlightColor, required Color hintColor, required Color hoverColor, required Color indicatorColor, required Color primaryColor, required Color primaryColorDark, required Color primaryColorLight, required Color scaffoldBackgroundColor, required Color secondaryHeaderColor, required Color shadowColor, required Color splashColor, required Color unselectedWidgetColor, required IconThemeData iconTheme, required IconThemeData primaryIconTheme, required TextTheme primaryTextTheme, required TextTheme textTheme, required Typography typography, required ActionIconThemeData? actionIconTheme, required AppBarTheme appBarTheme, required BadgeThemeData badgeTheme, required MaterialBannerThemeData bannerTheme, required BottomAppBarTheme bottomAppBarTheme, required BottomNavigationBarThemeData bottomNavigationBarTheme, required BottomSheetThemeData bottomSheetTheme, required ButtonBarThemeData buttonBarTheme, required ButtonThemeData buttonTheme, required CardTheme cardTheme, required CheckboxThemeData checkboxTheme, required ChipThemeData chipTheme, required DataTableThemeData dataTableTheme, required DatePickerThemeData datePickerTheme, required DialogTheme dialogTheme, required DividerThemeData dividerTheme, required DrawerThemeData drawerTheme, required DropdownMenuThemeData dropdownMenuTheme, required ElevatedButtonThemeData elevatedButtonTheme, required ExpansionTileThemeData expansionTileTheme, required FilledButtonThemeData filledButtonTheme, required FloatingActionButtonThemeData floatingActionButtonTheme, required IconButtonThemeData iconButtonTheme, required ListTileThemeData listTileTheme, required MenuBarThemeData menuBarTheme, required MenuButtonThemeData menuButtonTheme, required MenuThemeData menuTheme, required NavigationBarThemeData navigationBarTheme, required NavigationDrawerThemeData navigationDrawerTheme, required NavigationRailThemeData navigationRailTheme, required OutlinedButtonThemeData outlinedButtonTheme, required PopupMenuThemeData popupMenuTheme, required ProgressIndicatorThemeData progressIndicatorTheme, required RadioThemeData radioTheme, required SearchBarThemeData searchBarTheme, required SearchViewThemeData searchViewTheme, required SegmentedButtonThemeData segmentedButtonTheme, required SliderThemeData sliderTheme, required SnackBarThemeData snackBarTheme, required SwitchThemeData switchTheme, required TabBarTheme tabBarTheme, required TextButtonThemeData textButtonTheme, required TextSelectionThemeData textSelectionTheme, required TimePickerThemeData timePickerTheme, required ToggleButtonsThemeData toggleButtonsTheme, required TooltipThemeData tooltipTheme, Color? toggleableActiveColor, Color? selectedRowColor, Color? errorColor, Color? backgroundColor, Color? bottomAppBarColor})
  ThemeData$Mate.raw({
    /// optionalParameters: {required bool applyElevationOverlayColor} , default:none
    required super.applyElevationOverlayColor,

    /// optionalParameters: {required NoDefaultCupertinoThemeData? cupertinoOverrideTheme} , default:none
    required super.cupertinoOverrideTheme,

    /// optionalParameters: {required Map<Object, ThemeExtension<dynamic>> extensions} , default:none
    required super.extensions,

    /// optionalParameters: {required InputDecorationTheme inputDecorationTheme} , default:none
    required super.inputDecorationTheme,

    /// optionalParameters: {required MaterialTapTargetSize materialTapTargetSize} , default:none
    required super.materialTapTargetSize,

    /// optionalParameters: {required PageTransitionsTheme pageTransitionsTheme} , default:none
    required super.pageTransitionsTheme,

    /// optionalParameters: {required TargetPlatform platform} , default:none
    required super.platform,

    /// optionalParameters: {required ScrollbarThemeData scrollbarTheme} , default:none
    required super.scrollbarTheme,

    /// optionalParameters: {required InteractiveInkFeatureFactory splashFactory} , default:none
    required super.splashFactory,

    /// optionalParameters: {required bool useMaterial3} , default:none
    required super.useMaterial3,

    /// optionalParameters: {required VisualDensity visualDensity} , default:none
    required super.visualDensity,

    /// optionalParameters: {required Color canvasColor} , default:none
    required super.canvasColor,

    /// optionalParameters: {required Color cardColor} , default:none
    required super.cardColor,

    /// optionalParameters: {required ColorScheme colorScheme} , default:none
    required super.colorScheme,

    /// optionalParameters: {required Color dialogBackgroundColor} , default:none
    required super.dialogBackgroundColor,

    /// optionalParameters: {required Color disabledColor} , default:none
    required super.disabledColor,

    /// optionalParameters: {required Color dividerColor} , default:none
    required super.dividerColor,

    /// optionalParameters: {required Color focusColor} , default:none
    required super.focusColor,

    /// optionalParameters: {required Color highlightColor} , default:none
    required super.highlightColor,

    /// optionalParameters: {required Color hintColor} , default:none
    required super.hintColor,

    /// optionalParameters: {required Color hoverColor} , default:none
    required super.hoverColor,

    /// optionalParameters: {required Color indicatorColor} , default:none
    required super.indicatorColor,

    /// optionalParameters: {required Color primaryColor} , default:none
    required super.primaryColor,

    /// optionalParameters: {required Color primaryColorDark} , default:none
    required super.primaryColorDark,

    /// optionalParameters: {required Color primaryColorLight} , default:none
    required super.primaryColorLight,

    /// optionalParameters: {required Color scaffoldBackgroundColor} , default:none
    required super.scaffoldBackgroundColor,

    /// optionalParameters: {required Color secondaryHeaderColor} , default:none
    required super.secondaryHeaderColor,

    /// optionalParameters: {required Color shadowColor} , default:none
    required super.shadowColor,

    /// optionalParameters: {required Color splashColor} , default:none
    required super.splashColor,

    /// optionalParameters: {required Color unselectedWidgetColor} , default:none
    required super.unselectedWidgetColor,

    /// optionalParameters: {required IconThemeData iconTheme} , default:none
    required super.iconTheme,

    /// optionalParameters: {required IconThemeData primaryIconTheme} , default:none
    required super.primaryIconTheme,

    /// optionalParameters: {required TextTheme primaryTextTheme} , default:none
    required super.primaryTextTheme,

    /// optionalParameters: {required TextTheme textTheme} , default:none
    required super.textTheme,

    /// optionalParameters: {required Typography typography} , default:none
    required super.typography,

    /// optionalParameters: {required ActionIconThemeData? actionIconTheme} , default:none
    required super.actionIconTheme,

    /// optionalParameters: {required AppBarTheme appBarTheme} , default:none
    required super.appBarTheme,

    /// optionalParameters: {required BadgeThemeData badgeTheme} , default:none
    required super.badgeTheme,

    /// optionalParameters: {required MaterialBannerThemeData bannerTheme} , default:none
    required super.bannerTheme,

    /// optionalParameters: {required BottomAppBarTheme bottomAppBarTheme} , default:none
    required super.bottomAppBarTheme,

    /// optionalParameters: {required BottomNavigationBarThemeData bottomNavigationBarTheme} , default:none
    required super.bottomNavigationBarTheme,

    /// optionalParameters: {required BottomSheetThemeData bottomSheetTheme} , default:none
    required super.bottomSheetTheme,

    /// optionalParameters: {required ButtonBarThemeData buttonBarTheme} , default:none
    required super.buttonBarTheme,

    /// optionalParameters: {required ButtonThemeData buttonTheme} , default:none
    required super.buttonTheme,

    /// optionalParameters: {required CardTheme cardTheme} , default:none
    required super.cardTheme,

    /// optionalParameters: {required CheckboxThemeData checkboxTheme} , default:none
    required super.checkboxTheme,

    /// optionalParameters: {required ChipThemeData chipTheme} , default:none
    required super.chipTheme,

    /// optionalParameters: {required DataTableThemeData dataTableTheme} , default:none
    required super.dataTableTheme,

    /// optionalParameters: {required DatePickerThemeData datePickerTheme} , default:none
    required super.datePickerTheme,

    /// optionalParameters: {required DialogTheme dialogTheme} , default:none
    required super.dialogTheme,

    /// optionalParameters: {required DividerThemeData dividerTheme} , default:none
    required super.dividerTheme,

    /// optionalParameters: {required DrawerThemeData drawerTheme} , default:none
    required super.drawerTheme,

    /// optionalParameters: {required DropdownMenuThemeData dropdownMenuTheme} , default:none
    required super.dropdownMenuTheme,

    /// optionalParameters: {required ElevatedButtonThemeData elevatedButtonTheme} , default:none
    required super.elevatedButtonTheme,

    /// optionalParameters: {required ExpansionTileThemeData expansionTileTheme} , default:none
    required super.expansionTileTheme,

    /// optionalParameters: {required FilledButtonThemeData filledButtonTheme} , default:none
    required super.filledButtonTheme,

    /// optionalParameters: {required FloatingActionButtonThemeData floatingActionButtonTheme} , default:none
    required super.floatingActionButtonTheme,

    /// optionalParameters: {required IconButtonThemeData iconButtonTheme} , default:none
    required super.iconButtonTheme,

    /// optionalParameters: {required ListTileThemeData listTileTheme} , default:none
    required super.listTileTheme,

    /// optionalParameters: {required MenuBarThemeData menuBarTheme} , default:none
    required super.menuBarTheme,

    /// optionalParameters: {required MenuButtonThemeData menuButtonTheme} , default:none
    required super.menuButtonTheme,

    /// optionalParameters: {required MenuThemeData menuTheme} , default:none
    required super.menuTheme,

    /// optionalParameters: {required NavigationBarThemeData navigationBarTheme} , default:none
    required super.navigationBarTheme,

    /// optionalParameters: {required NavigationDrawerThemeData navigationDrawerTheme} , default:none
    required super.navigationDrawerTheme,

    /// optionalParameters: {required NavigationRailThemeData navigationRailTheme} , default:none
    required super.navigationRailTheme,

    /// optionalParameters: {required OutlinedButtonThemeData outlinedButtonTheme} , default:none
    required super.outlinedButtonTheme,

    /// optionalParameters: {required PopupMenuThemeData popupMenuTheme} , default:none
    required super.popupMenuTheme,

    /// optionalParameters: {required ProgressIndicatorThemeData progressIndicatorTheme} , default:none
    required super.progressIndicatorTheme,

    /// optionalParameters: {required RadioThemeData radioTheme} , default:none
    required super.radioTheme,

    /// optionalParameters: {required SearchBarThemeData searchBarTheme} , default:none
    required super.searchBarTheme,

    /// optionalParameters: {required SearchViewThemeData searchViewTheme} , default:none
    required super.searchViewTheme,

    /// optionalParameters: {required SegmentedButtonThemeData segmentedButtonTheme} , default:none
    required super.segmentedButtonTheme,

    /// optionalParameters: {required SliderThemeData sliderTheme} , default:none
    required super.sliderTheme,

    /// optionalParameters: {required SnackBarThemeData snackBarTheme} , default:none
    required super.snackBarTheme,

    /// optionalParameters: {required SwitchThemeData switchTheme} , default:none
    required super.switchTheme,

    /// optionalParameters: {required TabBarTheme tabBarTheme} , default:none
    required super.tabBarTheme,

    /// optionalParameters: {required TextButtonThemeData textButtonTheme} , default:none
    required super.textButtonTheme,

    /// optionalParameters: {required TextSelectionThemeData textSelectionTheme} , default:none
    required super.textSelectionTheme,

    /// optionalParameters: {required TimePickerThemeData timePickerTheme} , default:none
    required super.timePickerTheme,

    /// optionalParameters: {required ToggleButtonsThemeData toggleButtonsTheme} , default:none
    required super.toggleButtonsTheme,

    /// optionalParameters: {required TooltipThemeData tooltipTheme} , default:none
    required super.tooltipTheme,
  })  : mateParams = {
          'applyElevationOverlayColor': _i2.BuilderArg<bool>(
            name: 'applyElevationOverlayColor',
            init: applyElevationOverlayColor,
            isNamed: true,
          ),
          'cupertinoOverrideTheme': _i2.BuilderArg<_i3.NoDefaultCupertinoThemeData?>(
            name: 'cupertinoOverrideTheme',
            init: cupertinoOverrideTheme,
            isNamed: true,
          ),
          'extensions': _i2.BuilderArg<Map<Object, _i1.ThemeExtension<dynamic>>>(
            name: 'extensions',
            init: extensions,
            isNamed: true,
          ),
          'inputDecorationTheme': _i2.BuilderArg<_i4.InputDecorationTheme>(
            name: 'inputDecorationTheme',
            init: inputDecorationTheme,
            isNamed: true,
          ),
          'materialTapTargetSize': _i2.BuilderArg<_i1.MaterialTapTargetSize>(
            name: 'materialTapTargetSize',
            init: materialTapTargetSize,
            isNamed: true,
          ),
          'pageTransitionsTheme': _i2.BuilderArg<_i5.PageTransitionsTheme>(
            name: 'pageTransitionsTheme',
            init: pageTransitionsTheme,
            isNamed: true,
          ),
          'platform': _i2.BuilderArg<_i6.TargetPlatform>(
            name: 'platform',
            init: platform,
            isNamed: true,
          ),
          'scrollbarTheme': _i2.BuilderArg<_i7.ScrollbarThemeData>(
            name: 'scrollbarTheme',
            init: scrollbarTheme,
            isNamed: true,
          ),
          'splashFactory': _i2.BuilderArg<_i8.InteractiveInkFeatureFactory>(
            name: 'splashFactory',
            init: splashFactory,
            isNamed: true,
          ),
          'useMaterial3': _i2.BuilderArg<bool>(
            name: 'useMaterial3',
            init: useMaterial3,
            isNamed: true,
          ),
          'visualDensity': _i2.BuilderArg<_i1.VisualDensity>(
            name: 'visualDensity',
            init: visualDensity,
            isNamed: true,
          ),
          'canvasColor': _i2.BuilderArg<_i9.Color>(
            name: 'canvasColor',
            init: canvasColor,
            isNamed: true,
          ),
          'cardColor': _i2.BuilderArg<_i9.Color>(
            name: 'cardColor',
            init: cardColor,
            isNamed: true,
          ),
          'colorScheme': _i2.BuilderArg<_i10.ColorScheme>(
            name: 'colorScheme',
            init: colorScheme,
            isNamed: true,
          ),
          'dialogBackgroundColor': _i2.BuilderArg<_i9.Color>(
            name: 'dialogBackgroundColor',
            init: dialogBackgroundColor,
            isNamed: true,
          ),
          'disabledColor': _i2.BuilderArg<_i9.Color>(
            name: 'disabledColor',
            init: disabledColor,
            isNamed: true,
          ),
          'dividerColor': _i2.BuilderArg<_i9.Color>(
            name: 'dividerColor',
            init: dividerColor,
            isNamed: true,
          ),
          'focusColor': _i2.BuilderArg<_i9.Color>(
            name: 'focusColor',
            init: focusColor,
            isNamed: true,
          ),
          'highlightColor': _i2.BuilderArg<_i9.Color>(
            name: 'highlightColor',
            init: highlightColor,
            isNamed: true,
          ),
          'hintColor': _i2.BuilderArg<_i9.Color>(
            name: 'hintColor',
            init: hintColor,
            isNamed: true,
          ),
          'hoverColor': _i2.BuilderArg<_i9.Color>(
            name: 'hoverColor',
            init: hoverColor,
            isNamed: true,
          ),
          'indicatorColor': _i2.BuilderArg<_i9.Color>(
            name: 'indicatorColor',
            init: indicatorColor,
            isNamed: true,
          ),
          'primaryColor': _i2.BuilderArg<_i9.Color>(
            name: 'primaryColor',
            init: primaryColor,
            isNamed: true,
          ),
          'primaryColorDark': _i2.BuilderArg<_i9.Color>(
            name: 'primaryColorDark',
            init: primaryColorDark,
            isNamed: true,
          ),
          'primaryColorLight': _i2.BuilderArg<_i9.Color>(
            name: 'primaryColorLight',
            init: primaryColorLight,
            isNamed: true,
          ),
          'scaffoldBackgroundColor': _i2.BuilderArg<_i9.Color>(
            name: 'scaffoldBackgroundColor',
            init: scaffoldBackgroundColor,
            isNamed: true,
          ),
          'secondaryHeaderColor': _i2.BuilderArg<_i9.Color>(
            name: 'secondaryHeaderColor',
            init: secondaryHeaderColor,
            isNamed: true,
          ),
          'shadowColor': _i2.BuilderArg<_i9.Color>(
            name: 'shadowColor',
            init: shadowColor,
            isNamed: true,
          ),
          'splashColor': _i2.BuilderArg<_i9.Color>(
            name: 'splashColor',
            init: splashColor,
            isNamed: true,
          ),
          'unselectedWidgetColor': _i2.BuilderArg<_i9.Color>(
            name: 'unselectedWidgetColor',
            init: unselectedWidgetColor,
            isNamed: true,
          ),
          'iconTheme': _i2.BuilderArg<_i11.IconThemeData>(
            name: 'iconTheme',
            init: iconTheme,
            isNamed: true,
          ),
          'primaryIconTheme': _i2.BuilderArg<_i11.IconThemeData>(
            name: 'primaryIconTheme',
            init: primaryIconTheme,
            isNamed: true,
          ),
          'primaryTextTheme': _i2.BuilderArg<_i12.TextTheme>(
            name: 'primaryTextTheme',
            init: primaryTextTheme,
            isNamed: true,
          ),
          'textTheme': _i2.BuilderArg<_i12.TextTheme>(
            name: 'textTheme',
            init: textTheme,
            isNamed: true,
          ),
          'typography': _i2.BuilderArg<_i13.Typography>(
            name: 'typography',
            init: typography,
            isNamed: true,
          ),
          'actionIconTheme': _i2.BuilderArg<_i14.ActionIconThemeData?>(
            name: 'actionIconTheme',
            init: actionIconTheme,
            isNamed: true,
          ),
          'appBarTheme': _i2.BuilderArg<_i15.AppBarTheme>(
            name: 'appBarTheme',
            init: appBarTheme,
            isNamed: true,
          ),
          'badgeTheme': _i2.BuilderArg<_i16.BadgeThemeData>(
            name: 'badgeTheme',
            init: badgeTheme,
            isNamed: true,
          ),
          'bannerTheme': _i2.BuilderArg<_i17.MaterialBannerThemeData>(
            name: 'bannerTheme',
            init: bannerTheme,
            isNamed: true,
          ),
          'bottomAppBarTheme': _i2.BuilderArg<_i18.BottomAppBarTheme>(
            name: 'bottomAppBarTheme',
            init: bottomAppBarTheme,
            isNamed: true,
          ),
          'bottomNavigationBarTheme': _i2.BuilderArg<_i19.BottomNavigationBarThemeData>(
            name: 'bottomNavigationBarTheme',
            init: bottomNavigationBarTheme,
            isNamed: true,
          ),
          'bottomSheetTheme': _i2.BuilderArg<_i20.BottomSheetThemeData>(
            name: 'bottomSheetTheme',
            init: bottomSheetTheme,
            isNamed: true,
          ),
          'buttonBarTheme': _i2.BuilderArg<_i21.ButtonBarThemeData>(
            name: 'buttonBarTheme',
            init: buttonBarTheme,
            isNamed: true,
          ),
          'buttonTheme': _i2.BuilderArg<_i22.ButtonThemeData>(
            name: 'buttonTheme',
            init: buttonTheme,
            isNamed: true,
          ),
          'cardTheme': _i2.BuilderArg<_i23.CardTheme>(
            name: 'cardTheme',
            init: cardTheme,
            isNamed: true,
          ),
          'checkboxTheme': _i2.BuilderArg<_i24.CheckboxThemeData>(
            name: 'checkboxTheme',
            init: checkboxTheme,
            isNamed: true,
          ),
          'chipTheme': _i2.BuilderArg<_i25.ChipThemeData>(
            name: 'chipTheme',
            init: chipTheme,
            isNamed: true,
          ),
          'dataTableTheme': _i2.BuilderArg<_i26.DataTableThemeData>(
            name: 'dataTableTheme',
            init: dataTableTheme,
            isNamed: true,
          ),
          'datePickerTheme': _i2.BuilderArg<_i27.DatePickerThemeData>(
            name: 'datePickerTheme',
            init: datePickerTheme,
            isNamed: true,
          ),
          'dialogTheme': _i2.BuilderArg<_i28.DialogTheme>(
            name: 'dialogTheme',
            init: dialogTheme,
            isNamed: true,
          ),
          'dividerTheme': _i2.BuilderArg<_i29.DividerThemeData>(
            name: 'dividerTheme',
            init: dividerTheme,
            isNamed: true,
          ),
          'drawerTheme': _i2.BuilderArg<_i30.DrawerThemeData>(
            name: 'drawerTheme',
            init: drawerTheme,
            isNamed: true,
          ),
          'dropdownMenuTheme': _i2.BuilderArg<_i31.DropdownMenuThemeData>(
            name: 'dropdownMenuTheme',
            init: dropdownMenuTheme,
            isNamed: true,
          ),
          'elevatedButtonTheme': _i2.BuilderArg<_i32.ElevatedButtonThemeData>(
            name: 'elevatedButtonTheme',
            init: elevatedButtonTheme,
            isNamed: true,
          ),
          'expansionTileTheme': _i2.BuilderArg<_i33.ExpansionTileThemeData>(
            name: 'expansionTileTheme',
            init: expansionTileTheme,
            isNamed: true,
          ),
          'filledButtonTheme': _i2.BuilderArg<_i34.FilledButtonThemeData>(
            name: 'filledButtonTheme',
            init: filledButtonTheme,
            isNamed: true,
          ),
          'floatingActionButtonTheme': _i2.BuilderArg<_i35.FloatingActionButtonThemeData>(
            name: 'floatingActionButtonTheme',
            init: floatingActionButtonTheme,
            isNamed: true,
          ),
          'iconButtonTheme': _i2.BuilderArg<_i36.IconButtonThemeData>(
            name: 'iconButtonTheme',
            init: iconButtonTheme,
            isNamed: true,
          ),
          'listTileTheme': _i2.BuilderArg<_i37.ListTileThemeData>(
            name: 'listTileTheme',
            init: listTileTheme,
            isNamed: true,
          ),
          'menuBarTheme': _i2.BuilderArg<_i38.MenuBarThemeData>(
            name: 'menuBarTheme',
            init: menuBarTheme,
            isNamed: true,
          ),
          'menuButtonTheme': _i2.BuilderArg<_i39.MenuButtonThemeData>(
            name: 'menuButtonTheme',
            init: menuButtonTheme,
            isNamed: true,
          ),
          'menuTheme': _i2.BuilderArg<_i40.MenuThemeData>(
            name: 'menuTheme',
            init: menuTheme,
            isNamed: true,
          ),
          'navigationBarTheme': _i2.BuilderArg<_i41.NavigationBarThemeData>(
            name: 'navigationBarTheme',
            init: navigationBarTheme,
            isNamed: true,
          ),
          'navigationDrawerTheme': _i2.BuilderArg<_i42.NavigationDrawerThemeData>(
            name: 'navigationDrawerTheme',
            init: navigationDrawerTheme,
            isNamed: true,
          ),
          'navigationRailTheme': _i2.BuilderArg<_i43.NavigationRailThemeData>(
            name: 'navigationRailTheme',
            init: navigationRailTheme,
            isNamed: true,
          ),
          'outlinedButtonTheme': _i2.BuilderArg<_i44.OutlinedButtonThemeData>(
            name: 'outlinedButtonTheme',
            init: outlinedButtonTheme,
            isNamed: true,
          ),
          'popupMenuTheme': _i2.BuilderArg<_i45.PopupMenuThemeData>(
            name: 'popupMenuTheme',
            init: popupMenuTheme,
            isNamed: true,
          ),
          'progressIndicatorTheme': _i2.BuilderArg<_i46.ProgressIndicatorThemeData>(
            name: 'progressIndicatorTheme',
            init: progressIndicatorTheme,
            isNamed: true,
          ),
          'radioTheme': _i2.BuilderArg<_i47.RadioThemeData>(
            name: 'radioTheme',
            init: radioTheme,
            isNamed: true,
          ),
          'searchBarTheme': _i2.BuilderArg<_i48.SearchBarThemeData>(
            name: 'searchBarTheme',
            init: searchBarTheme,
            isNamed: true,
          ),
          'searchViewTheme': _i2.BuilderArg<_i49.SearchViewThemeData>(
            name: 'searchViewTheme',
            init: searchViewTheme,
            isNamed: true,
          ),
          'segmentedButtonTheme': _i2.BuilderArg<_i50.SegmentedButtonThemeData>(
            name: 'segmentedButtonTheme',
            init: segmentedButtonTheme,
            isNamed: true,
          ),
          'sliderTheme': _i2.BuilderArg<_i51.SliderThemeData>(
            name: 'sliderTheme',
            init: sliderTheme,
            isNamed: true,
          ),
          'snackBarTheme': _i2.BuilderArg<_i52.SnackBarThemeData>(
            name: 'snackBarTheme',
            init: snackBarTheme,
            isNamed: true,
          ),
          'switchTheme': _i2.BuilderArg<_i53.SwitchThemeData>(
            name: 'switchTheme',
            init: switchTheme,
            isNamed: true,
          ),
          'tabBarTheme': _i2.BuilderArg<_i54.TabBarTheme>(
            name: 'tabBarTheme',
            init: tabBarTheme,
            isNamed: true,
          ),
          'textButtonTheme': _i2.BuilderArg<_i55.TextButtonThemeData>(
            name: 'textButtonTheme',
            init: textButtonTheme,
            isNamed: true,
          ),
          'textSelectionTheme': _i2.BuilderArg<_i56.TextSelectionThemeData>(
            name: 'textSelectionTheme',
            init: textSelectionTheme,
            isNamed: true,
          ),
          'timePickerTheme': _i2.BuilderArg<_i57.TimePickerThemeData>(
            name: 'timePickerTheme',
            init: timePickerTheme,
            isNamed: true,
          ),
          'toggleButtonsTheme': _i2.BuilderArg<_i58.ToggleButtonsThemeData>(
            name: 'toggleButtonsTheme',
            init: toggleButtonsTheme,
            isNamed: true,
          ),
          'tooltipTheme': _i2.BuilderArg<_i59.TooltipThemeData>(
            name: 'tooltipTheme',
            init: tooltipTheme,
            isNamed: true,
          ),
        },
        super.raw() {
    mateBuilderName = 'ThemeData.raw';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => ThemeData$Mate.raw(
          applyElevationOverlayColor: p.get('applyElevationOverlayColor').build(),
          cupertinoOverrideTheme: p.get('cupertinoOverrideTheme').build(),
          extensions: p.get('extensions').build(),
          inputDecorationTheme: p.get('inputDecorationTheme').build(),
          materialTapTargetSize: p.get('materialTapTargetSize').build(),
          pageTransitionsTheme: p.get('pageTransitionsTheme').build(),
          platform: p.get('platform').build(),
          scrollbarTheme: p.get('scrollbarTheme').build(),
          splashFactory: p.get('splashFactory').build(),
          useMaterial3: p.get('useMaterial3').build(),
          visualDensity: p.get('visualDensity').build(),
          canvasColor: p.get('canvasColor').build(),
          cardColor: p.get('cardColor').build(),
          colorScheme: p.get('colorScheme').build(),
          dialogBackgroundColor: p.get('dialogBackgroundColor').build(),
          disabledColor: p.get('disabledColor').build(),
          dividerColor: p.get('dividerColor').build(),
          focusColor: p.get('focusColor').build(),
          highlightColor: p.get('highlightColor').build(),
          hintColor: p.get('hintColor').build(),
          hoverColor: p.get('hoverColor').build(),
          indicatorColor: p.get('indicatorColor').build(),
          primaryColor: p.get('primaryColor').build(),
          primaryColorDark: p.get('primaryColorDark').build(),
          primaryColorLight: p.get('primaryColorLight').build(),
          scaffoldBackgroundColor: p.get('scaffoldBackgroundColor').build(),
          secondaryHeaderColor: p.get('secondaryHeaderColor').build(),
          shadowColor: p.get('shadowColor').build(),
          splashColor: p.get('splashColor').build(),
          unselectedWidgetColor: p.get('unselectedWidgetColor').build(),
          iconTheme: p.get('iconTheme').build(),
          primaryIconTheme: p.get('primaryIconTheme').build(),
          primaryTextTheme: p.get('primaryTextTheme').build(),
          textTheme: p.get('textTheme').build(),
          typography: p.get('typography').build(),
          actionIconTheme: p.get('actionIconTheme').build(),
          appBarTheme: p.get('appBarTheme').build(),
          badgeTheme: p.get('badgeTheme').build(),
          bannerTheme: p.get('bannerTheme').build(),
          bottomAppBarTheme: p.get('bottomAppBarTheme').build(),
          bottomNavigationBarTheme: p.get('bottomNavigationBarTheme').build(),
          bottomSheetTheme: p.get('bottomSheetTheme').build(),
          buttonBarTheme: p.get('buttonBarTheme').build(),
          buttonTheme: p.get('buttonTheme').build(),
          cardTheme: p.get('cardTheme').build(),
          checkboxTheme: p.get('checkboxTheme').build(),
          chipTheme: p.get('chipTheme').build(),
          dataTableTheme: p.get('dataTableTheme').build(),
          datePickerTheme: p.get('datePickerTheme').build(),
          dialogTheme: p.get('dialogTheme').build(),
          dividerTheme: p.get('dividerTheme').build(),
          drawerTheme: p.get('drawerTheme').build(),
          dropdownMenuTheme: p.get('dropdownMenuTheme').build(),
          elevatedButtonTheme: p.get('elevatedButtonTheme').build(),
          expansionTileTheme: p.get('expansionTileTheme').build(),
          filledButtonTheme: p.get('filledButtonTheme').build(),
          floatingActionButtonTheme: p.get('floatingActionButtonTheme').build(),
          iconButtonTheme: p.get('iconButtonTheme').build(),
          listTileTheme: p.get('listTileTheme').build(),
          menuBarTheme: p.get('menuBarTheme').build(),
          menuButtonTheme: p.get('menuButtonTheme').build(),
          menuTheme: p.get('menuTheme').build(),
          navigationBarTheme: p.get('navigationBarTheme').build(),
          navigationDrawerTheme: p.get('navigationDrawerTheme').build(),
          navigationRailTheme: p.get('navigationRailTheme').build(),
          outlinedButtonTheme: p.get('outlinedButtonTheme').build(),
          popupMenuTheme: p.get('popupMenuTheme').build(),
          progressIndicatorTheme: p.get('progressIndicatorTheme').build(),
          radioTheme: p.get('radioTheme').build(),
          searchBarTheme: p.get('searchBarTheme').build(),
          searchViewTheme: p.get('searchViewTheme').build(),
          segmentedButtonTheme: p.get('segmentedButtonTheme').build(),
          sliderTheme: p.get('sliderTheme').build(),
          snackBarTheme: p.get('snackBarTheme').build(),
          switchTheme: p.get('switchTheme').build(),
          tabBarTheme: p.get('tabBarTheme').build(),
          textButtonTheme: p.get('textButtonTheme').build(),
          textSelectionTheme: p.get('textSelectionTheme').build(),
          timePickerTheme: p.get('timePickerTheme').build(),
          toggleButtonsTheme: p.get('toggleButtonsTheme').build(),
          tooltipTheme: p.get('tooltipTheme').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class MaterialBasedCupertinoThemeData extends CupertinoThemeData
class MaterialBasedCupertinoThemeData$Mate extends _i1.MaterialBasedCupertinoThemeData with _i2.Mate {
  /// MaterialBasedCupertinoThemeData MaterialBasedCupertinoThemeData({required ThemeData materialTheme})
  MaterialBasedCupertinoThemeData$Mate(
      {
      /// optionalParameters: {required ThemeData materialTheme} , default:none
      required super.materialTheme})
      : mateParams = {
          'materialTheme': _i2.BuilderArg<_i1.ThemeData>(
            name: 'materialTheme',
            init: materialTheme,
            isNamed: true,
          )
        },
        super() {
    mateBuilderName = 'MaterialBasedCupertinoThemeData';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => MaterialBasedCupertinoThemeData$Mate(materialTheme: p.get('materialTheme').build());
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class VisualDensity with Diagnosticable
class VisualDensity$Mate extends _i1.VisualDensity with _i2.Mate {
  /// VisualDensity VisualDensity({double horizontal = 0.0, double vertical = 0.0})
  VisualDensity$Mate({
    /// optionalParameters: {double horizontal = 0.0} , default:processed=DoubleLiteralImpl
    super.horizontal,

    /// optionalParameters: {double vertical = 0.0} , default:processed=DoubleLiteralImpl
    super.vertical,
  })  : mateParams = {
          'horizontal': _i2.BuilderArg<double>(
            name: 'horizontal',
            init: horizontal,
            isNamed: true,
            defaultValue: 0.0,
          ),
          'vertical': _i2.BuilderArg<double>(
            name: 'vertical',
            init: vertical,
            isNamed: true,
            defaultValue: 0.0,
          ),
        },
        super() {
    mateBuilderName = 'VisualDensity';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => VisualDensity$Mate(
          horizontal: p.get('horizontal').build(),
          vertical: p.get('vertical').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
