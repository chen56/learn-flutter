// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/ink_well.dart' as _i1;
import 'package:mate/mate_core.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/widgets/framework.dart' as _i4;
import 'package:flutter/src/gestures/tap.dart' as _i5;
import 'package:flutter/src/gestures/long_press.dart' as _i6;
import 'package:flutter/src/foundation/basic_types.dart' as _i7;
import 'package:flutter/src/services/mouse_cursor.dart' as _i8;
import 'package:flutter/src/painting/box_border.dart' as _i9;
import 'package:flutter/cupertino.dart' as _i10;
import 'package:flutter/src/painting/border_radius.dart' as _i11;
import 'package:flutter/src/painting/borders.dart' as _i12;
import 'dart:ui' as _i13;
import 'package:flutter/src/material/material_state.dart' as _i14;
import 'package:flutter/src/widgets/focus_manager.dart' as _i15;

/// class InkResponse extends StatelessWidget
class InkResponse$Mate extends _i1.InkResponse with _i2.Mate {
  /// InkResponse InkResponse({Key? key, Widget? child, void Function()? onTap, void Function(TapDownDetails)? onTapDown, void Function(TapUpDetails)? onTapUp, void Function()? onTapCancel, void Function()? onDoubleTap, void Function()? onLongPress, void Function()? onSecondaryTap, void Function(TapUpDetails)? onSecondaryTapUp, void Function(TapDownDetails)? onSecondaryTapDown, void Function()? onSecondaryTapCancel, void Function(bool)? onHighlightChanged, void Function(bool)? onHover, MouseCursor? mouseCursor, bool containedInkWell = false, BoxShape highlightShape = BoxShape.circle, double? radius, BorderRadius? borderRadius, ShapeBorder? customBorder, Color? focusColor, Color? hoverColor, Color? highlightColor, MaterialStateProperty<Color?>? overlayColor, Color? splashColor, InteractiveInkFeatureFactory? splashFactory, bool enableFeedback = true, bool excludeFromSemantics = false, FocusNode? focusNode, bool canRequestFocus = true, void Function(bool)? onFocusChange, bool autofocus = false, MaterialStatesController? statesController})
  InkResponse$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {Widget? child} , default:none
    super.child,

    /// optionalParameters: {void Function()? onTap} , default:none
    super.onTap,

    /// optionalParameters: {void Function(TapDownDetails)? onTapDown} , default:none
    super.onTapDown,

    /// optionalParameters: {void Function(TapUpDetails)? onTapUp} , default:none
    super.onTapUp,

    /// optionalParameters: {void Function()? onTapCancel} , default:none
    super.onTapCancel,

    /// optionalParameters: {void Function()? onDoubleTap} , default:none
    super.onDoubleTap,

    /// optionalParameters: {void Function()? onLongPress} , default:none
    super.onLongPress,

    /// optionalParameters: {void Function()? onSecondaryTap} , default:none
    super.onSecondaryTap,

    /// optionalParameters: {void Function(TapUpDetails)? onSecondaryTapUp} , default:none
    super.onSecondaryTapUp,

    /// optionalParameters: {void Function(TapDownDetails)? onSecondaryTapDown} , default:none
    super.onSecondaryTapDown,

    /// optionalParameters: {void Function()? onSecondaryTapCancel} , default:none
    super.onSecondaryTapCancel,

    /// optionalParameters: {void Function(bool)? onHighlightChanged} , default:none
    super.onHighlightChanged,

    /// optionalParameters: {void Function(bool)? onHover} , default:none
    super.onHover,

    /// optionalParameters: {MouseCursor? mouseCursor} , default:none
    super.mouseCursor,

    /// optionalParameters: {bool containedInkWell = false} , default:processed=BooleanLiteralImpl
    super.containedInkWell,

    /// optionalParameters: {BoxShape highlightShape = BoxShape.circle} , default:processed=PrefixedIdentifierImpl
    super.highlightShape,

    /// optionalParameters: {double? radius} , default:none
    super.radius,

    /// optionalParameters: {BorderRadius? borderRadius} , default:none
    super.borderRadius,

    /// optionalParameters: {ShapeBorder? customBorder} , default:none
    super.customBorder,

    /// optionalParameters: {Color? focusColor} , default:none
    super.focusColor,

    /// optionalParameters: {Color? hoverColor} , default:none
    super.hoverColor,

    /// optionalParameters: {Color? highlightColor} , default:none
    super.highlightColor,

    /// optionalParameters: {MaterialStateProperty<Color?>? overlayColor} , default:none
    super.overlayColor,

    /// optionalParameters: {Color? splashColor} , default:none
    super.splashColor,

    /// optionalParameters: {InteractiveInkFeatureFactory? splashFactory} , default:none
    super.splashFactory,

    /// optionalParameters: {bool enableFeedback = true} , default:processed=BooleanLiteralImpl
    super.enableFeedback,

    /// optionalParameters: {bool excludeFromSemantics = false} , default:processed=BooleanLiteralImpl
    super.excludeFromSemantics,

    /// optionalParameters: {FocusNode? focusNode} , default:none
    super.focusNode,

    /// optionalParameters: {bool canRequestFocus = true} , default:processed=BooleanLiteralImpl
    super.canRequestFocus,

    /// optionalParameters: {void Function(bool)? onFocusChange} , default:none
    super.onFocusChange,

    /// optionalParameters: {bool autofocus = false} , default:processed=BooleanLiteralImpl
    super.autofocus,

    /// optionalParameters: {MaterialStatesController? statesController} , default:none
    super.statesController,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i4.Widget?>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
          'onTap': _i2.BuilderArg<_i5.GestureTapCallback?>(
            name: 'onTap',
            init: onTap,
            isNamed: true,
          ),
          'onTapDown': _i2.BuilderArg<_i5.GestureTapDownCallback?>(
            name: 'onTapDown',
            init: onTapDown,
            isNamed: true,
          ),
          'onTapUp': _i2.BuilderArg<_i5.GestureTapUpCallback?>(
            name: 'onTapUp',
            init: onTapUp,
            isNamed: true,
          ),
          'onTapCancel': _i2.BuilderArg<_i5.GestureTapCallback?>(
            name: 'onTapCancel',
            init: onTapCancel,
            isNamed: true,
          ),
          'onDoubleTap': _i2.BuilderArg<_i5.GestureTapCallback?>(
            name: 'onDoubleTap',
            init: onDoubleTap,
            isNamed: true,
          ),
          'onLongPress': _i2.BuilderArg<_i6.GestureLongPressCallback?>(
            name: 'onLongPress',
            init: onLongPress,
            isNamed: true,
          ),
          'onSecondaryTap': _i2.BuilderArg<_i5.GestureTapCallback?>(
            name: 'onSecondaryTap',
            init: onSecondaryTap,
            isNamed: true,
          ),
          'onSecondaryTapUp': _i2.BuilderArg<_i5.GestureTapUpCallback?>(
            name: 'onSecondaryTapUp',
            init: onSecondaryTapUp,
            isNamed: true,
          ),
          'onSecondaryTapDown': _i2.BuilderArg<_i5.GestureTapDownCallback?>(
            name: 'onSecondaryTapDown',
            init: onSecondaryTapDown,
            isNamed: true,
          ),
          'onSecondaryTapCancel': _i2.BuilderArg<_i5.GestureTapCallback?>(
            name: 'onSecondaryTapCancel',
            init: onSecondaryTapCancel,
            isNamed: true,
          ),
          'onHighlightChanged': _i2.BuilderArg<_i7.ValueChanged<bool>?>(
            name: 'onHighlightChanged',
            init: onHighlightChanged,
            isNamed: true,
          ),
          'onHover': _i2.BuilderArg<_i7.ValueChanged<bool>?>(
            name: 'onHover',
            init: onHover,
            isNamed: true,
          ),
          'mouseCursor': _i2.BuilderArg<_i8.MouseCursor?>(
            name: 'mouseCursor',
            init: mouseCursor,
            isNamed: true,
          ),
          'containedInkWell': _i2.BuilderArg<bool>(
            name: 'containedInkWell',
            init: containedInkWell,
            isNamed: true,
            defaultValue: false,
          ),
          'highlightShape': _i2.BuilderArg<_i9.BoxShape>(
            name: 'highlightShape',
            init: highlightShape,
            isNamed: true,
            defaultValue: _i10.BoxShape.circle,
          ),
          'radius': _i2.BuilderArg<double?>(
            name: 'radius',
            init: radius,
            isNamed: true,
          ),
          'borderRadius': _i2.BuilderArg<_i11.BorderRadius?>(
            name: 'borderRadius',
            init: borderRadius,
            isNamed: true,
          ),
          'customBorder': _i2.BuilderArg<_i12.ShapeBorder?>(
            name: 'customBorder',
            init: customBorder,
            isNamed: true,
          ),
          'focusColor': _i2.BuilderArg<_i13.Color?>(
            name: 'focusColor',
            init: focusColor,
            isNamed: true,
          ),
          'hoverColor': _i2.BuilderArg<_i13.Color?>(
            name: 'hoverColor',
            init: hoverColor,
            isNamed: true,
          ),
          'highlightColor': _i2.BuilderArg<_i13.Color?>(
            name: 'highlightColor',
            init: highlightColor,
            isNamed: true,
          ),
          'overlayColor': _i2.BuilderArg<_i14.MaterialStateProperty<_i13.Color?>?>(
            name: 'overlayColor',
            init: overlayColor,
            isNamed: true,
          ),
          'splashColor': _i2.BuilderArg<_i13.Color?>(
            name: 'splashColor',
            init: splashColor,
            isNamed: true,
          ),
          'splashFactory': _i2.BuilderArg<_i1.InteractiveInkFeatureFactory?>(
            name: 'splashFactory',
            init: splashFactory,
            isNamed: true,
          ),
          'enableFeedback': _i2.BuilderArg<bool>(
            name: 'enableFeedback',
            init: enableFeedback,
            isNamed: true,
            defaultValue: true,
          ),
          'excludeFromSemantics': _i2.BuilderArg<bool>(
            name: 'excludeFromSemantics',
            init: excludeFromSemantics,
            isNamed: true,
            defaultValue: false,
          ),
          'focusNode': _i2.BuilderArg<_i15.FocusNode?>(
            name: 'focusNode',
            init: focusNode,
            isNamed: true,
          ),
          'canRequestFocus': _i2.BuilderArg<bool>(
            name: 'canRequestFocus',
            init: canRequestFocus,
            isNamed: true,
            defaultValue: true,
          ),
          'onFocusChange': _i2.BuilderArg<_i7.ValueChanged<bool>?>(
            name: 'onFocusChange',
            init: onFocusChange,
            isNamed: true,
          ),
          'autofocus': _i2.BuilderArg<bool>(
            name: 'autofocus',
            init: autofocus,
            isNamed: true,
            defaultValue: false,
          ),
          'statesController': _i2.BuilderArg<_i14.MaterialStatesController?>(
            name: 'statesController',
            init: statesController,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'InkResponse';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => InkResponse$Mate(
          key: p.get('key').build(),
          child: p.get('child').build(),
          onTap: p.get('onTap').build(),
          onTapDown: p.get('onTapDown').build(),
          onTapUp: p.get('onTapUp').build(),
          onTapCancel: p.get('onTapCancel').build(),
          onDoubleTap: p.get('onDoubleTap').build(),
          onLongPress: p.get('onLongPress').build(),
          onSecondaryTap: p.get('onSecondaryTap').build(),
          onSecondaryTapUp: p.get('onSecondaryTapUp').build(),
          onSecondaryTapDown: p.get('onSecondaryTapDown').build(),
          onSecondaryTapCancel: p.get('onSecondaryTapCancel').build(),
          onHighlightChanged: p.get('onHighlightChanged').build(),
          onHover: p.get('onHover').build(),
          mouseCursor: p.get('mouseCursor').build(),
          containedInkWell: p.get('containedInkWell').build(),
          highlightShape: p.get('highlightShape').build(),
          radius: p.get('radius').build(),
          borderRadius: p.get('borderRadius').build(),
          customBorder: p.get('customBorder').build(),
          focusColor: p.get('focusColor').build(),
          hoverColor: p.get('hoverColor').build(),
          highlightColor: p.get('highlightColor').build(),
          overlayColor: p.get('overlayColor').build(),
          splashColor: p.get('splashColor').build(),
          splashFactory: p.get('splashFactory').build(),
          enableFeedback: p.get('enableFeedback').build(),
          excludeFromSemantics: p.get('excludeFromSemantics').build(),
          focusNode: p.get('focusNode').build(),
          canRequestFocus: p.get('canRequestFocus').build(),
          onFocusChange: p.get('onFocusChange').build(),
          autofocus: p.get('autofocus').build(),
          statesController: p.get('statesController').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class InkWell extends InkResponse
class InkWell$Mate extends _i1.InkWell with _i2.Mate {
  /// InkWell InkWell({Key? key, Widget? child, void Function()? onTap, void Function()? onDoubleTap, void Function()? onLongPress, void Function(TapDownDetails)? onTapDown, void Function(TapUpDetails)? onTapUp, void Function()? onTapCancel, void Function()? onSecondaryTap, void Function(TapUpDetails)? onSecondaryTapUp, void Function(TapDownDetails)? onSecondaryTapDown, void Function()? onSecondaryTapCancel, void Function(bool)? onHighlightChanged, void Function(bool)? onHover, MouseCursor? mouseCursor, Color? focusColor, Color? hoverColor, Color? highlightColor, MaterialStateProperty<Color?>? overlayColor, Color? splashColor, InteractiveInkFeatureFactory? splashFactory, double? radius, BorderRadius? borderRadius, ShapeBorder? customBorder, bool? enableFeedback = true, bool excludeFromSemantics = false, FocusNode? focusNode, bool canRequestFocus = true, void Function(bool)? onFocusChange, bool autofocus = false, MaterialStatesController? statesController})
  InkWell$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {Widget? child} , default:none
    super.child,

    /// optionalParameters: {void Function()? onTap} , default:none
    super.onTap,

    /// optionalParameters: {void Function()? onDoubleTap} , default:none
    super.onDoubleTap,

    /// optionalParameters: {void Function()? onLongPress} , default:none
    super.onLongPress,

    /// optionalParameters: {void Function(TapDownDetails)? onTapDown} , default:none
    super.onTapDown,

    /// optionalParameters: {void Function(TapUpDetails)? onTapUp} , default:none
    super.onTapUp,

    /// optionalParameters: {void Function()? onTapCancel} , default:none
    super.onTapCancel,

    /// optionalParameters: {void Function()? onSecondaryTap} , default:none
    super.onSecondaryTap,

    /// optionalParameters: {void Function(TapUpDetails)? onSecondaryTapUp} , default:none
    super.onSecondaryTapUp,

    /// optionalParameters: {void Function(TapDownDetails)? onSecondaryTapDown} , default:none
    super.onSecondaryTapDown,

    /// optionalParameters: {void Function()? onSecondaryTapCancel} , default:none
    super.onSecondaryTapCancel,

    /// optionalParameters: {void Function(bool)? onHighlightChanged} , default:none
    super.onHighlightChanged,

    /// optionalParameters: {void Function(bool)? onHover} , default:none
    super.onHover,

    /// optionalParameters: {MouseCursor? mouseCursor} , default:none
    super.mouseCursor,

    /// optionalParameters: {Color? focusColor} , default:none
    super.focusColor,

    /// optionalParameters: {Color? hoverColor} , default:none
    super.hoverColor,

    /// optionalParameters: {Color? highlightColor} , default:none
    super.highlightColor,

    /// optionalParameters: {MaterialStateProperty<Color?>? overlayColor} , default:none
    super.overlayColor,

    /// optionalParameters: {Color? splashColor} , default:none
    super.splashColor,

    /// optionalParameters: {InteractiveInkFeatureFactory? splashFactory} , default:none
    super.splashFactory,

    /// optionalParameters: {double? radius} , default:none
    super.radius,

    /// optionalParameters: {BorderRadius? borderRadius} , default:none
    super.borderRadius,

    /// optionalParameters: {ShapeBorder? customBorder} , default:none
    super.customBorder,

    /// optionalParameters: {bool? enableFeedback = true} , default:processed=BooleanLiteralImpl
    super.enableFeedback,

    /// optionalParameters: {bool excludeFromSemantics = false} , default:processed=BooleanLiteralImpl
    super.excludeFromSemantics,

    /// optionalParameters: {FocusNode? focusNode} , default:none
    super.focusNode,

    /// optionalParameters: {bool canRequestFocus = true} , default:processed=BooleanLiteralImpl
    super.canRequestFocus,

    /// optionalParameters: {void Function(bool)? onFocusChange} , default:none
    super.onFocusChange,

    /// optionalParameters: {bool autofocus = false} , default:processed=BooleanLiteralImpl
    super.autofocus,

    /// optionalParameters: {MaterialStatesController? statesController} , default:none
    super.statesController,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'child': _i2.BuilderArg<_i4.Widget?>(
            name: 'child',
            init: child,
            isNamed: true,
          ),
          'onTap': _i2.BuilderArg<_i5.GestureTapCallback?>(
            name: 'onTap',
            init: onTap,
            isNamed: true,
          ),
          'onDoubleTap': _i2.BuilderArg<_i5.GestureTapCallback?>(
            name: 'onDoubleTap',
            init: onDoubleTap,
            isNamed: true,
          ),
          'onLongPress': _i2.BuilderArg<_i6.GestureLongPressCallback?>(
            name: 'onLongPress',
            init: onLongPress,
            isNamed: true,
          ),
          'onTapDown': _i2.BuilderArg<_i5.GestureTapDownCallback?>(
            name: 'onTapDown',
            init: onTapDown,
            isNamed: true,
          ),
          'onTapUp': _i2.BuilderArg<_i5.GestureTapUpCallback?>(
            name: 'onTapUp',
            init: onTapUp,
            isNamed: true,
          ),
          'onTapCancel': _i2.BuilderArg<_i5.GestureTapCallback?>(
            name: 'onTapCancel',
            init: onTapCancel,
            isNamed: true,
          ),
          'onSecondaryTap': _i2.BuilderArg<_i5.GestureTapCallback?>(
            name: 'onSecondaryTap',
            init: onSecondaryTap,
            isNamed: true,
          ),
          'onSecondaryTapUp': _i2.BuilderArg<_i5.GestureTapUpCallback?>(
            name: 'onSecondaryTapUp',
            init: onSecondaryTapUp,
            isNamed: true,
          ),
          'onSecondaryTapDown': _i2.BuilderArg<_i5.GestureTapDownCallback?>(
            name: 'onSecondaryTapDown',
            init: onSecondaryTapDown,
            isNamed: true,
          ),
          'onSecondaryTapCancel': _i2.BuilderArg<_i5.GestureTapCallback?>(
            name: 'onSecondaryTapCancel',
            init: onSecondaryTapCancel,
            isNamed: true,
          ),
          'onHighlightChanged': _i2.BuilderArg<_i7.ValueChanged<bool>?>(
            name: 'onHighlightChanged',
            init: onHighlightChanged,
            isNamed: true,
          ),
          'onHover': _i2.BuilderArg<_i7.ValueChanged<bool>?>(
            name: 'onHover',
            init: onHover,
            isNamed: true,
          ),
          'mouseCursor': _i2.BuilderArg<_i8.MouseCursor?>(
            name: 'mouseCursor',
            init: mouseCursor,
            isNamed: true,
          ),
          'focusColor': _i2.BuilderArg<_i13.Color?>(
            name: 'focusColor',
            init: focusColor,
            isNamed: true,
          ),
          'hoverColor': _i2.BuilderArg<_i13.Color?>(
            name: 'hoverColor',
            init: hoverColor,
            isNamed: true,
          ),
          'highlightColor': _i2.BuilderArg<_i13.Color?>(
            name: 'highlightColor',
            init: highlightColor,
            isNamed: true,
          ),
          'overlayColor': _i2.BuilderArg<_i14.MaterialStateProperty<_i13.Color?>?>(
            name: 'overlayColor',
            init: overlayColor,
            isNamed: true,
          ),
          'splashColor': _i2.BuilderArg<_i13.Color?>(
            name: 'splashColor',
            init: splashColor,
            isNamed: true,
          ),
          'splashFactory': _i2.BuilderArg<_i1.InteractiveInkFeatureFactory?>(
            name: 'splashFactory',
            init: splashFactory,
            isNamed: true,
          ),
          'radius': _i2.BuilderArg<double?>(
            name: 'radius',
            init: radius,
            isNamed: true,
          ),
          'borderRadius': _i2.BuilderArg<_i11.BorderRadius?>(
            name: 'borderRadius',
            init: borderRadius,
            isNamed: true,
          ),
          'customBorder': _i2.BuilderArg<_i12.ShapeBorder?>(
            name: 'customBorder',
            init: customBorder,
            isNamed: true,
          ),
          'enableFeedback': _i2.BuilderArg<bool?>(
            name: 'enableFeedback',
            init: enableFeedback,
            isNamed: true,
            defaultValue: true,
          ),
          'excludeFromSemantics': _i2.BuilderArg<bool>(
            name: 'excludeFromSemantics',
            init: excludeFromSemantics,
            isNamed: true,
            defaultValue: false,
          ),
          'focusNode': _i2.BuilderArg<_i15.FocusNode?>(
            name: 'focusNode',
            init: focusNode,
            isNamed: true,
          ),
          'canRequestFocus': _i2.BuilderArg<bool>(
            name: 'canRequestFocus',
            init: canRequestFocus,
            isNamed: true,
            defaultValue: true,
          ),
          'onFocusChange': _i2.BuilderArg<_i7.ValueChanged<bool>?>(
            name: 'onFocusChange',
            init: onFocusChange,
            isNamed: true,
          ),
          'autofocus': _i2.BuilderArg<bool>(
            name: 'autofocus',
            init: autofocus,
            isNamed: true,
            defaultValue: false,
          ),
          'statesController': _i2.BuilderArg<_i14.MaterialStatesController?>(
            name: 'statesController',
            init: statesController,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'InkWell';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => InkWell$Mate(
          key: p.get('key').build(),
          child: p.get('child').build(),
          onTap: p.get('onTap').build(),
          onDoubleTap: p.get('onDoubleTap').build(),
          onLongPress: p.get('onLongPress').build(),
          onTapDown: p.get('onTapDown').build(),
          onTapUp: p.get('onTapUp').build(),
          onTapCancel: p.get('onTapCancel').build(),
          onSecondaryTap: p.get('onSecondaryTap').build(),
          onSecondaryTapUp: p.get('onSecondaryTapUp').build(),
          onSecondaryTapDown: p.get('onSecondaryTapDown').build(),
          onSecondaryTapCancel: p.get('onSecondaryTapCancel').build(),
          onHighlightChanged: p.get('onHighlightChanged').build(),
          onHover: p.get('onHover').build(),
          mouseCursor: p.get('mouseCursor').build(),
          focusColor: p.get('focusColor').build(),
          hoverColor: p.get('hoverColor').build(),
          highlightColor: p.get('highlightColor').build(),
          overlayColor: p.get('overlayColor').build(),
          splashColor: p.get('splashColor').build(),
          splashFactory: p.get('splashFactory').build(),
          radius: p.get('radius').build(),
          borderRadius: p.get('borderRadius').build(),
          customBorder: p.get('customBorder').build(),
          enableFeedback: p.get('enableFeedback').build(),
          excludeFromSemantics: p.get('excludeFromSemantics').build(),
          focusNode: p.get('focusNode').build(),
          canRequestFocus: p.get('canRequestFocus').build(),
          onFocusChange: p.get('onFocusChange').build(),
          autofocus: p.get('autofocus').build(),
          statesController: p.get('statesController').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
