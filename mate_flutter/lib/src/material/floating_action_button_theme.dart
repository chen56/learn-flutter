// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/floating_action_button_theme.dart' as _i1;
import 'package:mate/mate_core.dart' as _i2;
import 'dart:ui' as _i3;
import 'package:flutter/src/painting/borders.dart' as _i4;
import 'package:flutter/src/rendering/box.dart' as _i5;
import 'package:flutter/src/painting/edge_insets.dart' as _i6;
import 'package:flutter/src/painting/text_style.dart' as _i7;
import 'package:flutter/src/material/material_state.dart' as _i8;
import 'package:flutter/src/services/mouse_cursor.dart' as _i9;

/// class FloatingActionButtonThemeData with Diagnosticable
class FloatingActionButtonThemeData$Mate
    extends _i1.FloatingActionButtonThemeData with _i2.Mate {
  /// FloatingActionButtonThemeData FloatingActionButtonThemeData({Color? foregroundColor, Color? backgroundColor, Color? focusColor, Color? hoverColor, Color? splashColor, double? elevation, double? focusElevation, double? hoverElevation, double? disabledElevation, double? highlightElevation, ShapeBorder? shape, bool? enableFeedback, double? iconSize, BoxConstraints? sizeConstraints, BoxConstraints? smallSizeConstraints, BoxConstraints? largeSizeConstraints, BoxConstraints? extendedSizeConstraints, double? extendedIconLabelSpacing, EdgeInsetsGeometry? extendedPadding, TextStyle? extendedTextStyle, MaterialStateProperty<MouseCursor?>? mouseCursor})
  FloatingActionButtonThemeData$Mate({
    /// optionalParameters: {Color? foregroundColor} , default:none
    super.foregroundColor,

    /// optionalParameters: {Color? backgroundColor} , default:none
    super.backgroundColor,

    /// optionalParameters: {Color? focusColor} , default:none
    super.focusColor,

    /// optionalParameters: {Color? hoverColor} , default:none
    super.hoverColor,

    /// optionalParameters: {Color? splashColor} , default:none
    super.splashColor,

    /// optionalParameters: {double? elevation} , default:none
    super.elevation,

    /// optionalParameters: {double? focusElevation} , default:none
    super.focusElevation,

    /// optionalParameters: {double? hoverElevation} , default:none
    super.hoverElevation,

    /// optionalParameters: {double? disabledElevation} , default:none
    super.disabledElevation,

    /// optionalParameters: {double? highlightElevation} , default:none
    super.highlightElevation,

    /// optionalParameters: {ShapeBorder? shape} , default:none
    super.shape,

    /// optionalParameters: {bool? enableFeedback} , default:none
    super.enableFeedback,

    /// optionalParameters: {double? iconSize} , default:none
    super.iconSize,

    /// optionalParameters: {BoxConstraints? sizeConstraints} , default:none
    super.sizeConstraints,

    /// optionalParameters: {BoxConstraints? smallSizeConstraints} , default:none
    super.smallSizeConstraints,

    /// optionalParameters: {BoxConstraints? largeSizeConstraints} , default:none
    super.largeSizeConstraints,

    /// optionalParameters: {BoxConstraints? extendedSizeConstraints} , default:none
    super.extendedSizeConstraints,

    /// optionalParameters: {double? extendedIconLabelSpacing} , default:none
    super.extendedIconLabelSpacing,

    /// optionalParameters: {EdgeInsetsGeometry? extendedPadding} , default:none
    super.extendedPadding,

    /// optionalParameters: {TextStyle? extendedTextStyle} , default:none
    super.extendedTextStyle,

    /// optionalParameters: {MaterialStateProperty<MouseCursor?>? mouseCursor} , default:none
    super.mouseCursor,
  })  : mateParams = {
          'foregroundColor': _i2.BuilderArg<_i3.Color?>(
            name: 'foregroundColor',
            init: foregroundColor,
            isNamed: true,
          ),
          'backgroundColor': _i2.BuilderArg<_i3.Color?>(
            name: 'backgroundColor',
            init: backgroundColor,
            isNamed: true,
          ),
          'focusColor': _i2.BuilderArg<_i3.Color?>(
            name: 'focusColor',
            init: focusColor,
            isNamed: true,
          ),
          'hoverColor': _i2.BuilderArg<_i3.Color?>(
            name: 'hoverColor',
            init: hoverColor,
            isNamed: true,
          ),
          'splashColor': _i2.BuilderArg<_i3.Color?>(
            name: 'splashColor',
            init: splashColor,
            isNamed: true,
          ),
          'elevation': _i2.BuilderArg<double?>(
            name: 'elevation',
            init: elevation,
            isNamed: true,
          ),
          'focusElevation': _i2.BuilderArg<double?>(
            name: 'focusElevation',
            init: focusElevation,
            isNamed: true,
          ),
          'hoverElevation': _i2.BuilderArg<double?>(
            name: 'hoverElevation',
            init: hoverElevation,
            isNamed: true,
          ),
          'disabledElevation': _i2.BuilderArg<double?>(
            name: 'disabledElevation',
            init: disabledElevation,
            isNamed: true,
          ),
          'highlightElevation': _i2.BuilderArg<double?>(
            name: 'highlightElevation',
            init: highlightElevation,
            isNamed: true,
          ),
          'shape': _i2.BuilderArg<_i4.ShapeBorder?>(
            name: 'shape',
            init: shape,
            isNamed: true,
          ),
          'enableFeedback': _i2.BuilderArg<bool?>(
            name: 'enableFeedback',
            init: enableFeedback,
            isNamed: true,
          ),
          'iconSize': _i2.BuilderArg<double?>(
            name: 'iconSize',
            init: iconSize,
            isNamed: true,
          ),
          'sizeConstraints': _i2.BuilderArg<_i5.BoxConstraints?>(
            name: 'sizeConstraints',
            init: sizeConstraints,
            isNamed: true,
          ),
          'smallSizeConstraints': _i2.BuilderArg<_i5.BoxConstraints?>(
            name: 'smallSizeConstraints',
            init: smallSizeConstraints,
            isNamed: true,
          ),
          'largeSizeConstraints': _i2.BuilderArg<_i5.BoxConstraints?>(
            name: 'largeSizeConstraints',
            init: largeSizeConstraints,
            isNamed: true,
          ),
          'extendedSizeConstraints': _i2.BuilderArg<_i5.BoxConstraints?>(
            name: 'extendedSizeConstraints',
            init: extendedSizeConstraints,
            isNamed: true,
          ),
          'extendedIconLabelSpacing': _i2.BuilderArg<double?>(
            name: 'extendedIconLabelSpacing',
            init: extendedIconLabelSpacing,
            isNamed: true,
          ),
          'extendedPadding': _i2.BuilderArg<_i6.EdgeInsetsGeometry?>(
            name: 'extendedPadding',
            init: extendedPadding,
            isNamed: true,
          ),
          'extendedTextStyle': _i2.BuilderArg<_i7.TextStyle?>(
            name: 'extendedTextStyle',
            init: extendedTextStyle,
            isNamed: true,
          ),
          'mouseCursor':
              _i2.BuilderArg<_i8.MaterialStateProperty<_i9.MouseCursor?>?>(
            name: 'mouseCursor',
            init: mouseCursor,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'FloatingActionButtonThemeData';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => FloatingActionButtonThemeData$Mate(
          foregroundColor: p.get('foregroundColor').build(),
          backgroundColor: p.get('backgroundColor').build(),
          focusColor: p.get('focusColor').build(),
          hoverColor: p.get('hoverColor').build(),
          splashColor: p.get('splashColor').build(),
          elevation: p.get('elevation').build(),
          focusElevation: p.get('focusElevation').build(),
          hoverElevation: p.get('hoverElevation').build(),
          disabledElevation: p.get('disabledElevation').build(),
          highlightElevation: p.get('highlightElevation').build(),
          shape: p.get('shape').build(),
          enableFeedback: p.get('enableFeedback').build(),
          iconSize: p.get('iconSize').build(),
          sizeConstraints: p.get('sizeConstraints').build(),
          smallSizeConstraints: p.get('smallSizeConstraints').build(),
          largeSizeConstraints: p.get('largeSizeConstraints').build(),
          extendedSizeConstraints: p.get('extendedSizeConstraints').build(),
          extendedIconLabelSpacing: p.get('extendedIconLabelSpacing').build(),
          extendedPadding: p.get('extendedPadding').build(),
          extendedTextStyle: p.get('extendedTextStyle').build(),
          mouseCursor: p.get('mouseCursor').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
