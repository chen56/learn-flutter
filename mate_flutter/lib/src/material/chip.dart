// /// Generated by gen_maters.dart, please don't edit!

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter/src/material/chip.dart' as _i1;
import 'package:mate/mate_core.dart' as _i2;
import 'package:flutter/src/foundation/key.dart' as _i3;
import 'package:flutter/src/widgets/framework.dart' as _i4;
import 'package:flutter/src/painting/text_style.dart' as _i5;
import 'package:flutter/src/painting/edge_insets.dart' as _i6;
import 'dart:ui' as _i7;
import 'package:flutter/src/painting/borders.dart' as _i8;
import 'package:flutter/src/widgets/focus_manager.dart' as _i9;
import 'package:flutter/src/material/material_state.dart' as _i10;
import 'package:flutter/src/material/theme_data.dart' as _i11;
import 'package:flutter/src/widgets/icon_theme_data.dart' as _i12;
import 'package:flutter/src/material/chip_theme.dart' as _i13;
import 'package:flutter/src/foundation/basic_types.dart' as _i14;

/// class Chip extends StatelessWidget implements ChipAttributes, DeletableChipAttributes
class Chip$Mate extends _i1.Chip with _i2.Mate {
  /// Chip Chip({Key? key, Widget? avatar, required Widget label, TextStyle? labelStyle, EdgeInsetsGeometry? labelPadding, Widget? deleteIcon, void Function()? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, BorderSide? side, OutlinedBorder? shape, Clip clipBehavior = Clip.none, FocusNode? focusNode, bool autofocus = false, MaterialStateProperty<Color?>? color, Color? backgroundColor, EdgeInsetsGeometry? padding, VisualDensity? visualDensity, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme})
  Chip$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {Widget? avatar} , default:none
    super.avatar,

    /// optionalParameters: {required Widget label} , default:none
    required super.label,

    /// optionalParameters: {TextStyle? labelStyle} , default:none
    super.labelStyle,

    /// optionalParameters: {EdgeInsetsGeometry? labelPadding} , default:none
    super.labelPadding,

    /// optionalParameters: {Widget? deleteIcon} , default:none
    super.deleteIcon,

    /// optionalParameters: {void Function()? onDeleted} , default:none
    super.onDeleted,

    /// optionalParameters: {Color? deleteIconColor} , default:none
    super.deleteIconColor,

    /// optionalParameters: {String? deleteButtonTooltipMessage} , default:none
    super.deleteButtonTooltipMessage,

    /// optionalParameters: {BorderSide? side} , default:none
    super.side,

    /// optionalParameters: {OutlinedBorder? shape} , default:none
    super.shape,

    /// optionalParameters: {Clip clipBehavior = Clip.none} , default:processed=PrefixedIdentifierImpl
    super.clipBehavior,

    /// optionalParameters: {FocusNode? focusNode} , default:none
    super.focusNode,

    /// optionalParameters: {bool autofocus = false} , default:processed=BooleanLiteralImpl
    super.autofocus,

    /// optionalParameters: {MaterialStateProperty<Color?>? color} , default:none
    super.color,

    /// optionalParameters: {Color? backgroundColor} , default:none
    super.backgroundColor,

    /// optionalParameters: {EdgeInsetsGeometry? padding} , default:none
    super.padding,

    /// optionalParameters: {VisualDensity? visualDensity} , default:none
    super.visualDensity,

    /// optionalParameters: {MaterialTapTargetSize? materialTapTargetSize} , default:none
    super.materialTapTargetSize,

    /// optionalParameters: {double? elevation} , default:none
    super.elevation,

    /// optionalParameters: {Color? shadowColor} , default:none
    super.shadowColor,

    /// optionalParameters: {Color? surfaceTintColor} , default:none
    super.surfaceTintColor,

    /// optionalParameters: {IconThemeData? iconTheme} , default:none
    super.iconTheme,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'avatar': _i2.BuilderArg<_i4.Widget?>(
            name: 'avatar',
            init: avatar,
            isNamed: true,
          ),
          'label': _i2.BuilderArg<_i4.Widget>(
            name: 'label',
            init: label,
            isNamed: true,
          ),
          'labelStyle': _i2.BuilderArg<_i5.TextStyle?>(
            name: 'labelStyle',
            init: labelStyle,
            isNamed: true,
          ),
          'labelPadding': _i2.BuilderArg<_i6.EdgeInsetsGeometry?>(
            name: 'labelPadding',
            init: labelPadding,
            isNamed: true,
          ),
          'deleteIcon': _i2.BuilderArg<_i4.Widget?>(
            name: 'deleteIcon',
            init: deleteIcon,
            isNamed: true,
          ),
          'onDeleted': _i2.BuilderArg<_i7.VoidCallback?>(
            name: 'onDeleted',
            init: onDeleted,
            isNamed: true,
          ),
          'deleteIconColor': _i2.BuilderArg<_i7.Color?>(
            name: 'deleteIconColor',
            init: deleteIconColor,
            isNamed: true,
          ),
          'deleteButtonTooltipMessage': _i2.BuilderArg<String?>(
            name: 'deleteButtonTooltipMessage',
            init: deleteButtonTooltipMessage,
            isNamed: true,
          ),
          'side': _i2.BuilderArg<_i8.BorderSide?>(
            name: 'side',
            init: side,
            isNamed: true,
          ),
          'shape': _i2.BuilderArg<_i8.OutlinedBorder?>(
            name: 'shape',
            init: shape,
            isNamed: true,
          ),
          'clipBehavior': _i2.BuilderArg<_i7.Clip>(
            name: 'clipBehavior',
            init: clipBehavior,
            isNamed: true,
            defaultValue: _i7.Clip.none,
          ),
          'focusNode': _i2.BuilderArg<_i9.FocusNode?>(
            name: 'focusNode',
            init: focusNode,
            isNamed: true,
          ),
          'autofocus': _i2.BuilderArg<bool>(
            name: 'autofocus',
            init: autofocus,
            isNamed: true,
            defaultValue: false,
          ),
          'color': _i2.BuilderArg<_i10.MaterialStateProperty<_i7.Color?>?>(
            name: 'color',
            init: color,
            isNamed: true,
          ),
          'backgroundColor': _i2.BuilderArg<_i7.Color?>(
            name: 'backgroundColor',
            init: backgroundColor,
            isNamed: true,
          ),
          'padding': _i2.BuilderArg<_i6.EdgeInsetsGeometry?>(
            name: 'padding',
            init: padding,
            isNamed: true,
          ),
          'visualDensity': _i2.BuilderArg<_i11.VisualDensity?>(
            name: 'visualDensity',
            init: visualDensity,
            isNamed: true,
          ),
          'materialTapTargetSize': _i2.BuilderArg<_i11.MaterialTapTargetSize?>(
            name: 'materialTapTargetSize',
            init: materialTapTargetSize,
            isNamed: true,
          ),
          'elevation': _i2.BuilderArg<double?>(
            name: 'elevation',
            init: elevation,
            isNamed: true,
          ),
          'shadowColor': _i2.BuilderArg<_i7.Color?>(
            name: 'shadowColor',
            init: shadowColor,
            isNamed: true,
          ),
          'surfaceTintColor': _i2.BuilderArg<_i7.Color?>(
            name: 'surfaceTintColor',
            init: surfaceTintColor,
            isNamed: true,
          ),
          'iconTheme': _i2.BuilderArg<_i12.IconThemeData?>(
            name: 'iconTheme',
            init: iconTheme,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'Chip';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => Chip$Mate(
          key: p.get('key').build(),
          avatar: p.get('avatar').build(),
          label: p.get('label').build(),
          labelStyle: p.get('labelStyle').build(),
          labelPadding: p.get('labelPadding').build(),
          deleteIcon: p.get('deleteIcon').build(),
          onDeleted: p.get('onDeleted').build(),
          deleteIconColor: p.get('deleteIconColor').build(),
          deleteButtonTooltipMessage: p.get('deleteButtonTooltipMessage').build(),
          side: p.get('side').build(),
          shape: p.get('shape').build(),
          clipBehavior: p.get('clipBehavior').build(),
          focusNode: p.get('focusNode').build(),
          autofocus: p.get('autofocus').build(),
          color: p.get('color').build(),
          backgroundColor: p.get('backgroundColor').build(),
          padding: p.get('padding').build(),
          visualDensity: p.get('visualDensity').build(),
          materialTapTargetSize: p.get('materialTapTargetSize').build(),
          elevation: p.get('elevation').build(),
          shadowColor: p.get('shadowColor').build(),
          surfaceTintColor: p.get('surfaceTintColor').build(),
          iconTheme: p.get('iconTheme').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}

/// class RawChip extends StatefulWidget implements ChipAttributes, DeletableChipAttributes, SelectableChipAttributes, CheckmarkableChipAttributes, DisabledChipAttributes, TappableChipAttributes
class RawChip$Mate extends _i1.RawChip with _i2.Mate {
  /// RawChip RawChip({Key? key, ChipThemeData? defaultProperties, Widget? avatar, required Widget label, TextStyle? labelStyle, EdgeInsetsGeometry? padding, VisualDensity? visualDensity, EdgeInsetsGeometry? labelPadding, Widget? deleteIcon, void Function()? onDeleted, Color? deleteIconColor, String? deleteButtonTooltipMessage, void Function()? onPressed, void Function(bool)? onSelected, double? pressElevation, bool tapEnabled = true, bool selected = false, bool isEnabled = true, Color? disabledColor, Color? selectedColor, String? tooltip, BorderSide? side, OutlinedBorder? shape, Clip clipBehavior = Clip.none, FocusNode? focusNode, bool autofocus = false, MaterialStateProperty<Color?>? color, Color? backgroundColor, MaterialTapTargetSize? materialTapTargetSize, double? elevation, Color? shadowColor, Color? surfaceTintColor, IconThemeData? iconTheme, Color? selectedShadowColor, bool? showCheckmark, Color? checkmarkColor, ShapeBorder avatarBorder = const CircleBorder()})
  RawChip$Mate({
    /// optionalParameters: {Key? key} , default:none
    super.key,

    /// optionalParameters: {ChipThemeData? defaultProperties} , default:none
    super.defaultProperties,

    /// optionalParameters: {Widget? avatar} , default:none
    super.avatar,

    /// optionalParameters: {required Widget label} , default:none
    required super.label,

    /// optionalParameters: {TextStyle? labelStyle} , default:none
    super.labelStyle,

    /// optionalParameters: {EdgeInsetsGeometry? padding} , default:none
    super.padding,

    /// optionalParameters: {VisualDensity? visualDensity} , default:none
    super.visualDensity,

    /// optionalParameters: {EdgeInsetsGeometry? labelPadding} , default:none
    super.labelPadding,

    /// optionalParameters: {Widget? deleteIcon} , default:none
    super.deleteIcon,

    /// optionalParameters: {void Function()? onDeleted} , default:none
    super.onDeleted,

    /// optionalParameters: {Color? deleteIconColor} , default:none
    super.deleteIconColor,

    /// optionalParameters: {String? deleteButtonTooltipMessage} , default:none
    super.deleteButtonTooltipMessage,

    /// optionalParameters: {void Function()? onPressed} , default:none
    super.onPressed,

    /// optionalParameters: {void Function(bool)? onSelected} , default:none
    super.onSelected,

    /// optionalParameters: {double? pressElevation} , default:none
    super.pressElevation,

    /// optionalParameters: {bool tapEnabled = true} , default:processed=BooleanLiteralImpl
    super.tapEnabled,

    /// optionalParameters: {bool selected = false} , default:processed=BooleanLiteralImpl
    super.selected,

    /// optionalParameters: {bool isEnabled = true} , default:processed=BooleanLiteralImpl
    super.isEnabled,

    /// optionalParameters: {Color? disabledColor} , default:none
    super.disabledColor,

    /// optionalParameters: {Color? selectedColor} , default:none
    super.selectedColor,

    /// optionalParameters: {String? tooltip} , default:none
    super.tooltip,

    /// optionalParameters: {BorderSide? side} , default:none
    super.side,

    /// optionalParameters: {OutlinedBorder? shape} , default:none
    super.shape,

    /// optionalParameters: {Clip clipBehavior = Clip.none} , default:processed=PrefixedIdentifierImpl
    super.clipBehavior,

    /// optionalParameters: {FocusNode? focusNode} , default:none
    super.focusNode,

    /// optionalParameters: {bool autofocus = false} , default:processed=BooleanLiteralImpl
    super.autofocus,

    /// optionalParameters: {MaterialStateProperty<Color?>? color} , default:none
    super.color,

    /// optionalParameters: {Color? backgroundColor} , default:none
    super.backgroundColor,

    /// optionalParameters: {MaterialTapTargetSize? materialTapTargetSize} , default:none
    super.materialTapTargetSize,

    /// optionalParameters: {double? elevation} , default:none
    super.elevation,

    /// optionalParameters: {Color? shadowColor} , default:none
    super.shadowColor,

    /// optionalParameters: {Color? surfaceTintColor} , default:none
    super.surfaceTintColor,

    /// optionalParameters: {IconThemeData? iconTheme} , default:none
    super.iconTheme,

    /// optionalParameters: {Color? selectedShadowColor} , default:none
    super.selectedShadowColor,

    /// optionalParameters: {bool? showCheckmark} , default:none
    super.showCheckmark,

    /// optionalParameters: {Color? checkmarkColor} , default:none
    super.checkmarkColor,

    /// optionalParameters: {ShapeBorder avatarBorder = const CircleBorder()} , default:unprocessed=InstanceCreationExpressionImpl
    super.avatarBorder,
  })  : mateParams = {
          'key': _i2.BuilderArg<_i3.Key?>(
            name: 'key',
            init: key,
            isNamed: true,
          ),
          'defaultProperties': _i2.BuilderArg<_i13.ChipThemeData?>(
            name: 'defaultProperties',
            init: defaultProperties,
            isNamed: true,
          ),
          'avatar': _i2.BuilderArg<_i4.Widget?>(
            name: 'avatar',
            init: avatar,
            isNamed: true,
          ),
          'label': _i2.BuilderArg<_i4.Widget>(
            name: 'label',
            init: label,
            isNamed: true,
          ),
          'labelStyle': _i2.BuilderArg<_i5.TextStyle?>(
            name: 'labelStyle',
            init: labelStyle,
            isNamed: true,
          ),
          'padding': _i2.BuilderArg<_i6.EdgeInsetsGeometry?>(
            name: 'padding',
            init: padding,
            isNamed: true,
          ),
          'visualDensity': _i2.BuilderArg<_i11.VisualDensity?>(
            name: 'visualDensity',
            init: visualDensity,
            isNamed: true,
          ),
          'labelPadding': _i2.BuilderArg<_i6.EdgeInsetsGeometry?>(
            name: 'labelPadding',
            init: labelPadding,
            isNamed: true,
          ),
          'deleteIcon': _i2.BuilderArg<_i4.Widget?>(
            name: 'deleteIcon',
            init: deleteIcon,
            isNamed: true,
          ),
          'onDeleted': _i2.BuilderArg<_i7.VoidCallback?>(
            name: 'onDeleted',
            init: onDeleted,
            isNamed: true,
          ),
          'deleteIconColor': _i2.BuilderArg<_i7.Color?>(
            name: 'deleteIconColor',
            init: deleteIconColor,
            isNamed: true,
          ),
          'deleteButtonTooltipMessage': _i2.BuilderArg<String?>(
            name: 'deleteButtonTooltipMessage',
            init: deleteButtonTooltipMessage,
            isNamed: true,
          ),
          'onPressed': _i2.BuilderArg<_i7.VoidCallback?>(
            name: 'onPressed',
            init: onPressed,
            isNamed: true,
          ),
          'onSelected': _i2.BuilderArg<_i14.ValueChanged<bool>?>(
            name: 'onSelected',
            init: onSelected,
            isNamed: true,
          ),
          'pressElevation': _i2.BuilderArg<double?>(
            name: 'pressElevation',
            init: pressElevation,
            isNamed: true,
          ),
          'tapEnabled': _i2.BuilderArg<bool>(
            name: 'tapEnabled',
            init: tapEnabled,
            isNamed: true,
            defaultValue: true,
          ),
          'selected': _i2.BuilderArg<bool>(
            name: 'selected',
            init: selected,
            isNamed: true,
            defaultValue: false,
          ),
          'isEnabled': _i2.BuilderArg<bool>(
            name: 'isEnabled',
            init: isEnabled,
            isNamed: true,
            defaultValue: true,
          ),
          'disabledColor': _i2.BuilderArg<_i7.Color?>(
            name: 'disabledColor',
            init: disabledColor,
            isNamed: true,
          ),
          'selectedColor': _i2.BuilderArg<_i7.Color?>(
            name: 'selectedColor',
            init: selectedColor,
            isNamed: true,
          ),
          'tooltip': _i2.BuilderArg<String?>(
            name: 'tooltip',
            init: tooltip,
            isNamed: true,
          ),
          'side': _i2.BuilderArg<_i8.BorderSide?>(
            name: 'side',
            init: side,
            isNamed: true,
          ),
          'shape': _i2.BuilderArg<_i8.OutlinedBorder?>(
            name: 'shape',
            init: shape,
            isNamed: true,
          ),
          'clipBehavior': _i2.BuilderArg<_i7.Clip>(
            name: 'clipBehavior',
            init: clipBehavior,
            isNamed: true,
            defaultValue: _i7.Clip.none,
          ),
          'focusNode': _i2.BuilderArg<_i9.FocusNode?>(
            name: 'focusNode',
            init: focusNode,
            isNamed: true,
          ),
          'autofocus': _i2.BuilderArg<bool>(
            name: 'autofocus',
            init: autofocus,
            isNamed: true,
            defaultValue: false,
          ),
          'color': _i2.BuilderArg<_i10.MaterialStateProperty<_i7.Color?>?>(
            name: 'color',
            init: color,
            isNamed: true,
          ),
          'backgroundColor': _i2.BuilderArg<_i7.Color?>(
            name: 'backgroundColor',
            init: backgroundColor,
            isNamed: true,
          ),
          'materialTapTargetSize': _i2.BuilderArg<_i11.MaterialTapTargetSize?>(
            name: 'materialTapTargetSize',
            init: materialTapTargetSize,
            isNamed: true,
          ),
          'elevation': _i2.BuilderArg<double?>(
            name: 'elevation',
            init: elevation,
            isNamed: true,
          ),
          'shadowColor': _i2.BuilderArg<_i7.Color?>(
            name: 'shadowColor',
            init: shadowColor,
            isNamed: true,
          ),
          'surfaceTintColor': _i2.BuilderArg<_i7.Color?>(
            name: 'surfaceTintColor',
            init: surfaceTintColor,
            isNamed: true,
          ),
          'iconTheme': _i2.BuilderArg<_i12.IconThemeData?>(
            name: 'iconTheme',
            init: iconTheme,
            isNamed: true,
          ),
          'selectedShadowColor': _i2.BuilderArg<_i7.Color?>(
            name: 'selectedShadowColor',
            init: selectedShadowColor,
            isNamed: true,
          ),
          'showCheckmark': _i2.BuilderArg<bool?>(
            name: 'showCheckmark',
            init: showCheckmark,
            isNamed: true,
          ),
          'checkmarkColor': _i2.BuilderArg<_i7.Color?>(
            name: 'checkmarkColor',
            init: checkmarkColor,
            isNamed: true,
          ),
          'avatarBorder': _i2.BuilderArg<_i8.ShapeBorder>(
            name: 'avatarBorder',
            init: avatarBorder,
            isNamed: true,
          ),
        },
        super() {
    mateBuilderName = 'RawChip';
    matePackageUrl = 'package:flutter/material.dart';
    mateBuilder = (p) => RawChip$Mate(
          key: p.get('key').build(),
          defaultProperties: p.get('defaultProperties').build(),
          avatar: p.get('avatar').build(),
          label: p.get('label').build(),
          labelStyle: p.get('labelStyle').build(),
          padding: p.get('padding').build(),
          visualDensity: p.get('visualDensity').build(),
          labelPadding: p.get('labelPadding').build(),
          deleteIcon: p.get('deleteIcon').build(),
          onDeleted: p.get('onDeleted').build(),
          deleteIconColor: p.get('deleteIconColor').build(),
          deleteButtonTooltipMessage: p.get('deleteButtonTooltipMessage').build(),
          onPressed: p.get('onPressed').build(),
          onSelected: p.get('onSelected').build(),
          pressElevation: p.get('pressElevation').build(),
          tapEnabled: p.get('tapEnabled').build(),
          selected: p.get('selected').build(),
          isEnabled: p.get('isEnabled').build(),
          disabledColor: p.get('disabledColor').build(),
          selectedColor: p.get('selectedColor').build(),
          tooltip: p.get('tooltip').build(),
          side: p.get('side').build(),
          shape: p.get('shape').build(),
          clipBehavior: p.get('clipBehavior').build(),
          focusNode: p.get('focusNode').build(),
          autofocus: p.get('autofocus').build(),
          color: p.get('color').build(),
          backgroundColor: p.get('backgroundColor').build(),
          materialTapTargetSize: p.get('materialTapTargetSize').build(),
          elevation: p.get('elevation').build(),
          shadowColor: p.get('shadowColor').build(),
          surfaceTintColor: p.get('surfaceTintColor').build(),
          iconTheme: p.get('iconTheme').build(),
          selectedShadowColor: p.get('selectedShadowColor').build(),
          showCheckmark: p.get('showCheckmark').build(),
          checkmarkColor: p.get('checkmarkColor').build(),
          avatarBorder: p.get('avatarBorder').build(),
        );
  }

  @override
  final Map<String, _i2.BuilderArg> mateParams;
}
